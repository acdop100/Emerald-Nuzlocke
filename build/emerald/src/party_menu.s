@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gUnknown_0203CEC4,object
	.size	 gUnknown_0203CEC4,4
gUnknown_0203CEC4:
	.word	0x0
	.globl	gUnknown_0203CEC8
	.align	2, 0
	.type	 gUnknown_0203CEC8,object
	.size	 gUnknown_0203CEC8,20
gUnknown_0203CEC8:
	.word	0x0
	.space	16
	.align	2, 0
	.type	 gUnknown_0203CEDC,object
	.size	 gUnknown_0203CEDC,4
gUnknown_0203CEDC:
	.word	0x0
	.align	2, 0
	.type	 gUnknown_0203CEE0,object
	.size	 gUnknown_0203CEE0,4
gUnknown_0203CEE0:
	.word	0x0
	.align	2, 0
	.type	 gUnknown_0203CEE4,object
	.size	 gUnknown_0203CEE4,4
gUnknown_0203CEE4:
	.word	0x0
	.globl	gUnknown_0203CEE8
	.type	 gUnknown_0203CEE8,object
	.size	 gUnknown_0203CEE8,1
gUnknown_0203CEE8:
	.byte	0x0
	.globl	gUnknown_0203CEE9
	.type	 gUnknown_0203CEE9,object
	.size	 gUnknown_0203CEE9,1
gUnknown_0203CEE9:
	.byte	0x0
	.globl	gPostMenuFieldCallback
	.align	2, 0
	.type	 gPostMenuFieldCallback,object
	.size	 gPostMenuFieldCallback,4
gPostMenuFieldCallback:
	.word	0x0
	.align	2, 0
	.type	 gUnknown_0203CEF0,object
	.size	 gUnknown_0203CEF0,4
gUnknown_0203CEF0:
	.word	0x0
	.align	2, 0
	.type	 gUnknown_0203CEF4,object
	.size	 gUnknown_0203CEF4,4
gUnknown_0203CEF4:
	.word	0x0
	.globl	gSelectedOrderFromParty
	.type	 gSelectedOrderFromParty,object
	.size	 gSelectedOrderFromParty,4
gSelectedOrderFromParty:
	.byte	0x0
	.space	3
	.align	1, 0
	.type	 gUnknown_0203CEFC,object
	.size	 gUnknown_0203CEFC,2
gUnknown_0203CEFC:
	.short	0x0
	.align	1, 0
	.type	 gUnknown_0203CEFE,object
	.size	 gUnknown_0203CEFE,2
gUnknown_0203CEFE:
	.short	0x0
	.globl	gUnknown_0203CF00
	.type	 gUnknown_0203CF00,object
	.size	 gUnknown_0203CF00,3
gUnknown_0203CF00:
	.byte	0x0
	.space	2
	.globl	gTutorMoves
	.section .rodata
	.align	1, 0
	.type	 gTutorMoves,object
gTutorMoves:
	.short	0x5
	.short	0xe
	.short	0x19
	.short	0x22
	.short	0x26
	.short	0x44
	.short	0x45
	.short	0x66
	.short	0x76
	.short	0x87
	.short	0x8a
	.short	0x56
	.short	0x99
	.short	0x9d
	.short	0xa4
	.short	0xdf
	.short	0xcd
	.short	0xf4
	.short	0xad
	.short	0xc4
	.short	0xcb
	.short	0xbd
	.short	0x8
	.short	0xcf
	.short	0xd6
	.short	0x81
	.short	0x6f
	.short	0x9
	.short	0x7
	.short	0xd2
	.size	 gTutorMoves,60
	.align	2, 0
	.type	 sTutorLearnsets,object
sTutorLearnsets:
	.word	0x0
	.word	0x25b4409a
	.word	0x25b4409a
	.word	0x25b4409a
	.word	0x37b4e0ff
	.word	0x37b4e0ff
	.word	0x37b4e0ff
	.word	0x5fdc0fd
	.word	0x5fdc0fd
	.word	0x5fdc0fd
	.word	0x0
	.word	0x0
	.word	0x3944490
	.word	0x0
	.word	0x0
	.word	0x23944092
	.word	0x3b44090
	.word	0x3b44090
	.word	0x3b44090
	.word	0x7bc48b8
	.word	0x7bc48b8
	.word	0x3b44090
	.word	0x3b44090
	.word	0x1946098
	.word	0x1946098
	.word	0xfb5c8fd
	.word	0xfb5c8fd
	.word	0x27b5e0fa
	.word	0x27b5e0fa
	.word	0x5b440b8
	.word	0x5b440b8
	.word	0x3dfce0fd
	.word	0x5b440b8
	.word	0x5b440b8
	.word	0x3dfce0fd
	.word	0x1df7cffd
	.word	0x1df7cffd
	.word	0x3944098
	.word	0x3944098
	.word	0x1df7ccfd
	.word	0x1df7ccfd
	.word	0x3944090
	.word	0x3944090
	.word	0x1944092
	.word	0x1944092
	.word	0x194409a
	.word	0x219440ba
	.word	0x219440ba
	.word	0x3944090
	.word	0x3944090
	.word	0x1b46098
	.word	0x1b46098
	.word	0x7be4498
	.word	0x7be4498
	.word	0x3fec0fd
	.word	0x23fec0fd
	.word	0x1ff6e1fd
	.word	0x1ff6e1fd
	.word	0x3944098
	.word	0x3944098
	.word	0x59c4098
	.word	0x5fc41fd
	.word	0x5fcc1fd
	.word	0x19d6cdfd
	.word	0x19d6cdfd
	.word	0x19d6cdfd
	.word	0x19f4e1fd
	.word	0x19f4e1fd
	.word	0x19f4e1fd
	.word	0x1944092
	.word	0x1944092
	.word	0x194409a
	.word	0x19c4092
	.word	0x19c4092
	.word	0x15b5f1f9
	.word	0x15b5f1f9
	.word	0x35b5f1fd
	.word	0x3944098
	.word	0x3944098
	.word	0x3be4c98
	.word	0x23feccfd
	.word	0x3954890
	.word	0x3954890
	.word	0x3b6409a
	.word	0x3b44098
	.word	0x3b44098
	.word	0x19c4098
	.word	0x19c4098
	.word	0x19f4d088
	.word	0x19f4d088
	.word	0x39c5090
	.word	0x39c5090
	.word	0x1965480
	.word	0x1965480
	.word	0x19d6d5fd
	.word	0x1b67098
	.word	0x19d6cdfd
	.word	0x19d6cdfd
	.word	0x21bc409a
	.word	0x21bc409a
	.word	0x3955880
	.word	0x3955880
	.word	0x1975490
	.word	0x1975490
	.word	0x19bce0ff
	.word	0x19bce0ff
	.word	0x3b4e1fd
	.word	0x1bf4e1fd
	.word	0x1dffe4ff
	.word	0x1955080
	.word	0x1955080
	.word	0x1bd60ba
	.word	0x39bde0ff
	.word	0x5bfcffd
	.word	0x196409a
	.word	0x39fce0fd
	.word	0x39c4090
	.word	0x39c4090
	.word	0x39c4090
	.word	0x39c4090
	.word	0x39e4890
	.word	0x39e4c90
	.word	0x19f64dfd
	.word	0x239440b2
	.word	0x1fec5fd
	.word	0x1bf4c8fd
	.word	0x19b4c0fd
	.word	0x219460da
	.word	0x19c4098
	.word	0x0
	.word	0x19c4898
	.word	0x19c4498
	.word	0x0
	.word	0x3b44098
	.word	0x3bc4098
	.word	0x3b44898
	.word	0x3b44098
	.word	0x39e4c90
	.word	0x19d6098
	.word	0x19d60d8
	.word	0x19d6098
	.word	0x219d60de
	.word	0x3946090
	.word	0x1dffe1fd
	.word	0x3bc4090
	.word	0x3b44890
	.word	0x3b44090
	.word	0x39c4898
	.word	0x39c4898
	.word	0x3bfcc898
	.word	0x1bfecdfd
	.word	0x3fffffff
	.word	0x1b440ba
	.word	0x21b440ba
	.word	0x21b440ba
	.word	0x7b54098
	.word	0x27b54098
	.word	0x3fb5e0fd
	.word	0x1fce0ff
	.word	0x21fce0ff
	.word	0x21fce0ff
	.word	0x3ff5c098
	.word	0x3ff5c098
	.word	0x3b44490
	.word	0x3b44490
	.word	0xbd5c093
	.word	0xbd5c093
	.word	0x1944098
	.word	0x1944098
	.word	0x3944090
	.word	0x1944890
	.word	0x1944890
	.word	0x7b548fd
	.word	0x5bf4ffd
	.word	0x5bf4cfd
	.word	0x7b74ffd
	.word	0x7b74ffd
	.word	0x3964c90
	.word	0x3964c90
	.word	0x7944898
	.word	0x1f94c8fd
	.word	0x1f94c8fd
	.word	0x1944092
	.word	0x7fdc0dd
	.word	0x7fdc0dd
	.word	0x1df7f0fd
	.word	0x5bcc1fd
	.word	0x5944092
	.word	0x5944092
	.word	0x5944092
	.word	0x3ff4cdfd
	.word	0x1944092
	.word	0x1944092
	.word	0x3944490
	.word	0x5f5c098
	.word	0x5f5c0fd
	.word	0x3b64498
	.word	0x3b64498
	.word	0x3be4c90
	.word	0x23feccfd
	.word	0x7964c90
	.word	0x0
	.word	0x0
	.word	0x3b64c98
	.word	0x59570b8
	.word	0x59570b8
	.word	0x5b76cb8
	.word	0x239464b2
	.word	0x5b57098
	.word	0x1df4c9fd
	.word	0x1df4e9fd
	.word	0x79d4892
	.word	0x239440b2
	.word	0x5b56098
	.word	0x219460fa
	.word	0x27fec4b2
	.word	0x3ff5c1ff
	.word	0x3ff5e1ff
	.word	0x5b56098
	.word	0x5b56098
	.word	0x5bc6098
	.word	0x5bc6098
	.word	0x5b57098
	.word	0x7b44890
	.word	0x7b448d0
	.word	0x3bc40fd
	.word	0x3bc4098
	.word	0x3b460b0
	.word	0x3b444b8
	.word	0x3b444b8
	.word	0x39c4098
	.word	0x5b540b8
	.word	0x5b560b8
	.word	0x79e4c90
	.word	0x3b64c98
	.word	0x0
	.word	0x3b460fc
	.word	0x3b460fc
	.word	0x1fec5fd
	.word	0x1bf4c8fd
	.word	0x19b4c0fd
	.word	0x1dffe9fd
	.word	0x5bdcffd
	.word	0x3b64898
	.word	0x3b64098
	.word	0x3be4098
	.word	0x1b46098
	.word	0x1b46098
	.word	0x31b4e8fd
	.word	0x3be4c98
	.word	0x3b64c90
	.word	0x7b64592
	.space	100
	.word	0x2bb4c0ff
	.word	0x2bb4c0ff
	.word	0x2bb4c0ff
	.word	0x3b460ff
	.word	0x3bb4e0ff
	.word	0x3bb4e0ff
	.word	0x5bd4098
	.word	0x5fde0fd
	.word	0x5fde0fd
	.word	0x1b640b8
	.word	0x1b640b8
	.word	0x27bd4898
	.word	0x27bd4898
	.word	0x0
	.word	0x0
	.word	0x3944090
	.word	0x0
	.word	0x3944090
	.word	0x19c409a
	.word	0x19fcc09a
	.word	0x19fcc1ff
	.word	0x595509a
	.word	0x27b7509e
	.word	0x27b7509e
	.word	0x21b44090
	.word	0x23b44092
	.word	0x21b44490
	.word	0x3b440b0
	.word	0x3b440b0
	.word	0x194409a
	.word	0x29b4c0ff
	.word	0x1fffe5fd
	.word	0x3bc4090
	.word	0x3bc4090
	.word	0x39e4090
	.word	0x39e4090
	.word	0x59d4098
	.word	0x59d4098
	.word	0x7bf4c98
	.word	0x7bf4c98
	.word	0x3fffe9fd
	.word	0x1b67490
	.word	0x1b67490
	.word	0x1df5f898
	.word	0x1b47098
	.word	0x39f6c5fd
	.word	0x1bc4090
	.word	0x1bc6090
	.word	0x39e4090
	.word	0x21bc40ba
	.word	0x23bc40ba
	.word	0x39c4090
	.word	0x3be4098
	.word	0x23bc4090
	.word	0x23bc4090
	.word	0x1b46098
	.word	0x3b46098
	.word	0x33b46098
	.word	0x19f4e1fd
	.word	0x19f4e1fd
	.word	0x3b44898
	.word	0x3b44898
	.word	0x5b56098
	.word	0x5b57098
	.word	0x5bd6098
	.word	0x5bd6098
	.word	0x5bd6098
	.word	0x29b4c0fb
	.word	0x29b4c0ff
	.word	0x19c4098
	.word	0x59d5098
	.word	0x7977498
	.word	0x7977498
	.word	0x7bd4098
	.word	0x39e4498
	.word	0x1bfec4fd
	.word	0xfb5c9fd
	.word	0xfb5c9fd
	.word	0x9fee0ff
	.word	0x1bf6c5fd
	.word	0x1bf6e5fd
	.word	0x3b64498
	.word	0x3b64498
	.word	0x0
	.word	0x19e4498
	.word	0x19fee5fd
	.word	0x23b6409a
	.word	0x39fce0fd
	.word	0x39fce0fd
	.word	0x39fce0fd
	.word	0x1df5d4b8
	.word	0x1df5d4b8
	.word	0x21b4409a
	.word	0x1dffc0fd
	.word	0x1dffe0fd
	.word	0x1dffe0fd
	.word	0x19c4098
	.word	0x3bc4098
	.word	0x3bc4098
	.word	0x23be6cba
	.word	0x19e4c98
	.word	0x1be4d98
	.word	0x23b44098
	.word	0x3ffde8ff
	.word	0x1be6098
	.word	0x25b56098
	.word	0x25b56098
	.word	0x3dfde8fd
	.word	0x79e4898
	.word	0xbf6c9fd
	.word	0xbf6c9fd
	.word	0x1b66098
	.word	0x1b66098
	.word	0x21b4609a
	.word	0x21b460da
	.word	0x1dfe4c98
	.word	0x1dfe4c98
	.word	0x1dfe4c98
	.word	0x21b46098
	.word	0x25b56098
	.word	0x27b56098
	.word	0x0
	.word	0x2ffff098
	.word	0x2ffff098
	.word	0x1df7f8fd
	.word	0xdfff8fd
	.word	0xdf7f8fd
	.word	0x7be6898
	.word	0x3fb7e8ff
	.word	0x23be6898
	.word	0x23be4c98
	.word	0x23be4c98
	.word	0x1ffecd98
	.word	0x1bfeecfd
	.word	0x59f4490
	.size	 sTutorLearnsets,1648
	.align	2, 0
	.type	 gUnknown_086156B8,object
	.size	 gUnknown_086156B8,12
gUnknown_086156B8:
	.byte	0xf0
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0xe1
	.byte	0x21
	.byte	0x0
	.space	1
	.byte	0xc2
	.byte	0x3
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 gUnknown_086156C4,object
gUnknown_086156C4:
	.word	BlitBitmapToPartyWindow_Default1
	.byte	0x18
	.byte	0xb
	.byte	0x28
	.byte	0xd
	.byte	0x20
	.byte	0x14
	.byte	0x20
	.byte	0x8
	.byte	0x40
	.byte	0x14
	.byte	0x8
	.byte	0x8
	.byte	0x26
	.byte	0x25
	.byte	0x18
	.byte	0x8
	.byte	0x35
	.byte	0x25
	.byte	0x18
	.byte	0x8
	.byte	0x18
	.byte	0x23
	.byte	0x30
	.byte	0x3
	.byte	0xc
	.byte	0x22
	.byte	0x40
	.byte	0x10
	.word	BlitBitmapToPartyWindow_Default2
	.byte	0x16
	.byte	0x3
	.byte	0x28
	.byte	0xd
	.byte	0x1e
	.byte	0xc
	.byte	0x20
	.byte	0x8
	.byte	0x3e
	.byte	0xc
	.byte	0x8
	.byte	0x8
	.byte	0x66
	.byte	0xc
	.byte	0x18
	.byte	0x8
	.byte	0x75
	.byte	0xc
	.byte	0x18
	.byte	0x8
	.byte	0x58
	.byte	0xa
	.byte	0x30
	.byte	0x3
	.byte	0x4d
	.byte	0x4
	.byte	0x40
	.byte	0x10
	.size	 gUnknown_086156C4,64
	.type	 gUnknown_08615704,object
gUnknown_08615704:
	.byte	0x10
	.byte	0x28
	.byte	0x14
	.byte	0x32
	.byte	0x32
	.byte	0x34
	.byte	0x10
	.byte	0x22
	.byte	0x68
	.byte	0x12
	.byte	0x6c
	.byte	0x1c
	.byte	0x88
	.byte	0x1b
	.byte	0x66
	.byte	0x19
	.byte	0x68
	.byte	0x2a
	.byte	0x6c
	.byte	0x34
	.byte	0x88
	.byte	0x33
	.byte	0x66
	.byte	0x31
	.byte	0x68
	.byte	0x42
	.byte	0x6c
	.byte	0x4c
	.byte	0x88
	.byte	0x4b
	.byte	0x66
	.byte	0x49
	.byte	0x68
	.byte	0x5a
	.byte	0x6c
	.byte	0x64
	.byte	0x88
	.byte	0x63
	.byte	0x66
	.byte	0x61
	.byte	0x68
	.byte	0x72
	.byte	0x6c
	.byte	0x7c
	.byte	0x88
	.byte	0x7b
	.byte	0x66
	.byte	0x79
	.byte	0x10
	.byte	0x18
	.byte	0x14
	.byte	0x22
	.byte	0x32
	.byte	0x24
	.byte	0x10
	.byte	0x12
	.byte	0x10
	.byte	0x50
	.byte	0x14
	.byte	0x5a
	.byte	0x32
	.byte	0x5c
	.byte	0x10
	.byte	0x4a
	.byte	0x68
	.byte	0x12
	.byte	0x6c
	.byte	0x1c
	.byte	0x88
	.byte	0x1b
	.byte	0x66
	.byte	0x19
	.byte	0x68
	.byte	0x32
	.byte	0x6c
	.byte	0x3c
	.byte	0x88
	.byte	0x3b
	.byte	0x66
	.byte	0x39
	.byte	0x68
	.byte	0x52
	.byte	0x6c
	.byte	0x5c
	.byte	0x88
	.byte	0x5b
	.byte	0x66
	.byte	0x59
	.byte	0x68
	.byte	0x72
	.byte	0x6c
	.byte	0x7c
	.byte	0x88
	.byte	0x7b
	.byte	0x66
	.byte	0x79
	.byte	0x10
	.byte	0x18
	.byte	0x14
	.byte	0x22
	.byte	0x32
	.byte	0x24
	.byte	0x10
	.byte	0x12
	.byte	0x10
	.byte	0x50
	.byte	0x14
	.byte	0x5a
	.byte	0x32
	.byte	0x5c
	.byte	0x10
	.byte	0x4a
	.byte	0x68
	.byte	0x1a
	.byte	0x6a
	.byte	0x24
	.byte	0x88
	.byte	0x23
	.byte	0x66
	.byte	0x21
	.byte	0x68
	.byte	0x32
	.byte	0x6a
	.byte	0x3c
	.byte	0x88
	.byte	0x3b
	.byte	0x66
	.byte	0x39
	.byte	0x68
	.byte	0x52
	.byte	0x6a
	.byte	0x5c
	.byte	0x88
	.byte	0x5b
	.byte	0x66
	.byte	0x59
	.byte	0x68
	.byte	0x6a
	.byte	0x6a
	.byte	0x74
	.byte	0x88
	.byte	0x73
	.byte	0x66
	.byte	0x71
	.byte	0x10
	.byte	0x20
	.byte	0x14
	.byte	0x2a
	.byte	0x32
	.byte	0x2c
	.byte	0x10
	.byte	0x1a
	.byte	0x68
	.byte	0x22
	.byte	0x6a
	.byte	0x2c
	.byte	0x88
	.byte	0x2b
	.byte	0x66
	.byte	0x29
	.byte	0x68
	.byte	0x3a
	.byte	0x6a
	.byte	0x44
	.byte	0x88
	.byte	0x43
	.byte	0x66
	.byte	0x41
	.byte	0x10
	.byte	0x68
	.byte	0x14
	.byte	0x72
	.byte	0x32
	.byte	0x74
	.byte	0x10
	.byte	0x62
	.byte	0x68
	.byte	0x6a
	.byte	0x6a
	.byte	0x74
	.byte	0x88
	.byte	0x73
	.byte	0x66
	.byte	0x71
	.byte	0x68
	.byte	0x82
	.byte	0x6a
	.byte	0x8c
	.byte	0x88
	.byte	0x8b
	.byte	0x66
	.byte	0x89
	.size	 gUnknown_08615704,192
	.align	2, 0
	.type	 gUnknown_086157C4,object
gUnknown_086157C4:
	.word	0x101c101b
	.word	0x101c101c
	.word	0x101c101c
	.word	0x1023101d
	.word	0x181c181c
	.word	0x181c181c
	.word	0x1024181c
	.size	 gUnknown_086157C4,28
	.align	2, 0
	.type	 gUnknown_086157E0,object
gUnknown_086157E0:
	.word	0x100b100a
	.word	0x100b100b
	.word	0x100b100b
	.word	0x1012100c
	.word	0x180b180b
	.word	0x180b180b
	.word	0x1013180b
	.size	 gUnknown_086157E0,28
	.type	 sFontColorTable,object
sFontColorTable:
	.byte	0x0
	.byte	0x3
	.byte	0x2
	.byte	0x0
	.byte	0x1
	.byte	0x6
	.byte	0x0
	.byte	0xb
	.byte	0xc
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x1
	.byte	0x8
	.byte	0x9
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.size	 sFontColorTable,18
	.align	2, 0
	.type	 gUnknown_08615810,object
gUnknown_08615810:
	.byte	0x0
	.byte	0x1
	.byte	0x3
	.byte	0xa
	.byte	0x7
	.byte	0x3
	.short	0x63
	.byte	0x0
	.byte	0xc
	.byte	0x1
	.byte	0x12
	.byte	0x3
	.byte	0x4
	.short	0xa9
	.byte	0x0
	.byte	0xc
	.byte	0x4
	.byte	0x12
	.byte	0x3
	.byte	0x5
	.short	0xdf
	.byte	0x0
	.byte	0xc
	.byte	0x7
	.byte	0x12
	.byte	0x3
	.byte	0x6
	.short	0x115
	.byte	0x0
	.byte	0xc
	.byte	0xa
	.byte	0x12
	.byte	0x3
	.byte	0x7
	.short	0x14b
	.byte	0x0
	.byte	0xc
	.byte	0xd
	.byte	0x12
	.byte	0x3
	.byte	0x8
	.short	0x181
	.byte	0x2
	.byte	0x1
	.byte	0xf
	.byte	0x1c
	.byte	0x4
	.byte	0xe
	.short	0x1df
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 gUnknown_08615810,64
	.align	2, 0
	.type	 gUnknown_08615850,object
gUnknown_08615850:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xa
	.byte	0x7
	.byte	0x3
	.short	0x63
	.byte	0x0
	.byte	0x1
	.byte	0x8
	.byte	0xa
	.byte	0x7
	.byte	0x4
	.short	0xa9
	.byte	0x0
	.byte	0xc
	.byte	0x1
	.byte	0x12
	.byte	0x3
	.byte	0x5
	.short	0xef
	.byte	0x0
	.byte	0xc
	.byte	0x5
	.byte	0x12
	.byte	0x3
	.byte	0x6
	.short	0x125
	.byte	0x0
	.byte	0xc
	.byte	0x9
	.byte	0x12
	.byte	0x3
	.byte	0x7
	.short	0x15b
	.byte	0x0
	.byte	0xc
	.byte	0xd
	.byte	0x12
	.byte	0x3
	.byte	0x8
	.short	0x191
	.byte	0x2
	.byte	0x1
	.byte	0xf
	.byte	0x1c
	.byte	0x4
	.byte	0xe
	.short	0x1df
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 gUnknown_08615850,64
	.align	2, 0
	.type	 gUnknown_08615890,object
gUnknown_08615890:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xa
	.byte	0x7
	.byte	0x3
	.short	0x63
	.byte	0x0
	.byte	0x1
	.byte	0x8
	.byte	0xa
	.byte	0x7
	.byte	0x4
	.short	0xa9
	.byte	0x0
	.byte	0xc
	.byte	0x2
	.byte	0x12
	.byte	0x3
	.byte	0x5
	.short	0xef
	.byte	0x0
	.byte	0xc
	.byte	0x5
	.byte	0x12
	.byte	0x3
	.byte	0x6
	.short	0x125
	.byte	0x0
	.byte	0xc
	.byte	0x9
	.byte	0x12
	.byte	0x3
	.byte	0x7
	.short	0x15b
	.byte	0x0
	.byte	0xc
	.byte	0xc
	.byte	0x12
	.byte	0x3
	.byte	0x8
	.short	0x191
	.byte	0x2
	.byte	0x1
	.byte	0xf
	.byte	0x1c
	.byte	0x4
	.byte	0xe
	.short	0x1df
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 gUnknown_08615890,64
	.align	2, 0
	.type	 gUnknown_086158D0,object
gUnknown_086158D0:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0xa
	.byte	0x7
	.byte	0x3
	.short	0x63
	.byte	0x0
	.byte	0xc
	.byte	0x3
	.byte	0x12
	.byte	0x3
	.byte	0x5
	.short	0xa9
	.byte	0x0
	.byte	0xc
	.byte	0x6
	.byte	0x12
	.byte	0x3
	.byte	0x6
	.short	0xdf
	.byte	0x2
	.byte	0x1
	.byte	0xb
	.byte	0xa
	.byte	0x7
	.byte	0x4
	.short	0x115
	.byte	0x2
	.byte	0xc
	.byte	0xc
	.byte	0x12
	.byte	0x3
	.byte	0x7
	.short	0x16b
	.byte	0x2
	.byte	0xc
	.byte	0xf
	.byte	0x12
	.byte	0x3
	.byte	0x8
	.short	0x1a1
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 gUnknown_086158D0,56
	.align	2, 0
	.type	 gUnknown_08615908,object
	.size	 gUnknown_08615908,8
gUnknown_08615908:
	.byte	0x0
	.byte	0x18
	.byte	0x11
	.byte	0x6
	.byte	0x2
	.byte	0x3
	.short	0x1c7
	.align	2, 0
	.type	 gUnknown_08615910,object
	.size	 gUnknown_08615910,8
gUnknown_08615910:
	.byte	0x0
	.byte	0x18
	.byte	0x12
	.byte	0x6
	.byte	0x2
	.byte	0x3
	.short	0x1c7
	.align	2, 0
	.type	 gUnknown_08615918,object
	.size	 gUnknown_08615918,8
gUnknown_08615918:
	.byte	0x0
	.byte	0x18
	.byte	0x10
	.byte	0x6
	.byte	0x2
	.byte	0x3
	.short	0x1d3
	.align	2, 0
	.type	 gUnknown_08615920,object
	.size	 gUnknown_08615920,8
gUnknown_08615920:
	.byte	0x2
	.byte	0x1
	.byte	0x11
	.byte	0x15
	.byte	0x2
	.byte	0xf
	.short	0x24f
	.align	2, 0
	.type	 gUnknown_08615928,object
	.size	 gUnknown_08615928,8
gUnknown_08615928:
	.byte	0x2
	.byte	0x1
	.byte	0x11
	.byte	0x10
	.byte	0x2
	.byte	0xf
	.short	0x279
	.align	2, 0
	.type	 gUnknown_08615930,object
	.size	 gUnknown_08615930,8
gUnknown_08615930:
	.byte	0x2
	.byte	0x1
	.byte	0x11
	.byte	0x14
	.byte	0x2
	.byte	0xf
	.short	0x299
	.align	2, 0
	.type	 gUnknown_08615938,object
	.size	 gUnknown_08615938,8
gUnknown_08615938:
	.byte	0x2
	.byte	0x1
	.byte	0x11
	.byte	0x12
	.byte	0x2
	.byte	0xf
	.short	0x299
	.align	2, 0
	.type	 gUnknown_08615940,object
	.size	 gUnknown_08615940,8
gUnknown_08615940:
	.byte	0x2
	.byte	0x1
	.byte	0x11
	.byte	0x10
	.byte	0x2
	.byte	0xf
	.short	0x299
	.align	2, 0
	.type	 gUnknown_08615948,object
	.size	 gUnknown_08615948,8
gUnknown_08615948:
	.byte	0x2
	.byte	0x1
	.byte	0xf
	.byte	0x14
	.byte	0x4
	.byte	0xf
	.short	0x299
	.align	2, 0
	.type	 gUnknown_08615950,object
	.size	 gUnknown_08615950,8
gUnknown_08615950:
	.byte	0x2
	.byte	0x17
	.byte	0xd
	.byte	0x6
	.byte	0x6
	.byte	0xe
	.short	0x39d
	.align	2, 0
	.type	 gUnknown_08615958,object
	.size	 gUnknown_08615958,8
gUnknown_08615958:
	.byte	0x2
	.byte	0x15
	.byte	0xd
	.byte	0x8
	.byte	0x6
	.byte	0xe
	.short	0x39d
	.align	2, 0
	.type	 gUnknown_08615960,object
	.size	 gUnknown_08615960,8
gUnknown_08615960:
	.byte	0x2
	.byte	0x13
	.byte	0xb
	.byte	0xa
	.byte	0x8
	.byte	0xe
	.short	0x2e9
	.align	2, 0
	.type	 gUnknown_08615968,object
	.size	 gUnknown_08615968,8
gUnknown_08615968:
	.byte	0x2
	.byte	0x15
	.byte	0x9
	.byte	0x5
	.byte	0x4
	.byte	0xe
	.short	0x2e9
	.align	2, 0
	.type	 gUnknown_08615970,object
	.size	 gUnknown_08615970,8
gUnknown_08615970:
	.byte	0x2
	.byte	0x13
	.byte	0x1
	.byte	0xa
	.byte	0xb
	.byte	0xe
	.short	0x2e9
	.align	2, 0
	.type	 gUnknown_08615978,object
	.size	 gUnknown_08615978,8
gUnknown_08615978:
	.byte	0x2
	.byte	0x2
	.byte	0xf
	.byte	0x1b
	.byte	0x4
	.byte	0xe
	.short	0x1df
	.align	2, 0
	.type	 gUnknown_08615980,object
	.size	 gUnknown_08615980,8
gUnknown_08615980:
	.byte	0x2
	.byte	0x0
	.byte	0xd
	.byte	0x12
	.byte	0x3
	.byte	0xc
	.short	0x39d
	.type	 sMainSlotTileNums,object
sMainSlotTileNums:
	.byte	0x18
	.byte	0x19
	.byte	0x19
	.byte	0x19
	.byte	0x19
	.byte	0x19
	.byte	0x19
	.byte	0x19
	.byte	0x19
	.byte	0x1a
	.byte	0x20
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x22
	.byte	0x20
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x22
	.byte	0x20
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x22
	.byte	0x28
	.byte	0x3b
	.byte	0x3c
	.byte	0x3a
	.byte	0x3a
	.byte	0x3a
	.byte	0x3a
	.byte	0x3a
	.byte	0x3a
	.byte	0x3d
	.byte	0xf
	.byte	0x10
	.byte	0x10
	.byte	0x10
	.byte	0x10
	.byte	0x10
	.byte	0x10
	.byte	0x10
	.byte	0x10
	.byte	0x11
	.byte	0x2e
	.byte	0x2f
	.byte	0x2f
	.byte	0x2f
	.byte	0x2f
	.byte	0x2f
	.byte	0x2f
	.byte	0x2f
	.byte	0x2f
	.byte	0x30
	.size	 sMainSlotTileNums,70
	.type	 sMainSlotTileNums_Egg,object
sMainSlotTileNums_Egg:
	.byte	0x18
	.byte	0x19
	.byte	0x19
	.byte	0x19
	.byte	0x19
	.byte	0x19
	.byte	0x19
	.byte	0x19
	.byte	0x19
	.byte	0x1a
	.byte	0x20
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x22
	.byte	0x20
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x22
	.byte	0x20
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x22
	.byte	0x28
	.byte	0x29
	.byte	0x29
	.byte	0x29
	.byte	0x29
	.byte	0x29
	.byte	0x29
	.byte	0x29
	.byte	0x29
	.byte	0x2a
	.byte	0xf
	.byte	0x10
	.byte	0x10
	.byte	0x10
	.byte	0x10
	.byte	0x10
	.byte	0x10
	.byte	0x10
	.byte	0x10
	.byte	0x11
	.byte	0x2e
	.byte	0x2f
	.byte	0x2f
	.byte	0x2f
	.byte	0x2f
	.byte	0x2f
	.byte	0x2f
	.byte	0x2f
	.byte	0x2f
	.byte	0x30
	.size	 sMainSlotTileNums_Egg,70
	.type	 sOtherSlotsTileNums,object
sOtherSlotsTileNums:
	.byte	0x2b
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2d
	.byte	0x31
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x34
	.byte	0x35
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x36
	.byte	0x37
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x39
	.size	 sOtherSlotsTileNums,54
	.type	 sOtherSlotsTileNums_Egg,object
sOtherSlotsTileNums_Egg:
	.byte	0x2b
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2c
	.byte	0x2d
	.byte	0x31
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x21
	.byte	0x32
	.byte	0x37
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x38
	.byte	0x39
	.size	 sOtherSlotsTileNums_Egg,54
	.type	 sEmptySlotTileNums,object
sEmptySlotTileNums:
	.byte	0x15
	.byte	0x16
	.byte	0x16
	.byte	0x16
	.byte	0x16
	.byte	0x16
	.byte	0x16
	.byte	0x16
	.byte	0x16
	.byte	0x16
	.byte	0x16
	.byte	0x16
	.byte	0x16
	.byte	0x16
	.byte	0x16
	.byte	0x16
	.byte	0x16
	.byte	0x17
	.byte	0x1e
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1f
	.byte	0x25
	.byte	0x26
	.byte	0x26
	.byte	0x26
	.byte	0x26
	.byte	0x26
	.byte	0x26
	.byte	0x26
	.byte	0x26
	.byte	0x26
	.byte	0x26
	.byte	0x26
	.byte	0x26
	.byte	0x26
	.byte	0x26
	.byte	0x26
	.byte	0x26
	.byte	0x27
	.size	 sEmptySlotTileNums,54
	.type	 gUnknown_08615AB6,object
gUnknown_08615AB6:
	.byte	0xb
	.byte	0xc
	.size	 gUnknown_08615AB6,2
	.type	 gUnknown_08615AB8,object
gUnknown_08615AB8:
	.byte	0x9
	.byte	0xa
	.size	 gUnknown_08615AB8,2
	.type	 gUnknown_08615ABA,object
gUnknown_08615ABA:
	.byte	0x4
	.byte	0x5
	.byte	0x6
	.size	 gUnknown_08615ABA,3
	.type	 gUnknown_08615ABD,object
gUnknown_08615ABD:
	.byte	0x1
	.byte	0x7
	.byte	0x8
	.size	 gUnknown_08615ABD,3
	.type	 gUnknown_08615AC0,object
gUnknown_08615AC0:
	.byte	0x1
	.byte	0xb
	.byte	0xc
	.size	 gUnknown_08615AC0,3
	.type	 gUnknown_08615AC3,object
gUnknown_08615AC3:
	.byte	0x3b
	.byte	0x3c
	.size	 gUnknown_08615AC3,2
	.type	 gUnknown_08615AC5,object
gUnknown_08615AC5:
	.byte	0x4b
	.byte	0x4c
	.size	 gUnknown_08615AC5,2
	.type	 gUnknown_08615AC7,object
gUnknown_08615AC7:
	.byte	0x39
	.byte	0x3a
	.size	 gUnknown_08615AC7,2
	.type	 gUnknown_08615AC9,object
gUnknown_08615AC9:
	.byte	0x49
	.byte	0x4a
	.size	 gUnknown_08615AC9,2
	.type	 gUnknown_08615ACB,object
gUnknown_08615ACB:
	.byte	0x59
	.byte	0x5a
	.size	 gUnknown_08615ACB,2
	.type	 gUnknown_08615ACD,object
gUnknown_08615ACD:
	.byte	0x34
	.byte	0x35
	.byte	0x36
	.size	 gUnknown_08615ACD,3
	.type	 gUnknown_08615AD0,object
gUnknown_08615AD0:
	.byte	0x44
	.byte	0x45
	.byte	0x46
	.size	 gUnknown_08615AD0,3
	.type	 gUnknown_08615AD3,object
gUnknown_08615AD3:
	.byte	0x54
	.byte	0x55
	.byte	0x56
	.size	 gUnknown_08615AD3,3
	.type	 gUnknown_08615AD6,object
gUnknown_08615AD6:
	.byte	0x74
	.byte	0x75
	.byte	0x76
	.size	 gUnknown_08615AD6,3
	.type	 gUnknown_08615AD9,object
gUnknown_08615AD9:
	.byte	0x84
	.byte	0x85
	.byte	0x86
	.size	 gUnknown_08615AD9,3
	.type	 gUnknown_08615ADC,object
gUnknown_08615ADC:
	.byte	0x94
	.byte	0x95
	.byte	0x96
	.size	 gUnknown_08615ADC,3
	.type	 gUnknown_08615ADF,object
gUnknown_08615ADF:
	.byte	0x64
	.byte	0x65
	.byte	0x66
	.size	 gUnknown_08615ADF,3
	.type	 gUnknown_08615AE2,object
gUnknown_08615AE2:
	.byte	0x31
	.byte	0x37
	.byte	0x38
	.size	 gUnknown_08615AE2,3
	.type	 gUnknown_08615AE5,object
gUnknown_08615AE5:
	.byte	0x41
	.byte	0x47
	.byte	0x48
	.size	 gUnknown_08615AE5,3
	.type	 gUnknown_08615AE8,object
gUnknown_08615AE8:
	.byte	0x51
	.byte	0x57
	.byte	0x58
	.size	 gUnknown_08615AE8,3
	.type	 gUnknown_08615AEB,object
gUnknown_08615AEB:
	.byte	0x61
	.byte	0x67
	.byte	0x68
	.size	 gUnknown_08615AEB,3
	.type	 gUnknown_08615AEE,object
gUnknown_08615AEE:
	.byte	0xa1
	.byte	0xa7
	.byte	0xa8
	.size	 gUnknown_08615AEE,3
	.type	 gUnknown_08615AF1,object
gUnknown_08615AF1:
	.byte	0x11
	.byte	0x1b
	.byte	0x1c
	.size	 gUnknown_08615AF1,3
	.align	2, 0
	.type	 sActionStringTable,object
sActionStringTable:
	.word	gText_ChoosePokemon
	.word	gText_ChoosePokemonCancel
	.word	gText_ChoosePokemonConfirm
	.word	gText_MoveToWhere
	.word	gText_TeachWhichPokemon
	.word	gText_UseOnWhichPokemon
	.word	gText_GiveToWhichPokemon
	.word	gText_NothingToCut
	.word	gText_CantSurfHere
	.word	gText_AlreadySurfing
	.word	gText_CurrentIsTooFast
	.word	gText_EnjoyCycling
	.word	gText_InUseAlready_PM
	.word	gText_CantUseHere
	.word	gText_NoPokemonForBattle
	.word	gText_ChoosePokemon2
	.word	gText_NotEnoughHp
	.word	gText_PokemonAreNeeded
	.word	gText_PokemonCantBeSame
	.word	gText_NoIdenticalHoldItems
	.word	gText_EmptyString2
	.word	gText_DoWhatWithPokemon
	.word	gText_RestoreWhichMove
	.word	gText_BoostPp
	.word	gText_DoWhatWithItem
	.word	gText_DoWhatWithMail
	.word	gText_AlreadyHoldingOne
	.size	 sActionStringTable,108
	.align	2, 0
	.type	 sSelectionStringTable,object
sSelectionStringTable:
	.word	gText_NoUse
	.word	gText_Able
	.word	gText_First_PM
	.word	gText_Second_PM
	.word	gText_Third_PM
	.word	gText_Fourth
	.word	gText_Able2
	.word	gText_NotAble
	.word	gText_Able3
	.word	gText_NotAble2
	.word	gText_Learned
	.word	gText_Have
	.word	gText_DontHave
	.size	 sSelectionStringTable,52
	.align	1, 0
	.type	 gUnknown_08615B94,object
gUnknown_08615B94:
	.short	0x108
	.short	0x151
	.short	0x160
	.short	0x15b
	.short	0x2e
	.short	0x5c
	.short	0x102
	.short	0x153
	.short	0x14b
	.short	0xed
	.short	0xf1
	.short	0x10d
	.short	0x3a
	.short	0x3b
	.short	0x3f
	.short	0x71
	.short	0xb6
	.short	0xf0
	.short	0xca
	.short	0xdb
	.short	0xda
	.short	0x4c
	.short	0xe7
	.short	0x55
	.short	0x57
	.short	0x59
	.short	0xd8
	.short	0x5b
	.short	0x5e
	.short	0xf7
	.short	0x118
	.short	0x68
	.short	0x73
	.short	0x15f
	.short	0x35
	.short	0xbc
	.short	0xc9
	.short	0x7e
	.short	0x13d
	.short	0x14c
	.short	0x103
	.short	0x107
	.short	0x122
	.short	0x9c
	.short	0xd5
	.short	0xa8
	.short	0xd3
	.short	0x11d
	.short	0x121
	.short	0x13b
	.short	0xf
	.short	0x13
	.short	0x39
	.short	0x46
	.short	0x94
	.short	0xf9
	.short	0x7f
	.short	0x123
	.size	 gUnknown_08615B94,116
	.align	2, 0
	.type	 sCursorOptions,object
sCursorOptions:
	.word	gText_Summary5
	.word	CursorCb_Summary
	.word	gText_Switch2
	.word	CursorCb_Switch
	.word	gText_Cancel2
	.word	CursorCb_Cancel1
	.word	gText_Item
	.word	CursorCb_Item
	.word	gMenuText_Give
	.word	CursorCb_Give
	.word	gText_Take
	.word	CursorCb_TakeItem
	.word	gText_Mail
	.word	CursorCb_Mail
	.word	gText_Take2
	.word	CursorCb_TakeMail
	.word	gText_Read2
	.word	CursorCb_Read
	.word	gText_Cancel2
	.word	CursorCb_Cancel2
	.word	gText_Shift
	.word	CursorCb_SendMon
	.word	gText_SendOut
	.word	CursorCb_SendMon
	.word	gText_Enter
	.word	CursorCb_Enter
	.word	gText_NoEntry
	.word	CursorCb_NoEntry
	.word	gText_Store
	.word	CursorCb_Store
	.word	gText_Register
	.word	CursorCb_Register
	.word	gText_Trade4
	.word	CursorCb_Trade1
	.word	gText_Trade4
	.word	CursorCb_Trade2
	.word	gMenuText_Toss
	.word	CursorCb_Toss
	.word	gMoveNames+0xc3
	.word	CursorCb_FieldMove
	.word	gMoveNames+0x784
	.word	CursorCb_FieldMove
	.word	gMoveNames+0xca5
	.word	CursorCb_FieldMove
	.word	gMoveNames+0x38e
	.word	CursorCb_FieldMove
	.word	gMoveNames+0x2e5
	.word	CursorCb_FieldMove
	.word	gMoveNames+0xf7
	.word	CursorCb_FieldMove
	.word	gMoveNames+0xec7
	.word	CursorCb_FieldMove
	.word	gMoveNames+0x673
	.word	CursorCb_FieldMove
	.word	gMoveNames+0x514
	.word	CursorCb_FieldMove
	.word	gMoveNames+0x49f
	.word	CursorCb_FieldMove
	.word	gMoveNames+0xeba
	.word	CursorCb_FieldMove
	.word	gMoveNames+0xa90
	.word	CursorCb_FieldMove
	.word	gMoveNames+0x6db
	.word	CursorCb_FieldMove
	.word	gMoveNames+0xbae
	.word	CursorCb_FieldMove
	.size	 sCursorOptions,264
	.type	 gUnknown_08615D10,object
gUnknown_08615D10:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.size	 gUnknown_08615D10,3
	.type	 gUnknown_08615D13,object
gUnknown_08615D13:
	.byte	0xa
	.byte	0x0
	.byte	0x2
	.size	 gUnknown_08615D13,3
	.type	 gUnknown_08615D16,object
gUnknown_08615D16:
	.byte	0xb
	.byte	0x0
	.byte	0x2
	.size	 gUnknown_08615D16,3
	.type	 gUnknown_08615D19,object
gUnknown_08615D19:
	.byte	0x0
	.byte	0x2
	.size	 gUnknown_08615D19,2
	.type	 gUnknown_08615D1B,object
gUnknown_08615D1B:
	.byte	0xc
	.byte	0x0
	.byte	0x2
	.size	 gUnknown_08615D1B,3
	.type	 gUnknown_08615D1E,object
gUnknown_08615D1E:
	.byte	0xd
	.byte	0x0
	.byte	0x2
	.size	 gUnknown_08615D1E,3
	.type	 gUnknown_08615D21,object
gUnknown_08615D21:
	.byte	0xe
	.byte	0x0
	.byte	0x2
	.size	 gUnknown_08615D21,3
	.type	 gUnknown_08615D24,object
gUnknown_08615D24:
	.byte	0x4
	.byte	0x5
	.byte	0x9
	.size	 gUnknown_08615D24,3
	.type	 gUnknown_08615D27,object
gUnknown_08615D27:
	.byte	0x8
	.byte	0x7
	.byte	0x9
	.size	 gUnknown_08615D27,3
	.type	 gUnknown_08615D2A,object
gUnknown_08615D2A:
	.byte	0xf
	.byte	0x0
	.byte	0x2
	.size	 gUnknown_08615D2A,3
	.type	 gUnknown_08615D2D,object
gUnknown_08615D2D:
	.byte	0x10
	.byte	0x0
	.byte	0x2
	.size	 gUnknown_08615D2D,3
	.type	 gUnknown_08615D30,object
gUnknown_08615D30:
	.byte	0x11
	.byte	0x0
	.byte	0x2
	.size	 gUnknown_08615D30,3
	.type	 gUnknown_08615D33,object
gUnknown_08615D33:
	.byte	0x5
	.byte	0x12
	.byte	0x2
	.size	 gUnknown_08615D33,3
	.align	2, 0
	.type	 sActionTable,object
sActionTable:
	.word	0x0
	.word	gUnknown_08615D10
	.word	gUnknown_08615D13
	.word	gUnknown_08615D16
	.word	gUnknown_08615D1B
	.word	gUnknown_08615D1E
	.word	gUnknown_08615D21
	.word	gUnknown_08615D19
	.word	gUnknown_08615D24
	.word	gUnknown_08615D27
	.word	gUnknown_08615D2A
	.word	gUnknown_08615D2D
	.word	gUnknown_08615D30
	.word	gUnknown_08615D33
	.size	 sActionTable,56
	.type	 sListSizeTable,object
sListSizeTable:
	.byte	0x0
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x2
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.size	 sListSizeTable,14
	.align	1, 0
	.type	 sFieldMoves,object
sFieldMoves:
	.short	0xf
	.short	0x94
	.short	0xf9
	.short	0x46
	.short	0x39
	.short	0x13
	.short	0x123
	.short	0x7f
	.short	0x64
	.short	0x5b
	.short	0x122
	.short	0xd0
	.short	0x87
	.short	0xe6
	.short	0xe
	.size	 sFieldMoves,30
	.align	2, 0
	.type	 sFieldMoveCursorCallbacks,object
sFieldMoveCursorCallbacks:
	.word	SetUpFieldMove_Cut
	.byte	0x7
	.space	3
	.word	SetUpFieldMove_Flash
	.byte	0xd
	.space	3
	.word	SetUpFieldMove_RockSmash
	.byte	0xd
	.space	3
	.word	SetUpFieldMove_Strength
	.byte	0xd
	.space	3
	.word	SetUpFieldMove_Surf
	.byte	0x8
	.space	3
	.word	SetUpFieldMove_Fly
	.byte	0xd
	.space	3
	.word	SetUpFieldMove_Dive
	.byte	0xd
	.space	3
	.word	SetUpFieldMove_Waterfall
	.byte	0xd
	.space	3
	.word	SetUpFieldMove_Teleport
	.byte	0xd
	.space	3
	.word	SetUpFieldMove_Dig
	.byte	0xd
	.space	3
	.word	SetUpFieldMove_SecretPower
	.byte	0xd
	.space	3
	.word	SetUpFieldMove_SoftBoiled
	.byte	0x10
	.space	3
	.word	SetUpFieldMove_SoftBoiled
	.byte	0x10
	.space	3
	.word	SetUpFieldMove_SweetScent
	.byte	0xd
	.space	3
	.size	 sFieldMoveCursorCallbacks,112
	.align	2, 0
	.type	 gUnknown_08615E0C,object
gUnknown_08615E0C:
	.word	gText_NotPkmnOtherTrainerWants
	.word	gText_ThatIsntAnEgg
	.word	gText_PkmnCantBeTradedNow
	.word	gText_PkmnCantBeTradedNow
	.word	gText_OtherTrainersPkmnCantBeTraded
	.word	gText_EggCantBeTradedNow
	.word	gText_OtherTrainerCantAcceptPkmn
	.word	gText_CantTradeWithTrainer
	.word	gText_CantTradeWithTrainer
	.size	 gUnknown_08615E0C,36
	.align	2, 0
	.type	 sHeldItemGfx,object
sHeldItemGfx:
	.word	0x0
	.word	0x5444450
	.word	-0xabbbbb0
	.word	-0xabbbbb0
	.word	-0x8999990
	.word	-0x8999990
	.word	-0xabbbbb0
	.word	-0x100
	.word	0x0
	.word	0x1111110
	.word	-0xceeeed0
	.word	-0xeceecf0
	.word	-0xddccde0
	.word	-0xddddde0
	.word	-0x100
	.word	0x0
	.size	 sHeldItemGfx,64
	.align	1, 0
	.type	 sHeldItemPalette,object
sHeldItemPalette:
	.short	0x3727
	.short	0x7fff
	.short	0x7f5a
	.short	0x5a52
	.short	0x4fdf
	.short	0x3b7b
	.short	0x155e
	.short	0x2974
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x318c
	.size	 sHeldItemPalette,32
	.align	2, 0
	.type	 sOamData_HeldItem,object
	.size	 sOamData_HeldItem,8
sOamData_HeldItem:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_HeldItem,object
sSpriteAnim_HeldItem:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_HeldItem,8
	.align	2, 0
	.type	 sSpriteAnim_HeldMail,object
sSpriteAnim_HeldMail:
	.short	0x1
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_HeldMail,8
	.align	2, 0
	.type	 sSpriteAnimTable_HeldItem,object
sSpriteAnimTable_HeldItem:
	.word	sSpriteAnim_HeldItem
	.word	sSpriteAnim_HeldMail
	.size	 sSpriteAnimTable_HeldItem,8
	.align	2, 0
	.type	 sSpriteSheet_HeldItem,object
	.size	 sSpriteSheet_HeldItem,8
sSpriteSheet_HeldItem:
	.word	sHeldItemGfx
	.short	0x40
	.short	0xd750
	.align	2, 0
	.type	 sSpritePalette_HeldItem,object
	.size	 sSpritePalette_HeldItem,8
sSpritePalette_HeldItem:
	.word	sHeldItemPalette
	.short	0xd750
	.space	2
	.align	2, 0
	.type	 sSpriteTemplate_HeldItem,object
	.size	 sSpriteTemplate_HeldItem,24
sSpriteTemplate_HeldItem:
	.short	0xd750
	.short	0xd750
	.word	sOamData_HeldItem
	.word	sSpriteAnimTable_HeldItem
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sOamData_MenuPokeball,object
	.size	 sOamData_MenuPokeball,8
sOamData_MenuPokeball:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sPokeballAnim_Closed,object
sPokeballAnim_Closed:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sPokeballAnim_Closed,8
	.align	2, 0
	.type	 sPokeballAnim_Open,object
sPokeballAnim_Open:
	.short	0x10
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sPokeballAnim_Open,8
	.align	2, 0
	.type	 sSpriteAnimTable_Pokeball,object
sSpriteAnimTable_Pokeball:
	.word	sPokeballAnim_Closed
	.word	sPokeballAnim_Open
	.size	 sSpriteAnimTable_Pokeball,8
	.align	2, 0
	.type	 sSpriteSheet_MenuPokeball,object
	.size	 sSpriteSheet_MenuPokeball,8
sSpriteSheet_MenuPokeball:
	.word	gPartyMenuPokeball_Gfx
	.short	0x400
	.short	0x4b0
	.align	2, 0
	.type	 sSpritePalette_MenuPokeball,object
	.size	 sSpritePalette_MenuPokeball,8
sSpritePalette_MenuPokeball:
	.word	gPartyMenuPokeball_Pal
	.short	0x4b0
	.space	2
	.align	2, 0
	.type	 sSpriteTemplate_MenuPokeball,object
	.size	 sSpriteTemplate_MenuPokeball,24
sSpriteTemplate_MenuPokeball:
	.short	0x4b0
	.short	0x4b0
	.word	sOamData_MenuPokeball
	.word	sSpriteAnimTable_Pokeball
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sOamData_8615F20,object
	.size	 sOamData_8615F20,8
sOamData_8615F20:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x8
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_8615F28,object
sSpriteAnim_8615F28:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8615F28,8
	.align	2, 0
	.type	 sSpriteAnim_8615F30,object
sSpriteAnim_8615F30:
	.short	0x4
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8615F30,8
	.align	2, 0
	.type	 sSpriteAnim_8615F38,object
sSpriteAnim_8615F38:
	.short	0x8
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8615F38,8
	.align	2, 0
	.type	 sSpriteAnim_8615F40,object
sSpriteAnim_8615F40:
	.short	0xc
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8615F40,8
	.align	2, 0
	.type	 sSpriteAnim_8615F48,object
sSpriteAnim_8615F48:
	.short	0x10
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8615F48,8
	.align	2, 0
	.type	 sSpriteAnim_8615F50,object
sSpriteAnim_8615F50:
	.short	0x14
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8615F50,8
	.align	2, 0
	.type	 sSpriteAnimTable_8615F58,object
sSpriteAnimTable_8615F58:
	.word	sSpriteAnim_8615F28
	.word	sSpriteAnim_8615F30
	.word	sSpriteAnim_8615F38
	.word	sSpriteAnim_8615F40
	.word	sSpriteAnim_8615F48
	.word	sSpriteAnim_8615F50
	.size	 sSpriteAnimTable_8615F58,24
	.align	2, 0
	.type	 sSpriteSheet_MenuPokeballSmall,object
	.size	 sSpriteSheet_MenuPokeballSmall,8
sSpriteSheet_MenuPokeballSmall:
	.word	gPartyMenuPokeballSmall_Gfx
	.short	0x300
	.short	0x4b1
	.align	2, 0
	.type	 gSpriteTemplate_8615F78,object
	.size	 gSpriteTemplate_8615F78,24
gSpriteTemplate_8615F78:
	.short	0x4b1
	.short	0x4b0
	.word	sOamData_8615F20
	.word	sSpriteAnimTable_8615F58
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sOamData_StatusCondition,object
	.size	 sOamData_StatusCondition,8
sOamData_StatusCondition:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_StatusPoison,object
sSpriteAnim_StatusPoison:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_StatusPoison,8
	.align	2, 0
	.type	 sSpriteAnim_StatusParalyzed,object
sSpriteAnim_StatusParalyzed:
	.short	0x4
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_StatusParalyzed,8
	.align	2, 0
	.type	 sSpriteAnim_StatusSleep,object
sSpriteAnim_StatusSleep:
	.short	0x8
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_StatusSleep,8
	.align	2, 0
	.type	 sSpriteAnim_StatusFrozen,object
sSpriteAnim_StatusFrozen:
	.short	0xc
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_StatusFrozen,8
	.align	2, 0
	.type	 sSpriteAnim_StatusBurn,object
sSpriteAnim_StatusBurn:
	.short	0x10
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_StatusBurn,8
	.align	2, 0
	.type	 sSpriteAnim_StatusPokerus,object
sSpriteAnim_StatusPokerus:
	.short	0x14
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_StatusPokerus,8
	.align	2, 0
	.type	 sSpriteAnim_StatusFaint,object
sSpriteAnim_StatusFaint:
	.short	0x18
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_StatusFaint,8
	.align	2, 0
	.type	 sSpriteAnim_Blank,object
sSpriteAnim_Blank:
	.short	0x1c
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_Blank,8
	.align	2, 0
	.type	 sSpriteTemplate_StatusCondition,object
sSpriteTemplate_StatusCondition:
	.word	sSpriteAnim_StatusPoison
	.word	sSpriteAnim_StatusParalyzed
	.word	sSpriteAnim_StatusSleep
	.word	sSpriteAnim_StatusFrozen
	.word	sSpriteAnim_StatusBurn
	.word	sSpriteAnim_StatusPokerus
	.word	sSpriteAnim_StatusFaint
	.word	sSpriteAnim_Blank
	.size	 sSpriteTemplate_StatusCondition,32
	.align	2, 0
	.type	 sSpriteSheet_StatusIcons,object
	.size	 sSpriteSheet_StatusIcons,8
sSpriteSheet_StatusIcons:
	.word	gStatusGfx_Icons
	.short	0x400
	.short	0x4b2
	.align	2, 0
	.type	 sSpritePalette_StatusIcons,object
	.size	 sSpritePalette_StatusIcons,8
sSpritePalette_StatusIcons:
	.word	gStatusPal_Icons
	.short	0x4b2
	.space	2
	.align	2, 0
	.type	 sSpriteTemplate_StatusIcons,object
	.size	 sSpriteTemplate_StatusIcons,24
sSpriteTemplate_StatusIcons:
	.short	0x4b2
	.short	0x4b2
	.word	sOamData_StatusCondition
	.word	sSpriteTemplate_StatusCondition
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.type	 gUnknown_08616020,object
gUnknown_08616020:
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.size	 gUnknown_08616020,8
	.align	2, 0
	.type	 gUnknown_08616028,object
gUnknown_08616028:
	.word	gText_HP4
	.word	gText_Attack3
	.word	gText_Defense3
	.word	gText_SpAtk4
	.word	gText_SpDef4
	.word	gText_Speed2
	.size	 gUnknown_08616028,24
	.align	1, 0
	.type	 gTMHMMoves,object
gTMHMMoves:
	.short	0x108
	.short	0x151
	.short	0x160
	.short	0x15b
	.short	0x2e
	.short	0x5c
	.short	0x102
	.short	0x153
	.short	0x14b
	.short	0xed
	.short	0xf1
	.short	0x10d
	.short	0x3a
	.short	0x3b
	.short	0x3f
	.short	0x71
	.short	0xb6
	.short	0xf0
	.short	0xca
	.short	0xdb
	.short	0xda
	.short	0x4c
	.short	0xe7
	.short	0x55
	.short	0x57
	.short	0x59
	.short	0xd8
	.short	0x5b
	.short	0x5e
	.short	0xf7
	.short	0x118
	.short	0x68
	.short	0x73
	.short	0x15f
	.short	0x35
	.short	0xbc
	.short	0xc9
	.short	0x7e
	.short	0x13d
	.short	0x14c
	.short	0x103
	.short	0x107
	.short	0x122
	.short	0x9c
	.short	0xd5
	.short	0xa8
	.short	0xd3
	.short	0x11d
	.short	0x121
	.short	0x13b
	.short	0xf
	.short	0x13
	.short	0x39
	.short	0x46
	.short	0x94
	.short	0xf9
	.short	0x7f
	.short	0x123
	.size	 gTMHMMoves,116
.text
	.align	2, 0
	.type	 InitPartyMenu,function
	.thumb_func
InitPartyMenu:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	ldr	r4, [sp, #0x24]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r3, [sp]
	lsl	r4, r4, #0x18
	lsr	r6, r4, #0x18
	bl	reset_brm
	ldr	r0, .L23
	mov	sl, r0
	mov	r0, #0x8e
	lsl	r0, r0, #0x2
	bl	Alloc
	add	r5, r0, #0
	mov	r1, sl
	str	r5, [r1]
	cmp	r5, #0
	bne	.L3	@cond_branch
	ldr	r0, [sp, #0x2c]
	bl	SetMainCallback2
	b	.L4
.L24:
	.align	2, 0
.L23:
	.word	gUnknown_0203CEC4
.L3:
	ldr	r3, .L25
	mov	r1, #0xf
	mov	r4, r8
	and	r1, r1, r4
	ldrb	r2, [r3, #0x8]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x8]
	ldr	r0, [sp, #0x2c]
	str	r0, [r3]
	mov	r4, #0x0
	strb	r7, [r3, #0xb]
	lsl	r2, r6, #0x2
	ldrh	r1, [r5, #0xa]
	mov	r0, #0x3
	and	r0, r0, r1
	orr	r0, r0, r2
	strh	r0, [r5, #0xa]
	ldr	r0, [sp, #0x28]
	str	r0, [r5]
	str	r4, [r5, #0x4]
	ldrb	r1, [r5, #0x8]
	mov	r0, #0xf
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r5, #0x8]
	mov	r1, sl
	ldr	r2, [r1]
	ldrh	r0, [r2, #0x8]
	mov	r4, #0xfe
	lsl	r4, r4, #0x3
	add	r1, r4, #0
	orr	r0, r0, r1
	strh	r0, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r1, #0xfe
	lsl	r1, r1, #0xa
	orr	r0, r0, r1
	str	r0, [r2, #0x8]
	add	r6, r3, #0
	mov	r5, r8
	cmp	r5, #0x4
	bne	.L5	@cond_branch
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x1
	orr	r0, r0, r1
	b	.L22
.L26:
	.align	2, 0
.L25:
	.word	gUnknown_0203CEC8
.L5:
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r1
.L22:
	strb	r0, [r2, #0x8]
	mov	r0, r9
	cmp	r0, #0xff
	beq	.L7	@cond_branch
	mov	r0, #0x3
	mov	r1, r9
	and	r0, r0, r1
	lsl	r0, r0, #0x4
	ldrb	r2, [r6, #0x8]
	mov	r1, #0x31
	neg	r1, r1
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r6, #0x8]
.L7:
	mov	r2, #0x0
	ldr	r5, .L27
	mov	r4, #0x86
	lsl	r4, r4, #0x2
	mov	r3, #0x0
.L11:
	ldr	r0, [r5]
	lsl	r1, r2, #0x1
	add	r0, r0, r4
	add	r0, r0, r1
	strh	r3, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0xf
	bls	.L11	@cond_branch
	mov	r2, #0x0
	ldr	r4, .L27
	mov	r3, #0xff
.L16:
	ldr	r0, [r4]
	add	r0, r0, #0xc
	add	r0, r0, r2
	ldrb	r1, [r0]
	orr	r1, r1, r3
	strb	r1, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x2
	bls	.L16	@cond_branch
	ldr	r4, [sp]
	cmp	r4, #0
	bne	.L18	@cond_branch
	strb	r4, [r6, #0x9]
	b	.L19
.L28:
	.align	2, 0
.L27:
	.word	gUnknown_0203CEC4
.L18:
	add	r1, r6, #0
	mov	r0, #0x9
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x5
	bgt	.L21	@cond_branch
	add	r1, r0, #0
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L29
	add	r0, r0, r1
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	bne	.L19	@cond_branch
.L21:
	mov	r0, #0x0
	strb	r0, [r6, #0x9]
.L19:
	ldr	r2, .L29+0x4
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	bl	CalculatePlayerPartyCount
	ldr	r0, .L29+0x8
	bl	SetMainCallback2
.L4:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L30:
	.align	2, 0
.L29:
	.word	gPlayerParty
	.word	gTextFlags
	.word	PartyMenuInitCallback
.Lfe1:
	.size	 InitPartyMenu,.Lfe1-InitPartyMenu
	.align	2, 0
	.type	 PartyMenuCallback,function
	.thumb_func
PartyMenuCallback:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	do_scheduled_bg_tilemap_copies_to_vram
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 PartyMenuCallback,.Lfe2-PartyMenuCallback
	.align	2, 0
	.type	 PartyMenuVBlankCallback,function
	.thumb_func
PartyMenuVBlankCallback:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 PartyMenuVBlankCallback,.Lfe3-PartyMenuVBlankCallback
	.align	2, 0
	.type	 PartyMenuInitCallback,function
	.thumb_func
PartyMenuInitCallback:
	push	{lr}
.L34:
	bl	sub_81221EC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L35	@cond_branch
	bl	PartyMenuSetup
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L35	@cond_branch
	bl	sub_81221AC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L34	@cond_branch
.L35:
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 PartyMenuInitCallback,.Lfe4-PartyMenuInitCallback
	.align	2, 0
	.type	 PartyMenuSetup,function
	.thumb_func
PartyMenuSetup:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L76
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0x16
	bls	.LCB315
	b	.L71	@long jump
.LCB315:
	lsl	r0, r0, #0x2
	ldr	r1, .L76+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L77:
	.align	2, 0
.L76:
	.word	gMain
	.word	.L72
	.align	2, 0
	.align	2, 0
.L72:
	.word	.L42
	.word	.L43
	.word	.L44
	.word	.L45
	.word	.L46
	.word	.L47
	.word	.L49
	.word	.L50
	.word	.L53
	.word	.L55
	.word	.L56
	.word	.L57
	.word	.L58
	.word	.L59
	.word	.L60
	.word	.L61
	.word	.L63
	.word	.L65
	.word	.L66
	.word	.L67
	.word	.L68
	.word	.L69
	.word	.L70
.L42:
	bl	SetVBlankHBlankCallbacksToNull
	bl	ResetVramOamAndBgCntRegs
	bl	clear_scheduled_bg_copies_to_vram
	ldr	r1, .L78
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L74
.L79:
	.align	2, 0
.L78:
	.word	gMain
.L43:
	bl	ScanlineEffect_Stop
	b	.L75
.L44:
	bl	ResetPaletteFade
	ldr	r2, .L80
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r1, .L80+0x4
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L74
.L81:
	.align	2, 0
.L80:
	.word	gPaletteFade
	.word	gMain
.L45:
	bl	ResetSpriteData
	b	.L75
.L46:
	bl	FreeAllSpritePalettes
	ldr	r1, .L82
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L74
.L83:
	.align	2, 0
.L82:
	.word	gMain
.L47:
	bl	sub_81221AC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB403
	b	.L75	@long jump
.LCB403:
	bl	ResetTasks
	b	.L75
.L49:
	bl	sub_81B209C
	ldr	r1, .L84
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L74
.L85:
	.align	2, 0
.L84:
	.word	gMain
.L50:
	bl	AllocPartyMenuBg
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L51	@cond_branch
	bl	PartyMenuExit
	mov	r0, #0x1
	b	.L73
.L51:
	ldr	r0, .L86
	ldr	r0, [r0]
	mov	r1, #0x86
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	b	.L75
.L87:
	.align	2, 0
.L86:
	.word	gUnknown_0203CEC4
.L53:
	bl	AllocPartyMiscGfx
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB461
	b	.L41	@long jump
.LCB461:
	ldr	r1, .L88
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L74
.L89:
	.align	2, 0
.L88:
	.word	gMain
.L55:
	ldr	r0, .L90
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1e
	bl	sub_81B239C
	b	.L75
.L91:
	.align	2, 0
.L90:
	.word	gUnknown_0203CEC8
.L56:
	ldr	r0, .L92
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1e
	bl	PartyMenuInitHelperStructs
	ldr	r0, .L92+0x4
	ldr	r0, [r0]
	mov	r1, #0x86
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	b	.L75
.L93:
	.align	2, 0
.L92:
	.word	gUnknown_0203CEC8
	.word	gUnknown_0203CEC4
.L57:
	bl	LoadHeldItemIcons
	ldr	r1, .L94
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L74
.L95:
	.align	2, 0
.L94:
	.word	gMain
.L58:
	bl	LoadPartyMenuPokeballGfx
	b	.L75
.L59:
	bl	LoadPartyMenuAilmentGfx
	ldr	r1, .L96
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L74
.L97:
	.align	2, 0
.L96:
	.word	gMain
.L60:
	bl	LoadMonIconPalettes
	b	.L75
.L61:
	bl	party_menu_add_per_mon_objects
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB566
	b	.L41	@long jump
.LCB566:
	ldr	r0, .L98
	ldr	r0, [r0]
	mov	r1, #0x86
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	b	.L75
.L99:
	.align	2, 0
.L98:
	.word	gUnknown_0203CEC4
.L63:
	bl	RenderPartyMenuBoxes
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L41	@cond_branch
	ldr	r0, .L100
	ldr	r0, [r0]
	mov	r1, #0x86
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	b	.L75
.L101:
	.align	2, 0
.L100:
	.word	gUnknown_0203CEC4
.L65:
	bl	sub_81B0F28
	ldr	r1, .L102
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L74
.L103:
	.align	2, 0
.L102:
	.word	gMain
.L66:
	ldr	r0, .L104
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1f
	lsr	r0, r0, #0x1f
	bl	sub_81B2428
	b	.L75
.L105:
	.align	2, 0
.L104:
	.word	gUnknown_0203CEC4
.L67:
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r2, r0
	b	.L74
.L68:
	ldr	r4, .L106
	ldr	r0, [r4]
	ldr	r0, [r0]
	mov	r1, #0x0
	bl	CreateTask
	ldr	r0, [r4]
	ldrh	r0, [r0, #0xa]
	lsr	r0, r0, #0x2
	bl	display_pokemon_menu_message
	b	.L75
.L107:
	.align	2, 0
.L106:
	.word	gUnknown_0203CEC4
.L69:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	ldr	r2, .L108
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r1, .L108+0x4
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L74
.L109:
	.align	2, 0
.L108:
	.word	gPaletteFade
	.word	gMain
.L70:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
.L75:
	ldr	r1, .L110
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
.L74:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L41
.L111:
	.align	2, 0
.L110:
	.word	gMain
.L71:
	ldr	r0, .L112
	bl	SetVBlankCallback
	ldr	r0, .L112+0x4
	bl	SetMainCallback2
	mov	r0, #0x1
	b	.L73
.L113:
	.align	2, 0
.L112:
	.word	PartyMenuVBlankCallback
	.word	PartyMenuCallback
.L41:
	mov	r0, #0x0
.L73:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 PartyMenuSetup,.Lfe5-PartyMenuSetup
	.align	2, 0
	.type	 PartyMenuExit,function
	.thumb_func
PartyMenuExit:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L115
	mov	r1, #0x0
	bl	CreateTask
	ldr	r0, .L115+0x4
	bl	SetVBlankCallback
	ldr	r0, .L115+0x8
	bl	SetMainCallback2
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L116:
	.align	2, 0
.L115:
	.word	PartyMenuExitTask
	.word	PartyMenuVBlankCallback
	.word	PartyMenuCallback
.Lfe6:
	.size	 PartyMenuExit,.Lfe6-PartyMenuExit
	.align	2, 0
	.type	 PartyMenuExitTask,function
	.thumb_func
PartyMenuExitTask:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L119
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L118	@cond_branch
	ldr	r0, .L119+0x4
	ldr	r0, [r0]
	bl	SetMainCallback2
	bl	FreePartyPointers
	add	r0, r4, #0
	bl	DestroyTask
.L118:
	pop	{r4}
	pop	{r0}
	bx	r0
.L120:
	.align	2, 0
.L119:
	.word	gPaletteFade
	.word	gUnknown_0203CEC8
.Lfe7:
	.size	 PartyMenuExitTask,.Lfe7-PartyMenuExitTask
	.align	2, 0
	.type	 reset_brm,function
	.thumb_func
reset_brm:
	ldr	r0, .L122
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r0, .L122+0x4
	str	r1, [r0]
	ldr	r0, .L122+0x8
	str	r1, [r0]
	ldr	r0, .L122+0xc
	str	r1, [r0]
	bx	lr
.L123:
	.align	2, 0
.L122:
	.word	gUnknown_0203CEC4
	.word	gUnknown_0203CEE4
	.word	gUnknown_0203CEDC
	.word	gUnknown_0203CEE0
.Lfe8:
	.size	 reset_brm,.Lfe8-reset_brm
	.align	2, 0
	.type	 AllocPartyMenuBg,function
	.thumb_func
AllocPartyMenuBg:
	push	{r4, r5, lr}
	ldr	r5, .L127
	mov	r4, #0x80
	lsl	r4, r4, #0x4
	add	r0, r4, #0
	bl	Alloc
	str	r0, [r5]
	cmp	r0, #0
	beq	.L125	@cond_branch
	mov	r1, #0x0
	add	r2, r4, #0
	bl	memset
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L127+0x4
	mov	r0, #0x0
	mov	r2, #0x3
	bl	InitBgsFromTemplates
	ldr	r1, [r5]
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	bl	ResetAllBgsCoordinates
	mov	r0, #0x1
	bl	schedule_bg_copy_tilemap_to_vram
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x1
	b	.L126
.L128:
	.align	2, 0
.L127:
	.word	gUnknown_0203CEE4
	.word	gUnknown_086156B8
.L125:
	mov	r0, #0x0
.L126:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 AllocPartyMenuBg,.Lfe9-AllocPartyMenuBg
	.align	2, 0
	.type	 AllocPartyMiscGfx,function
	.thumb_func
AllocPartyMiscGfx:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L146
	ldr	r0, [r0]
	mov	r1, #0x86
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x7
	bhi	.L140	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L146+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L147:
	.align	2, 0
.L146:
	.word	gUnknown_0203CEC4
	.word	.L141
	.align	2, 0
	.align	2, 0
.L141:
	.word	.L131
	.word	.L132
	.word	.L134
	.word	.L135
	.word	.L136
	.word	.L137
	.word	.L138
	.word	.L139
.L131:
	ldr	r4, .L148
	ldr	r0, .L148+0x4
	mov	r1, sp
	bl	malloc_and_decompress
	add	r1, r0, #0
	str	r1, [r4]
	ldr	r2, [sp]
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r0, #0x1
	mov	r3, #0x0
	bl	LoadBgTiles
	b	.L143
.L149:
	.align	2, 0
.L148:
	.word	gUnknown_0203CEE0
	.word	gPartyMenuMisc_Gfx
.L132:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L130	@cond_branch
	ldr	r0, .L150
	ldr	r1, .L150+0x4
	ldr	r1, [r1]
	bl	LZDecompressWram
	b	.L143
.L151:
	.align	2, 0
.L150:
	.word	gPartyMenuMisc_Tilemap
	.word	gUnknown_0203CEE4
.L134:
	ldr	r0, .L152
	mov	r2, #0xb0
	lsl	r2, r2, #0x1
	mov	r1, #0x0
	bl	LoadCompressedPalette
	ldr	r0, .L152+0x4
	ldr	r4, .L152+0x8
	ldr	r1, [r4]
	add	r1, r1, #0x18
	mov	r2, #0xb0
	bl	CpuSet
	ldr	r1, [r4]
	b	.L144
.L153:
	.align	2, 0
.L152:
	.word	gPartyMenuMisc_Pal
	.word	gPlttBufferUnfaded
	.word	gUnknown_0203CEC4
.L135:
	mov	r0, #0x4
	b	.L145
.L136:
	mov	r0, #0x5
	b	.L145
.L137:
	mov	r0, #0x6
	b	.L145
.L138:
	mov	r0, #0x7
	b	.L145
.L139:
	mov	r0, #0x8
.L145:
	bl	PartyPaletteBufferCopy
.L143:
	ldr	r0, .L154
	ldr	r1, [r0]
.L144:
	mov	r0, #0x86
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	b	.L130
.L155:
	.align	2, 0
.L154:
	.word	gUnknown_0203CEC4
.L140:
	mov	r0, #0x1
	b	.L142
.L130:
	mov	r0, #0x0
.L142:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 AllocPartyMiscGfx,.Lfe10-AllocPartyMiscGfx
	.align	2, 0
	.type	 PartyPaletteBufferCopy,function
	.thumb_func
PartyPaletteBufferCopy:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x1c
	ldr	r5, .L157
	lsr	r4, r4, #0x17
	add	r1, r5, #0
	sub	r1, r1, #0x60
	add	r1, r4, r1
	add	r0, r5, #0
	mov	r2, #0x10
	bl	CpuSet
	ldr	r0, .L157+0x4
	add	r4, r4, r0
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, #0x10
	bl	CpuSet
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L158:
	.align	2, 0
.L157:
	.word	gPlttBufferUnfaded+0x60
	.word	gPlttBufferFaded
.Lfe11:
	.size	 PartyPaletteBufferCopy,.Lfe11-PartyPaletteBufferCopy
	.align	2, 0
	.type	 FreePartyPointers,function
	.thumb_func
FreePartyPointers:
	push	{lr}
	ldr	r0, .L164
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L160	@cond_branch
	bl	Free
.L160:
	ldr	r0, .L164+0x4
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L161	@cond_branch
	bl	Free
.L161:
	ldr	r0, .L164+0x8
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L162	@cond_branch
	bl	Free
.L162:
	ldr	r0, .L164+0xc
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L163	@cond_branch
	bl	Free
.L163:
	bl	FreeAllWindowBuffers
	pop	{r0}
	bx	r0
.L165:
	.align	2, 0
.L164:
	.word	gUnknown_0203CEC4
	.word	gUnknown_0203CEE4
	.word	gUnknown_0203CEE0
	.word	gUnknown_0203CEDC
.Lfe12:
	.size	 FreePartyPointers,.Lfe12-FreePartyPointers
	.align	2, 0
	.type	 PartyMenuInitHelperStructs,function
	.thumb_func
PartyMenuInitHelperStructs:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r4, .L175
	mov	r0, #0x60
	bl	Alloc
	str	r0, [r4]
	mov	r5, #0x0
	lsl	r0, r7, #0x1
	add	r0, r0, r7
	lsl	r0, r0, #0x4
	mov	r8, r0
	mov	r6, #0xff
	mov	r9, r4
.L170:
	ldr	r2, [r4]
	lsl	r3, r5, #0x4
	add	r2, r3, r2
	ldr	r0, .L175+0x4
	mov	ip, r0
	str	r0, [r2]
	lsl	r0, r5, #0x3
	ldr	r1, .L175+0x8
	add	r0, r0, r1
	add	r0, r0, r8
	str	r0, [r2, #0x4]
	strb	r5, [r2, #0x8]
	ldr	r1, [r4]
	add	r1, r3, r1
	ldrb	r0, [r1, #0x9]
	orr	r0, r0, r6
	strb	r0, [r1, #0x9]
	ldr	r1, [r4]
	add	r1, r3, r1
	ldrb	r0, [r1, #0xa]
	orr	r0, r0, r6
	strb	r0, [r1, #0xa]
	ldr	r1, [r4]
	add	r1, r3, r1
	ldrb	r0, [r1, #0xb]
	orr	r0, r0, r6
	strb	r0, [r1, #0xb]
	ldr	r0, [r4]
	add	r3, r3, r0
	ldrb	r0, [r3, #0xc]
	orr	r0, r0, r6
	strb	r0, [r3, #0xc]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L170	@cond_branch
	mov	r1, r9
	ldr	r0, [r1]
	mov	r1, ip
	sub	r1, r1, #0x20
	str	r1, [r0]
	cmp	r7, #0x3
	bne	.L172	@cond_branch
	str	r1, [r0, #0x30]
	b	.L173
.L176:
	.align	2, 0
.L175:
	.word	gUnknown_0203CEDC
	.word	gUnknown_086156C4+0x20
	.word	gUnknown_08615704
.L172:
	cmp	r7, #0
	beq	.L173	@cond_branch
	str	r1, [r0, #0x10]
.L173:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 PartyMenuInitHelperStructs,.Lfe13-PartyMenuInitHelperStructs
	.align	2, 0
	.type	 RenderPartyMenuBox,function
	.thumb_func
RenderPartyMenuBox:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L201
	ldrb	r1, [r0, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x5
	bne	.L178	@cond_branch
	cmp	r5, #0x2
	bls	.L178	@cond_branch
	add	r0, r5, #0
	bl	sub_81B0CEC
	ldr	r0, .L201+0x4
	sub	r1, r5, #0x3
	lsl	r1, r1, #0x5
	add	r1, r1, r0
	ldrh	r0, [r1]
	cmp	r0, #0
	bne	.L179	@cond_branch
	ldr	r0, .L201+0x8
	lsl	r4, r5, #0x4
	ldr	r0, [r0]
	add	r0, r0, r4
	mov	r1, #0x40
	bl	UpdateSelectedPartyBox
	b	.L199
.L202:
	.align	2, 0
.L201:
	.word	gUnknown_0203CEC8
	.word	gUnknown_02022FF8
	.word	gUnknown_0203CEDC
.L179:
	ldr	r0, .L203
	lsl	r4, r5, #0x4
	ldr	r0, [r0]
	add	r0, r0, r4
	mov	r1, #0x8
	bl	UpdateSelectedPartyBox
.L199:
	add	r5, r4, #0
	ldr	r4, .L203
	ldr	r0, [r4]
	add	r0, r5, r0
	ldrb	r0, [r0, #0x8]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	add	r0, r5, r0
	ldrb	r0, [r0, #0x8]
	bl	PutWindowTilemap
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	b	.L181
.L204:
	.align	2, 0
.L203:
	.word	gUnknown_0203CEDC
.L178:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L205
	add	r0, r0, r1
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	bne	.L182	@cond_branch
	ldr	r4, .L205+0x4
	ldr	r0, [r4]
	lsl	r5, r5, #0x4
	add	r0, r5, r0
	ldrb	r0, [r0, #0x8]
	bl	DrawEmptySlot
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r1, #0x40
	bl	UpdateSelectedPartyBox
	ldr	r0, [r4]
	add	r0, r5, r0
	ldrb	r0, [r0, #0x8]
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L183
.L206:
	.align	2, 0
.L205:
	.word	gPlayerParty
	.word	gUnknown_0203CEDC
.L182:
	ldr	r0, .L207
	ldrb	r0, [r0, #0x8]
	mov	r1, #0xf
	and	r1, r1, r0
	cmp	r1, #0x7
	bne	.L184	@cond_branch
	add	r0, r5, #0
	bl	DisplayPartyPokemonSelectForRelearner
	b	.L185
.L208:
	.align	2, 0
.L207:
	.word	gUnknown_0203CEC8
.L184:
	cmp	r1, #0x2
	bne	.L186	@cond_branch
	add	r0, r5, #0
	bl	DisplayPartyPokemonSelectForContest
	b	.L185
.L186:
	cmp	r1, #0x4
	bne	.L188	@cond_branch
	add	r0, r5, #0
	bl	DisplayPartyPokemonSelectForBattle
	b	.L185
.L188:
	cmp	r1, #0xb
	bne	.L190	@cond_branch
	add	r0, r5, #0
	bl	sub_81B0B98
	b	.L185
.L190:
	cmp	r1, #0xc
	bne	.L192	@cond_branch
	add	r0, r5, #0
	bl	DisplayPartyPokemonSelectHeldItemRelated
	b	.L185
.L192:
	add	r0, r5, #0
	bl	sub_81B0BFC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L185	@cond_branch
	add	r0, r5, #0
	bl	DisplayPartyPokemonData
.L185:
	ldr	r2, .L209
	ldrb	r1, [r2, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x5
	bne	.L195	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	bl	sub_81B0FCC
	b	.L200
.L210:
	.align	2, 0
.L209:
	.word	gUnknown_0203CEC8
.L195:
	mov	r0, #0x9
	ldrsb	r0, [r2, r0]
	cmp	r0, r5
	bne	.L197	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x1
	bl	sub_81B0FCC
	b	.L200
.L197:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	sub_81B0FCC
.L200:
	lsl	r5, r5, #0x4
.L183:
	ldr	r0, .L211
	ldr	r0, [r0]
	add	r0, r5, r0
	ldrb	r0, [r0, #0x8]
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	schedule_bg_copy_tilemap_to_vram
.L181:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L212:
	.align	2, 0
.L211:
	.word	gUnknown_0203CEDC
.Lfe14:
	.size	 RenderPartyMenuBox,.Lfe14-RenderPartyMenuBox
	.align	2, 0
	.type	 DisplayPartyPokemonData,function
	.thumb_func
DisplayPartyPokemonData:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x64
	mov	r1, r4
	mul	r1, r1, r0
	ldr	r0, .L216
	add	r7, r1, r0
	add	r0, r7, #0
	mov	r1, #0x2d
	bl	GetMonData
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L214	@cond_branch
	ldr	r6, .L216+0x4
	ldr	r0, [r6]
	lsl	r5, r4, #0x4
	add	r0, r5, r0
	ldr	r2, [r0]
	ldrb	r0, [r0, #0x8]
	mov	r1, #0x0
	str	r1, [sp]
	mov	r1, #0x1
	str	r1, [sp, #0x4]
	ldr	r4, [r2]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	_call_via_r4
	ldr	r1, [r6]
	add	r1, r1, r5
	add	r0, r7, #0
	mov	r2, #0x0
	bl	DisplayPartyPokemonNickname
	b	.L215
.L217:
	.align	2, 0
.L216:
	.word	gPlayerParty
	.word	gUnknown_0203CEDC
.L214:
	ldr	r5, .L218
	ldr	r0, [r5]
	lsl	r4, r4, #0x4
	add	r0, r4, r0
	ldr	r1, [r0]
	ldrb	r0, [r0, #0x8]
	str	r2, [sp]
	str	r2, [sp, #0x4]
	ldr	r6, [r1]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	_call_via_r6
	ldr	r1, [r5]
	add	r1, r1, r4
	add	r0, r7, #0
	mov	r2, #0x0
	bl	DisplayPartyPokemonNickname
	ldr	r1, [r5]
	add	r1, r1, r4
	add	r0, r7, #0
	mov	r2, #0x0
	bl	DisplayPartyPokemonLevelCheck
	ldr	r1, [r5]
	add	r1, r1, r4
	add	r0, r7, #0
	mov	r2, #0x0
	bl	DisplayPartyPokemonGenderNidoranCheck
	ldr	r1, [r5]
	add	r1, r1, r4
	add	r0, r7, #0
	mov	r2, #0x0
	bl	DisplayPartyPokemonHPCheck
	ldr	r1, [r5]
	add	r1, r1, r4
	add	r0, r7, #0
	mov	r2, #0x0
	bl	DisplayPartyPokemonMaxHPCheck
	ldr	r1, [r5]
	add	r1, r1, r4
	add	r0, r7, #0
	bl	DisplayPartyPokemonHPBarCheck
.L215:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L219:
	.align	2, 0
.L218:
	.word	gUnknown_0203CEDC
.Lfe15:
	.size	 DisplayPartyPokemonData,.Lfe15-DisplayPartyPokemonData
	.align	2, 0
	.type	 DisplayPartyPokemonSelectData,function
	.thumb_func
DisplayPartyPokemonSelectData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	mov	r1, #0x64
	mov	r2, r0
	mul	r2, r2, r1
	ldr	r1, .L222
	add	r6, r2, r1
	ldr	r7, .L222+0x4
	ldr	r1, [r7]
	lsl	r5, r0, #0x4
	add	r1, r5, r1
	ldr	r2, [r1]
	ldrb	r0, [r1, #0x8]
	mov	r1, #0x0
	str	r1, [sp]
	mov	r1, #0x1
	str	r1, [sp, #0x4]
	ldr	r4, [r2]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	_call_via_r4
	ldr	r1, [r7]
	add	r1, r1, r5
	add	r0, r6, #0
	mov	r2, #0x0
	bl	DisplayPartyPokemonNickname
	add	r0, r6, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	bne	.L221	@cond_branch
	ldr	r1, [r7]
	add	r1, r1, r5
	add	r0, r6, #0
	mov	r2, #0x0
	bl	DisplayPartyPokemonLevelCheck
	ldr	r1, [r7]
	add	r1, r1, r5
	add	r0, r6, #0
	mov	r2, #0x0
	bl	DisplayPartyPokemonGenderNidoranCheck
.L221:
	ldr	r1, [r7]
	add	r1, r1, r5
	mov	r0, r8
	mov	r2, #0x0
	bl	DisplayPartyPokemonOtherText
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L223:
	.align	2, 0
.L222:
	.word	gPlayerParty
	.word	gUnknown_0203CEDC
.Lfe16:
	.size	 DisplayPartyPokemonSelectData,.Lfe16-DisplayPartyPokemonSelectData
	.align	2, 0
	.type	 DisplayPartyPokemonSelectForBattle,function
	.thumb_func
DisplayPartyPokemonSelectForBattle:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L234
	add	r0, r0, r1
	ldr	r6, .L234+0x4
	bl	GetBattleEntryEligibility
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L225	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x7
	bl	DisplayPartyPokemonSelectData
	b	.L224
.L235:
	.align	2, 0
.L234:
	.word	gPlayerParty
	.word	gSelectedOrderFromParty
.L233:
	add	r1, r4, #0x2
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	DisplayPartyPokemonSelectData
	b	.L224
.L225:
	mov	r4, #0x0
	b	.L227
.L230:
	add	r1, r6, r4
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L229	@cond_branch
	sub	r0, r0, #0x1
	cmp	r0, r5
	beq	.L233	@cond_branch
.L229:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L227:
	bl	sub_81B8830
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L230	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x1
	bl	DisplayPartyPokemonSelectData
.L224:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 DisplayPartyPokemonSelectForBattle,.Lfe17-DisplayPartyPokemonSelectForBattle
	.align	2, 0
	.type	 DisplayPartyPokemonSelectForContest,function
	.thumb_func
DisplayPartyPokemonSelectForContest:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L245
	add	r0, r0, r1
	bl	sub_80DAE0C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	bhi	.L237	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L245+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L246:
	.align	2, 0
.L245:
	.word	gPlayerParty
	.word	.L243
	.align	2, 0
	.align	2, 0
.L243:
	.word	.L240
	.word	.L242
	.word	.L242
	.word	.L240
	.word	.L240
.L240:
	add	r0, r4, #0
	mov	r1, #0x7
	bl	DisplayPartyPokemonSelectData
	b	.L237
.L242:
	add	r0, r4, #0
	mov	r1, #0x6
	bl	DisplayPartyPokemonSelectData
.L237:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 DisplayPartyPokemonSelectForContest,.Lfe18-DisplayPartyPokemonSelectForContest
	.align	2, 0
	.type	 DisplayPartyPokemonSelectForRelearner,function
	.thumb_func
DisplayPartyPokemonSelectForRelearner:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L250
	add	r0, r0, r1
	bl	GetNumberOfRelearnableMoves
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L248	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x9
	bl	DisplayPartyPokemonSelectData
	b	.L249
.L251:
	.align	2, 0
.L250:
	.word	gPlayerParty
.L248:
	add	r0, r4, #0
	mov	r1, #0x8
	bl	DisplayPartyPokemonSelectData
.L249:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 DisplayPartyPokemonSelectForRelearner,.Lfe19-DisplayPartyPokemonSelectForRelearner
	.align	2, 0
	.type	 sub_81B0B98,function
	.thumb_func
sub_81B0B98:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	sub_81B218C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L253	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x6
	bl	DisplayPartyPokemonSelectData
	b	.L254
.L253:
	add	r0, r4, #0
	mov	r1, #0x7
	bl	DisplayPartyPokemonSelectData
.L254:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 sub_81B0B98,.Lfe20-sub_81B0B98
	.align	2, 0
	.type	 DisplayPartyPokemonSelectHeldItemRelated,function
	.thumb_func
DisplayPartyPokemonSelectHeldItemRelated:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L258
	add	r0, r0, r1
	mov	r1, #0xc
	bl	GetMonData
	cmp	r0, #0
	beq	.L256	@cond_branch
	add	r0, r4, #0
	mov	r1, #0xb
	bl	DisplayPartyPokemonSelectData
	b	.L257
.L259:
	.align	2, 0
.L258:
	.word	gPlayerParty
.L256:
	add	r0, r4, #0
	mov	r1, #0xc
	bl	DisplayPartyPokemonSelectData
.L257:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 DisplayPartyPokemonSelectHeldItemRelated,.Lfe21-DisplayPartyPokemonSelectHeldItemRelated
	.align	2, 0
	.type	 sub_81B0BFC,function
	.thumb_func
sub_81B0BFC:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L273
	add	r6, r1, r0
	ldr	r0, .L273+0x4
	ldrh	r4, [r0]
	ldr	r0, .L273+0x8
	ldrb	r0, [r0, #0xb]
	cmp	r0, #0xc
	bne	.L261	@cond_branch
	ldr	r1, .L273+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L273+0x10
	ldrb	r2, [r0]
	add	r0, r5, #0
	mov	r1, #0x0
	bl	DisplayPartyPokemonSelectToTeachMove
	b	.L262
.L274:
	.align	2, 0
.L273:
	.word	gPlayerParty
	.word	gSpecialVar_ItemId
	.word	gUnknown_0203CEC8
	.word	gSpecialVar_Result
	.word	gSpecialVar_0x8005
.L261:
	cmp	r0, #0x3
	bne	.L272	@cond_branch
	add	r0, r4, #0
	bl	CheckIfItemIsTMHMOrEvolutionStone
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L266	@cond_branch
	cmp	r0, #0x2
	beq	.L267	@cond_branch
.L272:
	mov	r0, #0x0
	b	.L270
.L266:
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, #0x0
	bl	DisplayPartyPokemonSelectToTeachMove
	b	.L262
.L267:
	add	r0, r6, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	bne	.L268	@cond_branch
	add	r0, r6, #0
	mov	r1, #0x3
	add	r2, r4, #0
	bl	GetEvolutionTargetSpecies
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L272	@cond_branch
.L268:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	DisplayPartyPokemonSelectData
.L262:
	mov	r0, #0x1
.L270:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe22:
	.size	 sub_81B0BFC,.Lfe22-sub_81B0BFC
	.align	2, 0
	.type	 DisplayPartyPokemonSelectToTeachMove,function
	.thumb_func
DisplayPartyPokemonSelectToTeachMove:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r3, .L283
	add	r0, r0, r3
	bl	CanMonLearnTMTutor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.L279	@cond_branch
	cmp	r0, #0x2
	bgt	.L282	@cond_branch
	cmp	r0, #0x1
	beq	.L278	@cond_branch
	b	.L280
.L284:
	.align	2, 0
.L283:
	.word	gPlayerParty
.L282:
	cmp	r0, #0x3
	bne	.L280	@cond_branch
.L278:
	add	r0, r4, #0
	mov	r1, #0x9
	bl	DisplayPartyPokemonSelectData
	b	.L276
.L279:
	add	r0, r4, #0
	mov	r1, #0xa
	bl	DisplayPartyPokemonSelectData
	b	.L276
.L280:
	add	r0, r4, #0
	mov	r1, #0x8
	bl	DisplayPartyPokemonSelectData
.L276:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 DisplayPartyPokemonSelectToTeachMove,.Lfe23-DisplayPartyPokemonSelectToTeachMove
	.align	2, 0
	.type	 sub_81B0CEC,function
	.thumb_func
sub_81B0CEC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L288
	lsl	r2, r0, #0x4
	ldr	r1, [r1]
	add	r6, r1, r2
	sub	r0, r0, #0x3
	lsl	r0, r0, #0x18
	ldr	r5, .L288+0x4
	lsr	r0, r0, #0x13
	mov	r8, r0
	add	r7, r0, r5
	ldrh	r0, [r7]
	cmp	r0, #0
	bne	.L286	@cond_branch
	ldrb	r0, [r6, #0x8]
	bl	DrawEmptySlot
	b	.L287
.L289:
	.align	2, 0
.L288:
	.word	gUnknown_0203CEDC
	.word	gUnknown_02022FF8
.L286:
	ldr	r2, [r6]
	ldrb	r0, [r6, #0x8]
	mov	r1, #0x0
	str	r1, [sp]
	str	r1, [sp, #0x4]
	ldr	r4, [r2]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	_call_via_r4
	ldr	r4, .L290
	add	r5, r5, #0x4
	add	r5, r5, r8
	add	r0, r4, #0
	add	r1, r5, #0
	bl	StringCopy
	add	r0, r4, #0
	bl	StringGetEnd10
	add	r0, r4, #0
	bl	sub_81DB52C
	ldrb	r0, [r6, #0x8]
	ldr	r3, [r6]
	add	r3, r3, #0x4
	add	r1, r4, #0
	mov	r2, #0x0
	bl	DisplayPartyPokemonBarDetail
	ldrb	r0, [r7, #0xf]
	add	r1, r6, #0
	bl	DisplayPartyPokemonLevel
	ldrb	r0, [r7, #0x1c]
	ldrh	r1, [r7]
	add	r2, r5, #0
	add	r3, r6, #0
	bl	DisplayPartyPokemonGender
	ldrh	r0, [r7, #0x10]
	add	r1, r6, #0
	bl	DisplayPartyPokemonHP
	ldrh	r0, [r7, #0x12]
	add	r1, r6, #0
	bl	DisplayPartyPokemonMaxHP
	ldrh	r0, [r7, #0x10]
	ldrh	r1, [r7, #0x12]
	add	r2, r6, #0
	bl	DisplayPartyPokemonHPBar
.L287:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L291:
	.align	2, 0
.L290:
	.word	gStringVar1
.Lfe24:
	.size	 sub_81B0CEC,.Lfe24-sub_81B0CEC
	.align	2, 0
	.type	 RenderPartyMenuBoxes,function
	.thumb_func
RenderPartyMenuBoxes:
	push	{r4, r5, lr}
	ldr	r5, .L296
	ldr	r0, [r5]
	mov	r4, #0x86
	lsl	r4, r4, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	RenderPartyMenuBox
	ldr	r1, [r5]
	add	r1, r1, r4
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x6
	beq	.L293	@cond_branch
	mov	r0, #0x0
	b	.L295
.L297:
	.align	2, 0
.L296:
	.word	gUnknown_0203CEC4
.L293:
	mov	r0, #0x1
.L295:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe25:
	.size	 RenderPartyMenuBoxes,.Lfe25-RenderPartyMenuBoxes
	.align	2, 0
	.type	 GetPartyMiscGraphicsTile,function
	.thumb_func
GetPartyMiscGraphicsTile:
	lsl	r0, r0, #0x10
	ldr	r1, .L299
	lsr	r0, r0, #0xb
	ldr	r1, [r1]
	add	r1, r1, r0
	add	r0, r1, #0
	bx	lr
.L300:
	.align	2, 0
.L299:
	.word	gUnknown_0203CEE0
.Lfe26:
	.size	 GetPartyMiscGraphicsTile,.Lfe26-GetPartyMiscGraphicsTile
	.align	2, 0
	.type	 party_menu_add_per_mon_objects_internal,function
	.thumb_func
party_menu_add_per_mon_objects_internal:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L308
	ldrb	r1, [r0, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x5
	bne	.L302	@cond_branch
	cmp	r7, #0x2
	bls	.L302	@cond_branch
	sub	r0, r7, #0x3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	ldr	r0, .L308+0x4
	mov	r9, r0
	mov	r2, sl
	lsl	r2, r2, #0x5
	mov	r8, r2
	mov	r6, r8
	add	r6, r6, r9
	ldrh	r0, [r6]
	cmp	r0, #0
	beq	.L306	@cond_branch
	mov	r1, r9
	add	r1, r1, #0x18
	add	r1, r1, r8
	ldr	r1, [r1]
	ldr	r4, .L308+0x8
	lsl	r5, r7, #0x4
	ldr	r2, [r4]
	add	r2, r2, r5
	mov	r3, #0x0
	str	r3, [sp]
	bl	party_menu_link_mon_icon_anim
	ldrh	r0, [r6]
	ldrh	r1, [r6, #0x2]
	ldr	r2, [r4]
	add	r2, r2, r5
	bl	party_menu_link_mon_held_item_object
	ldrh	r0, [r6]
	ldr	r1, [r4]
	add	r1, r1, r5
	bl	party_menu_link_mon_pokeball_object
	ldrh	r0, [r6, #0x10]
	cmp	r0, #0
	bne	.L304	@cond_branch
	mov	r3, #0x7
	b	.L305
.L309:
	.align	2, 0
.L308:
	.word	gUnknown_0203CEC8
	.word	gUnknown_02022FF8
	.word	gUnknown_0203CEDC
.L304:
	mov	r0, r9
	add	r0, r0, #0x14
	add	r0, r0, r8
	ldr	r0, [r0]
	bl	pokemon_ailments_get_primary
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
.L305:
	ldr	r1, .L310
	mov	r2, sl
	lsl	r0, r2, #0x5
	add	r0, r0, r1
	ldrh	r0, [r0]
	ldr	r1, .L310+0x4
	ldr	r2, [r1]
	add	r2, r2, r5
	add	r1, r3, #0
	bl	party_menu_link_mon_status_condition_object
	b	.L306
.L311:
	.align	2, 0
.L310:
	.word	gUnknown_02022FF8
	.word	gUnknown_0203CEDC
.L302:
	mov	r0, #0x64
	mov	r1, r7
	mul	r1, r1, r0
	ldr	r0, .L312
	add	r6, r1, r0
	add	r0, r6, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L306	@cond_branch
	ldr	r4, .L312+0x4
	lsl	r5, r7, #0x4
	ldr	r1, [r4]
	add	r1, r1, r5
	add	r0, r6, #0
	add	r2, r7, #0
	bl	party_menu_icon_anim
	ldr	r1, [r4]
	add	r1, r1, r5
	add	r0, r6, #0
	bl	party_menu_held_item_object
	ldr	r1, [r4]
	add	r1, r1, r5
	add	r0, r6, #0
	bl	party_menu_pokeball_object
	ldr	r1, [r4]
	add	r1, r1, r5
	add	r0, r6, #0
	bl	party_menu_status_condition_object
.L306:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L313:
	.align	2, 0
.L312:
	.word	gPlayerParty
	.word	gUnknown_0203CEDC
.Lfe27:
	.size	 party_menu_add_per_mon_objects_internal,.Lfe27-party_menu_add_per_mon_objects_internal
	.align	2, 0
	.type	 party_menu_add_per_mon_objects,function
	.thumb_func
party_menu_add_per_mon_objects:
	push	{r4, r5, lr}
	ldr	r5, .L318
	ldr	r0, [r5]
	mov	r4, #0x86
	lsl	r4, r4, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	party_menu_add_per_mon_objects_internal
	ldr	r1, [r5]
	add	r1, r1, r4
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x6
	beq	.L315	@cond_branch
	mov	r0, #0x0
	b	.L317
.L319:
	.align	2, 0
.L318:
	.word	gUnknown_0203CEC4
.L315:
	mov	r0, #0x1
.L317:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 party_menu_add_per_mon_objects,.Lfe28-party_menu_add_per_mon_objects
	.align	2, 0
	.type	 sub_81B0F28,function
	.thumb_func
sub_81B0F28:
	push	{r4, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L326
	ldrb	r1, [r0, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x5
	bne	.L321	@cond_branch
	mov	r0, #0x7
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r1, #0xe
	mov	r2, #0x17
	mov	r3, #0x11
	bl	FillBgTilemapBufferRect
	b	.L322
.L327:
	.align	2, 0
.L326:
	.word	gUnknown_0203CEC8
.L321:
	ldr	r4, .L328
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L323	@cond_branch
	mov	r0, #0xbf
	mov	r1, #0x88
	bl	sub_81B5F74
	ldr	r3, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x7f
	and	r0, r0, r1
	lsl	r0, r0, #0x4
	ldrh	r2, [r3, #0x8]
	ldr	r1, .L328+0x4
	and	r1, r1, r2
	orr	r1, r1, r0
	strh	r1, [r3, #0x8]
	bl	sub_81B120C
	mov	r0, #0xbf
	mov	r1, #0x98
	bl	sub_81B5F74
	b	.L325
.L329:
	.align	2, 0
.L328:
	.word	gUnknown_0203CEC4
	.word	-0x7f1
.L323:
	mov	r0, #0xc6
	mov	r1, #0x94
	bl	sub_81B5F34
.L325:
	ldr	r3, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x7f
	and	r0, r0, r1
	lsl	r0, r0, #0xb
	ldr	r1, [r3, #0x8]
	ldr	r2, .L330
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [r3, #0x8]
	ldr	r0, .L330+0x4
	ldrb	r0, [r0, #0x9]
	mov	r1, #0x1
	bl	sub_81B0FCC
.L322:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L331:
	.align	2, 0
.L330:
	.word	-0x3f801
	.word	gUnknown_0203CEC8
.Lfe29:
	.size	 sub_81B0F28,.Lfe29-sub_81B0F28
	.align	2, 0
	.globl	sub_81B0FCC
	.type	 sub_81B0FCC,function
	.thumb_func
sub_81B0FCC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	cmp	r7, #0x6
	beq	.L336	@cond_branch
	cmp	r7, #0x7
	beq	.L339	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r7
	ldr	r1, .L349
	add	r0, r0, r1
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L332	@cond_branch
	ldr	r6, .L349+0x4
	lsl	r5, r7, #0x4
	ldr	r4, [r6]
	add	r4, r4, r5
	add	r0, r7, #0
	mov	r1, r8
	bl	GetPartyBoxPalBitfield
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	UpdateSelectedPartyBox
	ldr	r0, [r6]
	add	r0, r5, r0
	ldrb	r0, [r0, #0x9]
	mov	r1, r8
	bl	AnimateSelectedPartyIcon
	ldr	r0, [r6]
	add	r5, r5, r0
	ldrb	r0, [r5, #0xb]
	mov	r1, r8
	bl	sub_81B5F98
	b	.L332
.L350:
	.align	2, 0
.L349:
	.word	gPlayerParty
	.word	gUnknown_0203CEDC
.L336:
	mov	r0, r8
	cmp	r0, #0
	bne	.L337	@cond_branch
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	mov	r1, #0x17
	mov	r2, #0x10
	mov	r3, #0x7
	bl	sub_8199C30
	b	.L338
.L337:
	mov	r0, #0x2
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x17
	mov	r2, #0x10
	mov	r3, #0x7
	bl	sub_8199C30
.L338:
	ldr	r0, .L351
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x8]
	lsl	r0, r0, #0x15
	b	.L347
.L352:
	.align	2, 0
.L351:
	.word	gUnknown_0203CEC4
.L339:
	ldr	r0, .L353
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	bne	.L340	@cond_branch
	mov	r0, r8
	cmp	r0, #0
	bne	.L341	@cond_branch
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	mov	r1, #0x17
	mov	r2, #0x11
	b	.L348
.L354:
	.align	2, 0
.L353:
	.word	gUnknown_0203CEC4
.L341:
	mov	r0, #0x2
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x17
	mov	r2, #0x11
	b	.L348
.L340:
	mov	r0, r8
	cmp	r0, #0
	bne	.L344	@cond_branch
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	mov	r1, #0x17
	mov	r2, #0x12
.L348:
	mov	r3, #0x7
	bl	sub_8199C30
	b	.L343
.L344:
	mov	r0, #0x2
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x17
	mov	r2, #0x12
	mov	r3, #0x7
	bl	sub_8199C30
.L343:
	ldr	r0, .L355
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	lsl	r0, r0, #0xe
.L347:
	lsr	r0, r0, #0x19
	mov	r1, r8
	bl	sub_81B5F98
	mov	r0, #0x1
	bl	schedule_bg_copy_tilemap_to_vram
.L332:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L356:
	.align	2, 0
.L355:
	.word	gUnknown_0203CEC4
.Lfe30:
	.size	 sub_81B0FCC,.Lfe30-sub_81B0FCC
	.align	2, 0
	.type	 GetPartyBoxPalBitfield,function
	.thumb_func
GetPartyBoxPalBitfield:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r4, #0x0
	cmp	r1, #0x1
	bne	.L358	@cond_branch
	mov	r4, #0x1
.L358:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L366
	add	r0, r0, r1
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	bne	.L359	@cond_branch
	mov	r0, #0x2
	orr	r4, r4, r0
.L359:
	add	r0, r5, #0
	bl	PartyBoxPal_ParnterOrDisqualifiedInArena
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L360	@cond_branch
	mov	r0, #0x8
	orr	r4, r4, r0
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
.L360:
	ldr	r0, .L366+0x4
	ldrb	r1, [r0, #0xb]
	add	r2, r0, #0
	cmp	r1, #0x9
	bne	.L361	@cond_branch
	mov	r0, #0x10
	orr	r4, r4, r0
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
.L361:
	cmp	r1, #0x8
	bne	.L362	@cond_branch
	mov	r0, #0x9
	ldrsb	r0, [r2, r0]
	cmp	r5, r0
	beq	.L364	@cond_branch
	mov	r0, #0xa
	ldrsb	r0, [r2, r0]
	cmp	r5, r0
	bne	.L362	@cond_branch
.L364:
	mov	r0, #0x4
	orr	r4, r4, r0
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
.L362:
	ldrb	r0, [r2, #0xb]
	cmp	r0, #0xa
	bne	.L365	@cond_branch
	mov	r0, #0x9
	ldrsb	r0, [r2, r0]
	cmp	r5, r0
	bne	.L365	@cond_branch
	mov	r0, #0x20
	orr	r4, r4, r0
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
.L365:
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L367:
	.align	2, 0
.L366:
	.word	gPlayerParty
	.word	gUnknown_0203CEC8
.Lfe31:
	.size	 GetPartyBoxPalBitfield,.Lfe31-GetPartyBoxPalBitfield
	.align	2, 0
	.type	 PartyBoxPal_ParnterOrDisqualifiedInArena,function
	.thumb_func
PartyBoxPal_ParnterOrDisqualifiedInArena:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L373
	ldrb	r1, [r0, #0x8]
	mov	r0, #0x30
	and	r0, r0, r1
	cmp	r0, #0x20
	bne	.L369	@cond_branch
	cmp	r2, #0x1
	beq	.L370	@cond_branch
	cmp	r2, #0x4
	beq	.L370	@cond_branch
	cmp	r2, #0x5
	bne	.L369	@cond_branch
.L370:
	mov	r0, #0x1
	b	.L372
.L374:
	.align	2, 0
.L373:
	.word	gUnknown_0203CEC8
.L369:
	cmp	r2, #0x2
	bhi	.L371	@cond_branch
	ldr	r0, .L375
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0xb
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L371	@cond_branch
	ldr	r0, .L375+0x4
	ldr	r1, .L375+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L371	@cond_branch
	add	r0, r2, #0
	bl	sub_81B8F38
	ldr	r1, .L375+0xc
	ldr	r1, [r1]
	mov	r2, #0xa8
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	asr	r1, r1, r0
	mov	r0, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L372	@cond_branch
.L371:
	mov	r0, #0x0
.L372:
	pop	{r1}
	bx	r1
.L376:
	.align	2, 0
.L375:
	.word	gBattleTypeFlags
	.word	gMain
	.word	0x439
	.word	gBattleStruct
.Lfe32:
	.size	 PartyBoxPal_ParnterOrDisqualifiedInArena,.Lfe32-PartyBoxPal_ParnterOrDisqualifiedInArena
	.align	2, 0
	.type	 sub_81B120C,function
	.thumb_func
sub_81B120C:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r1, .L378
	mov	r6, #0x7
	str	r6, [sp]
	mov	r5, #0x2
	str	r5, [sp, #0x4]
	mov	r4, #0x11
	str	r4, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x17
	mov	r3, #0x10
	bl	CopyToBgTilemapBufferRect_ChangePalette
	ldr	r1, .L378+0x4
	str	r6, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x17
	mov	r3, #0x12
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r0, #0x1
	bl	schedule_bg_copy_tilemap_to_vram
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L379:
	.align	2, 0
.L378:
	.word	gUnknown_086157C4
	.word	gUnknown_086157E0
.Lfe33:
	.size	 sub_81B120C,.Lfe33-sub_81B120C
	.align	2, 0
	.globl	IsMultiBattle
	.type	 IsMultiBattle,function
	.thumb_func
IsMultiBattle:
	push	{lr}
	ldr	r0, .L384
	ldr	r0, [r0]
	mov	r1, #0x49
	and	r0, r0, r1
	cmp	r0, #0x49
	bne	.L381	@cond_branch
	ldr	r0, .L384+0x4
	ldr	r1, .L384+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L381	@cond_branch
	mov	r0, #0x1
	b	.L383
.L385:
	.align	2, 0
.L384:
	.word	gBattleTypeFlags
	.word	gMain
	.word	0x439
.L381:
	mov	r0, #0x0
.L383:
	pop	{r1}
	bx	r1
.Lfe34:
	.size	 IsMultiBattle,.Lfe34-IsMultiBattle
	.align	2, 0
	.type	 sub_81B1288,function
	.thumb_func
sub_81B1288:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r6, r1, #0
	mov	r0, #0x64
	bl	Alloc
	add	r5, r0, #0
	add	r1, r4, #0
	mov	r2, #0x64
	bl	memcpy
	add	r0, r4, #0
	add	r1, r6, #0
	mov	r2, #0x64
	bl	memcpy
	add	r0, r6, #0
	add	r1, r5, #0
	mov	r2, #0x64
	bl	memcpy
	add	r0, r5, #0
	bl	Free
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe35:
	.size	 sub_81B1288,.Lfe35-sub_81B1288
	.align	2, 0
	.type	 sub_81B12C0,function
	.thumb_func
sub_81B12C0:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L388
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L388+0x4
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L389:
	.align	2, 0
.L388:
	.word	gTasks
	.word	c3_0811FAB4
.Lfe36:
	.size	 sub_81B12C0,.Lfe36-sub_81B12C0
	.align	2, 0
	.type	 c3_0811FAB4,function
	.thumb_func
c3_0811FAB4:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L395
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L391	@cond_branch
	ldr	r4, .L395+0x4
	ldrb	r1, [r4, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L392	@cond_branch
	bl	sub_81B9080
.L392:
	ldr	r0, .L395+0x8
	ldr	r0, [r0]
	ldr	r0, [r0, #0x4]
	cmp	r0, #0
	beq	.L393	@cond_branch
	bl	SetMainCallback2
	b	.L394
.L396:
	.align	2, 0
.L395:
	.word	gPaletteFade
	.word	gUnknown_0203CEC8
	.word	gUnknown_0203CEC4
.L393:
	ldr	r0, [r4]
	bl	SetMainCallback2
.L394:
	bl	ResetSpriteData
	bl	FreePartyPointers
	add	r0, r5, #0
	bl	DestroyTask
.L391:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe37:
	.size	 c3_0811FAB4,.Lfe37-c3_0811FAB4
	.align	2, 0
	.globl	GetCursorSelectionMonId
	.type	 GetCursorSelectionMonId,function
	.thumb_func
GetCursorSelectionMonId:
	ldr	r0, .L398
	ldrb	r0, [r0, #0x9]
	bx	lr
.L399:
	.align	2, 0
.L398:
	.word	gUnknown_0203CEC8
.Lfe38:
	.size	 GetCursorSelectionMonId,.Lfe38-GetCursorSelectionMonId
	.align	2, 0
	.globl	sub_81B1360
	.type	 sub_81B1360,function
	.thumb_func
sub_81B1360:
	ldr	r0, .L401
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bx	lr
.L402:
	.align	2, 0
.L401:
	.word	gUnknown_0203CEC8
.Lfe39:
	.size	 sub_81B1360,.Lfe39-sub_81B1360
	.align	2, 0
	.globl	sub_81B1370
	.type	 sub_81B1370,function
	.thumb_func
sub_81B1370:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	ldr	r0, .L413
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L404	@cond_branch
	bl	sub_81221EC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L404	@cond_branch
	bl	sub_81B13EC
	add	r4, r0, #0
	bl	PartyMenuButtonHandler
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	beq	.L407	@cond_branch
	cmp	r0, #0x2
	bgt	.L412	@cond_branch
	cmp	r0, #0x1
	beq	.L406	@cond_branch
	b	.L404
.L414:
	.align	2, 0
.L413:
	.word	gPaletteFade
.L412:
	cmp	r0, #0x8
	beq	.L408	@cond_branch
	b	.L404
.L406:
	add	r0, r5, #0
	add	r1, r4, #0
	bl	sub_81B140C
	b	.L404
.L407:
	add	r0, r6, #0
	add	r1, r4, #0
	bl	sub_81B15D0
	b	.L404
.L408:
	ldr	r0, .L415
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L404	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	sub_81B4F88
.L404:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L416:
	.align	2, 0
.L415:
	.word	gUnknown_0203CEC4
.Lfe40:
	.size	 sub_81B1370,.Lfe40-sub_81B1370
	.align	2, 0
	.type	 sub_81B13EC,function
	.thumb_func
sub_81B13EC:
	push	{lr}
	ldr	r0, .L422
	ldrb	r1, [r0, #0xb]
	cmp	r1, #0x8
	beq	.L419	@cond_branch
	cmp	r1, #0xa
	bne	.L418	@cond_branch
.L419:
	add	r0, r0, #0xa
	b	.L421
.L423:
	.align	2, 0
.L422:
	.word	gUnknown_0203CEC8
.L418:
	add	r0, r0, #0x9
.L421:
	pop	{r1}
	bx	r1
.Lfe41:
	.size	 sub_81B13EC,.Lfe41-sub_81B13EC
	.align	2, 0
	.type	 sub_81B140C,function
	.thumb_func
sub_81B140C:
	push	{r4, r5, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp	r0, #0x6
	bne	.L425	@cond_branch
	ldr	r0, .L448
	ldr	r1, [r0, #0x4]
	add	r0, r5, #0
	bl	_call_via_r1
	b	.L426
.L449:
	.align	2, 0
.L448:
	.word	gUnknown_0203CEC8
.L425:
	ldr	r0, .L450
	ldrb	r0, [r0, #0xb]
	sub	r0, r0, #0x3
	cmp	r0, #0xa
	bls	.LCB3426
	b	.L446	@long jump
.LCB3426:
	lsl	r0, r0, #0x2
	ldr	r1, .L450+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L451:
	.align	2, 0
.L450:
	.word	gUnknown_0203CEC8
	.word	.L447
	.align	2, 0
	.align	2, 0
.L447:
	.word	.L430
	.word	.L446
	.word	.L438
	.word	.L438
	.word	.L435
	.word	.L440
	.word	.L446
	.word	.L428
	.word	.L441
	.word	.L433
	.word	.L442
.L428:
	add	r0, r4, #0
	bl	sub_81B15A4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB3452
	b	.L426	@long jump
.LCB3452:
	ldr	r0, .L452
	ldr	r0, [r0]
	add	r0, r0, #0xd
	bl	sub_81B302C
	add	r0, r5, #0
	bl	sub_81615A8
	b	.L426
.L453:
	.align	2, 0
.L452:
	.word	gUnknown_0203CEC4
.L430:
	add	r0, r4, #0
	bl	sub_81B15A4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB3476
	b	.L426	@long jump
.LCB3476:
	ldr	r0, .L454
	ldrb	r1, [r0, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	ldr	r2, .L454+0x4
	cmp	r0, #0x1
	bne	.L432	@cond_branch
	ldr	r1, [r2]
	ldr	r0, .L454+0x8
	str	r0, [r1, #0x4]
.L432:
	ldr	r0, [r2]
	add	r0, r0, #0xd
	bl	sub_81B302C
	ldr	r0, .L454+0xc
	ldr	r1, .L454+0x10
	ldr	r2, [r0]
	add	r0, r5, #0
	bl	_call_via_r2
	b	.L426
.L455:
	.align	2, 0
.L454:
	.word	gUnknown_0203CEC8
	.word	gUnknown_0203CEC4
	.word	sub_81B9140
	.word	gUnknown_03006328
	.word	sub_81B6794
.L433:
	add	r0, r4, #0
	bl	sub_81B15A4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L426	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L456
	ldr	r0, [r0]
	add	r0, r0, #0xd
	bl	sub_81B302C
	add	r0, r5, #0
	bl	sub_81B7E4C
	b	.L426
.L457:
	.align	2, 0
.L456:
	.word	gUnknown_0203CEC4
.L435:
	add	r0, r4, #0
	bl	sub_81B15A4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L426	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L458
	ldr	r0, [r0]
	add	r0, r0, #0xd
	bl	sub_81B302C
	add	r0, r5, #0
	bl	sub_81B8474
	b	.L426
.L459:
	.align	2, 0
.L458:
	.word	gUnknown_0203CEC4
.L438:
	add	r0, r4, #0
	bl	sub_81B15A4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L426	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L460
	ldr	r0, [r0]
	add	r0, r0, #0xd
	bl	sub_81B302C
	add	r0, r5, #0
	bl	sub_81B7FAC
	b	.L426
.L461:
	.align	2, 0
.L460:
	.word	gUnknown_0203CEC4
.L440:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	sub_81B3938
	b	.L426
.L441:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	sub_81B12C0
	b	.L426
.L442:
	add	r0, r4, #0
	bl	sub_81B15A4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L426	@cond_branch
	ldrb	r1, [r4]
	add	r0, r5, #0
	bl	sub_81B21AC
	b	.L426
.L446:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	sub_81B36FC
.L426:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 sub_81B140C,.Lfe42-sub_81B140C
	.align	2, 0
	.type	 sub_81B15A4,function
	.thumb_func
sub_81B15A4:
	push	{lr}
	ldrb	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L465
	add	r0, r0, r1
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0x1
	beq	.L463	@cond_branch
	mov	r0, #0x1
	b	.L464
.L466:
	.align	2, 0
.L465:
	.word	gPlayerParty
.L463:
	mov	r0, #0x20
	bl	PlaySE
	mov	r0, #0x0
.L464:
	pop	{r1}
	bx	r1
.Lfe43:
	.size	 sub_81B15A4,.Lfe43-sub_81B15A4
	.align	2, 0
	.type	 sub_81B15D0,function
	.thumb_func
sub_81B15D0:
	push	{r4, r5, lr}
	add	r5, r1, #0
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L478
	ldrb	r0, [r0, #0xb]
	cmp	r0, #0x8
	beq	.L471	@cond_branch
	cmp	r0, #0x8
	bgt	.L477	@cond_branch
	cmp	r0, #0x1
	beq	.L469	@cond_branch
	b	.L473
.L479:
	.align	2, 0
.L478:
	.word	gUnknown_0203CEC8
.L477:
	cmp	r0, #0xa
	beq	.L471	@cond_branch
	cmp	r0, #0xd
	beq	.L472	@cond_branch
	b	.L473
.L469:
	mov	r0, #0x20
	bl	PlaySE
	b	.L468
.L471:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_81B407C
	b	.L468
.L472:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_81B2210
	b	.L468
.L473:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_81B1660
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L468	@cond_branch
	bl	sub_81221AC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L475	@cond_branch
	ldr	r1, .L480
	mov	r0, #0x7
	strh	r0, [r1]
.L475:
	ldr	r0, .L480+0x4
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r0, #0x7
	strb	r0, [r5]
	add	r0, r4, #0
	bl	sub_81B12C0
.L468:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L481:
	.align	2, 0
.L480:
	.word	gSpecialVar_0x8004
	.word	gUnknown_0203CEE8
.Lfe44:
	.size	 sub_81B15D0,.Lfe44-sub_81B15D0
	.align	2, 0
	.type	 sub_81B1660,function
	.thumb_func
sub_81B1660:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r5, #0x0
	ldr	r0, .L488
	ldrb	r0, [r0, #0x8]
	mov	r1, #0xf
	and	r1, r1, r0
	cmp	r1, #0x2
	bne	.L483	@cond_branch
	ldr	r5, .L488+0x4
	b	.L484
.L489:
	.align	2, 0
.L488:
	.word	gUnknown_0203CEC8
	.word	gText_CancelParticipation
.L483:
	cmp	r1, #0x4
	bne	.L484	@cond_branch
	bl	sub_81B88BC
	add	r5, r0, #0
.L484:
	cmp	r5, #0
	beq	.L486	@cond_branch
	ldr	r0, .L490
	ldr	r0, [r0]
	add	r0, r0, #0xd
	bl	sub_81B302C
	ldr	r4, .L490+0x4
	add	r0, r4, #0
	add	r1, r5, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	ldr	r1, .L490+0x8
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L490+0xc
	str	r1, [r0]
	mov	r0, #0x1
	b	.L487
.L491:
	.align	2, 0
.L490:
	.word	gUnknown_0203CEC4
	.word	gStringVar4
	.word	gTasks
	.word	sub_81B16D4
.L486:
	mov	r0, #0x0
.L487:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe45:
	.size	 sub_81B1660,.Lfe45-sub_81B1660
	.align	2, 0
	.type	 sub_81B16D4,function
	.thumb_func
sub_81B16D4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L493	@cond_branch
	bl	sub_81B334C
	ldr	r0, .L494
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L494+0x4
	str	r0, [r1]
.L493:
	pop	{r4}
	pop	{r0}
	bx	r0
.L495:
	.align	2, 0
.L494:
	.word	gTasks
	.word	sub_81B1708
.Lfe46:
	.size	 sub_81B16D4,.Lfe46-sub_81B16D4
	.align	2, 0
	.type	 sub_81B1708,function
	.thumb_func
sub_81B1708:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L498	@cond_branch
	cmp	r1, #0
	bgt	.L503	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L499	@cond_branch
	b	.L497
.L503:
	cmp	r1, #0x1
	beq	.L500	@cond_branch
	b	.L497
.L498:
	ldr	r0, .L504
	strb	r1, [r0]
	ldr	r1, .L504+0x4
	mov	r0, #0x7
	strb	r0, [r1, #0x9]
	bl	sub_81B8558
	add	r0, r4, #0
	bl	sub_81B12C0
	b	.L497
.L505:
	.align	2, 0
.L504:
	.word	gUnknown_0203CEE8
	.word	gUnknown_0203CEC8
.L499:
	mov	r0, #0x5
	bl	PlaySE
.L500:
	add	r0, r4, #0
	bl	sub_81B1C1C
.L497:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe47:
	.size	 sub_81B1708,.Lfe47-sub_81B1708
	.align	2, 0
	.type	 PartyMenuButtonHandler,function
	.thumb_func
PartyMenuButtonHandler:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L525
	ldrh	r1, [r0, #0x30]
	add	r3, r0, #0
	cmp	r1, #0x20
	beq	.L510	@cond_branch
	cmp	r1, #0x20
	bgt	.L519	@cond_branch
	cmp	r1, #0x10
	beq	.L511	@cond_branch
	b	.L512
.L526:
	.align	2, 0
.L525:
	.word	gMain
.L519:
	cmp	r1, #0x40
	beq	.L508	@cond_branch
	cmp	r1, #0x80
	beq	.L509	@cond_branch
	b	.L512
.L508:
	mov	r1, #0xff
	b	.L507
.L509:
	mov	r1, #0x1
	b	.L507
.L510:
	mov	r1, #0xfe
	b	.L507
.L511:
	mov	r1, #0x2
	b	.L507
.L512:
	bl	sub_812210C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L514	@cond_branch
	cmp	r0, #0x2
	beq	.L515	@cond_branch
	mov	r1, #0x0
	b	.L524
.L514:
	mov	r1, #0xff
	b	.L524
.L515:
	mov	r1, #0x1
.L524:
	ldr	r3, .L527
.L507:
	ldrh	r2, [r3, #0x2e]
	mov	r0, #0x8
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L520	@cond_branch
	mov	r0, #0x8
	b	.L523
.L528:
	.align	2, 0
.L527:
	.word	gMain
.L520:
	lsl	r0, r1, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L521	@cond_branch
	add	r0, r4, #0
	bl	UpdateCurrentPartySelection
	mov	r0, #0x0
	b	.L523
.L521:
	mov	r0, #0x1
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L522	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp	r0, #0x7
	bne	.L522	@cond_branch
	mov	r0, #0x2
	b	.L523
.L522:
	ldrh	r1, [r3, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
.L523:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe48:
	.size	 PartyMenuButtonHandler,.Lfe48-PartyMenuButtonHandler
	.align	2, 0
	.type	 UpdateCurrentPartySelection,function
	.thumb_func
UpdateCurrentPartySelection:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrb	r4, [r5]
	ldr	r0, .L533
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1e
	cmp	r0, #0
	bne	.L530	@cond_branch
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	add	r0, r5, #0
	bl	SetNewPartySelectTarget1
	b	.L531
.L534:
	.align	2, 0
.L533:
	.word	gUnknown_0203CEC8
.L530:
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	add	r0, r5, #0
	bl	SetNewPartySelectTarget2
.L531:
	mov	r1, #0x0
	ldrsb	r1, [r5, r1]
	lsl	r4, r4, #0x18
	asr	r0, r4, #0x18
	cmp	r1, r0
	beq	.L532	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	lsr	r0, r4, #0x18
	mov	r1, #0x0
	bl	sub_81B0FCC
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	sub_81B0FCC
.L532:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 UpdateCurrentPartySelection,.Lfe49-UpdateCurrentPartySelection
	.align	2, 0
	.type	 SetNewPartySelectTarget1,function
	.thumb_func
SetNewPartySelectTarget1:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L537	@cond_branch
	cmp	r1, r0
	bgt	.L561	@cond_branch
	sub	r0, r0, #0x1
	cmp	r1, r0
	beq	.L557	@cond_branch
	b	.L536
.L561:
	cmp	r1, #0x1
	beq	.L546	@cond_branch
	cmp	r1, #0x2
	beq	.L553	@cond_branch
	b	.L536
.L537:
	ldrb	r0, [r4]
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	cmp	r1, #0
	bne	.L538	@cond_branch
	mov	r0, #0x7
	b	.L562
.L538:
	cmp	r1, #0x6
	bne	.L540	@cond_branch
	ldr	r0, .L564
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	b	.L562
.L565:
	.align	2, 0
.L564:
	.word	gPlayerPartyCount
.L540:
	cmp	r1, #0x7
	bne	.L542	@cond_branch
	ldr	r0, .L566
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L543	@cond_branch
	mov	r0, #0x6
	b	.L562
.L567:
	.align	2, 0
.L566:
	.word	gUnknown_0203CEC4
.L543:
	ldr	r0, .L568
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	b	.L562
.L569:
	.align	2, 0
.L568:
	.word	gPlayerPartyCount
.L542:
	sub	r0, r0, #0x1
	b	.L562
.L546:
	ldrb	r2, [r4]
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp	r0, #0x7
	beq	.L563	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	ldr	r0, .L570
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	bne	.L549	@cond_branch
	ldr	r0, .L570+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L550	@cond_branch
	mov	r0, #0x6
	b	.L562
.L571:
	.align	2, 0
.L570:
	.word	gPlayerPartyCount
	.word	gUnknown_0203CEC4
.L550:
	mov	r0, #0x7
	b	.L562
.L549:
	add	r0, r2, #0x1
	b	.L562
.L553:
	ldr	r0, .L572
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L536	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp	r0, #0
	bne	.L536	@cond_branch
	ldr	r0, .L572+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.L562	@cond_branch
	mov	r0, #0x1
	b	.L562
.L573:
	.align	2, 0
.L572:
	.word	gPlayerPartyCount
	.word	gUnknown_0203CEC4
.L557:
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp	r0, #0
	beq	.L536	@cond_branch
	cmp	r0, #0x6
	beq	.L536	@cond_branch
	cmp	r0, #0x7
	beq	.L536	@cond_branch
	ldr	r0, .L574
	ldr	r3, [r0]
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x1
	ldrb	r2, [r3, #0x8]
	mov	r0, #0xf
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x8]
.L563:
	mov	r0, #0x0
.L562:
	strb	r0, [r4]
.L536:
	pop	{r4}
	pop	{r0}
	bx	r0
.L575:
	.align	2, 0
.L574:
	.word	gUnknown_0203CEC4
.Lfe50:
	.size	 SetNewPartySelectTarget1,.Lfe50-SetNewPartySelectTarget1
	.align	2, 0
	.type	 SetNewPartySelectTarget2,function
	.thumb_func
SetNewPartySelectTarget2:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	asr	r5, r1, #0x18
	mov	r6, #0x1
	neg	r6, r6
	cmp	r5, r6
	beq	.L578	@cond_branch
	cmp	r5, r6
	bgt	.L613	@cond_branch
	mov	r0, #0x2
	neg	r0, r0
	cmp	r5, r0
	bne	.LCB4359
	b	.L607	@long jump
.LCB4359:
	b	.L577
.L613:
	cmp	r5, #0x1
	beq	.L586	@cond_branch
	cmp	r5, #0x2
	beq	.L595	@cond_branch
	b	.L577
.L578:
	ldrb	r1, [r4]
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp	r0, #0
	bne	.L579	@cond_branch
	mov	r0, #0x7
	b	.L614
.L579:
	cmp	r0, #0x6
	bne	.L581	@cond_branch
	ldr	r0, .L617
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	b	.L614
.L618:
	.align	2, 0
.L617:
	.word	gPlayerPartyCount
.L581:
	cmp	r0, #0x7
	bne	.L580	@cond_branch
	ldr	r0, .L619
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L584	@cond_branch
	mov	r0, #0x6
	b	.L614
.L620:
	.align	2, 0
.L619:
	.word	gUnknown_0203CEC4
.L584:
	sub	r0, r1, #0x1
	strb	r0, [r4]
.L580:
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	lsl	r1, r2, #0x18
	asr	r1, r1, #0x18
	bl	sub_81B1B00
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.LCB4437
	b	.L577	@long jump
.LCB4437:
.L615:
	strb	r2, [r4]
	b	.L577
.L586:
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp	r0, #0x6
	bne	.L587	@cond_branch
	mov	r0, #0x7
	b	.L614
.L587:
	cmp	r0, #0x7
	bne	.L589	@cond_branch
	mov	r0, #0x0
	b	.L614
.L589:
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	mov	r1, #0x1
	bl	sub_81B1B00
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, r6
	bne	.L615	@cond_branch
	ldr	r0, .L621
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L592	@cond_branch
	mov	r0, #0x6
	b	.L614
.L622:
	.align	2, 0
.L621:
	.word	gUnknown_0203CEC4
.L592:
	mov	r0, #0x7
	b	.L614
.L595:
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp	r0, #0
	bne	.L596	@cond_branch
	ldr	r0, .L623
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1c
	lsr	r6, r0, #0x1d
	cmp	r6, #0x3
	bne	.L597	@cond_branch
	ldr	r0, .L623+0x4
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L577	@cond_branch
	strb	r6, [r4]
	b	.L577
.L624:
	.align	2, 0
.L623:
	.word	gUnknown_0203CEC4
	.word	gPlayerParty+0x12c
.L597:
	ldr	r0, .L625
	b	.L616
.L626:
	.align	2, 0
.L625:
	.word	gPlayerParty+0xc8
.L596:
	cmp	r0, #0x1
	bne	.L577	@cond_branch
	ldr	r0, .L627
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1c
	lsr	r5, r0, #0x1d
	cmp	r5, #0x5
	bne	.L603	@cond_branch
	ldr	r0, .L627+0x4
.L616:
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L577	@cond_branch
	strb	r5, [r4]
	b	.L577
.L628:
	.align	2, 0
.L627:
	.word	gUnknown_0203CEC4
	.word	gPlayerParty+0x1f4
.L603:
	ldr	r0, .L629
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L577	@cond_branch
	mov	r0, #0x4
	b	.L614
.L630:
	.align	2, 0
.L629:
	.word	gPlayerParty+0x190
.L607:
	ldrb	r1, [r4]
	sub	r0, r1, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L608	@cond_branch
	ldr	r0, .L631
	ldr	r3, [r0]
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x1
	ldrb	r2, [r3, #0x8]
	mov	r0, #0xf
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x8]
	mov	r0, #0x0
	b	.L614
.L632:
	.align	2, 0
.L631:
	.word	gUnknown_0203CEC4
.L608:
	sub	r0, r1, #0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L577	@cond_branch
	ldr	r0, .L633
	ldr	r3, [r0]
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x1
	ldrb	r2, [r3, #0x8]
	mov	r0, #0xf
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x8]
	mov	r0, #0x1
.L614:
	strb	r0, [r4]
.L577:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L634:
	.align	2, 0
.L633:
	.word	gUnknown_0203CEC4
.Lfe51:
	.size	 SetNewPartySelectTarget2,.Lfe51-SetNewPartySelectTarget2
	.align	2, 0
	.type	 sub_81B1B00,function
	.thumb_func
sub_81B1B00:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	asr	r6, r1, #0x18
.L638:
	lsl	r0, r5, #0x18
	asr	r0, r0, #0x18
	add	r0, r0, r6
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r5, #0x18
	lsr	r0, r1, #0x18
	cmp	r0, #0x5
	bhi	.L639	@cond_branch
	asr	r4, r1, #0x18
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L643
	add	r0, r0, r1
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L638	@cond_branch
	add	r0, r4, #0
	b	.L642
.L644:
	.align	2, 0
.L643:
	.word	gPlayerParty
.L639:
	mov	r0, #0x1
	neg	r0, r0
.L642:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe52:
	.size	 sub_81B1B00,.Lfe52-sub_81B1B00
	.align	2, 0
	.globl	GetMonNickname
	.type	 GetMonNickname,function
	.thumb_func
GetMonNickname:
	push	{r4, lr}
	add	r4, r1, #0
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	StringGetEnd10
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe53:
	.size	 GetMonNickname,.Lfe53-GetMonNickname
	.align	2, 0
	.globl	sub_81B1B5C
	.type	 sub_81B1B5C,function
	.thumb_func
sub_81B1B5C:
	push	{r4, lr}
	lsl	r4, r1, #0x18
	lsr	r4, r4, #0x18
	bl	sub_81B3300
	ldr	r0, .L647
	mov	r1, #0x1
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L647+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	pop	{r4}
	pop	{r1}
	bx	r1
.L648:
	.align	2, 0
.L647:
	.word	sub_81B1B8C
	.word	gTasks
.Lfe54:
	.size	 sub_81B1B5C,.Lfe54-sub_81B1B5C
	.align	2, 0
	.type	 sub_81B1B8C,function
	.thumb_func
sub_81B1B8C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	mov	r0, #0x6
	bl	RunTextPrintersRetIsActive
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L650	@cond_branch
	ldr	r0, .L652
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0x8
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L651	@cond_branch
	mov	r0, #0x6
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x6
	bl	ClearWindowTilemap
.L651:
	add	r0, r5, #0
	bl	DestroyTask
.L650:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L653:
	.align	2, 0
.L652:
	.word	gTasks
.Lfe55:
	.size	 sub_81B1B8C,.Lfe55-sub_81B1B8C
	.align	2, 0
	.globl	sub_81B1BD4
	.type	 sub_81B1BD4,function
	.thumb_func
sub_81B1BD4:
	push	{lr}
	ldr	r0, .L655
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L656:
	.align	2, 0
.L655:
	.word	sub_81B1B8C
.Lfe56:
	.size	 sub_81B1BD4,.Lfe56-sub_81B1BD4
	.align	2, 0
	.type	 sub_81B1BE8,function
	.thumb_func
sub_81B1BE8:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81221EC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L658	@cond_branch
	mov	r0, #0x0
	bl	display_pokemon_menu_message
	ldr	r0, .L659
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L659+0x4
	str	r0, [r1]
.L658:
	pop	{r4}
	pop	{r0}
	bx	r0
.L660:
	.align	2, 0
.L659:
	.word	gTasks
	.word	sub_81B1370
.Lfe57:
	.size	 sub_81B1BE8,.Lfe57-sub_81B1BE8
	.align	2, 0
	.type	 sub_81B1C1C,function
	.thumb_func
sub_81B1C1C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L662	@cond_branch
	mov	r0, #0x6
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x6
	bl	ClearWindowTilemap
	bl	sub_81221AC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L663	@cond_branch
	ldr	r0, .L666
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L666+0x4
	b	.L665
.L667:
	.align	2, 0
.L666:
	.word	gTasks
	.word	sub_81B1BE8
.L663:
	mov	r0, #0x0
	bl	display_pokemon_menu_message
	ldr	r0, .L668
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L668+0x4
.L665:
	str	r0, [r1]
.L662:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L669:
	.align	2, 0
.L668:
	.word	gTasks
	.word	sub_81B1370
.Lfe58:
	.size	 sub_81B1C1C,.Lfe58-sub_81B1C1C
	.align	2, 0
	.type	 sub_81B1C84,function
	.thumb_func
sub_81B1C84:
	push	{r4, r5, lr}
	add	r4, r1, #0
	add	r5, r2, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L671
	bl	GetMonNickname
	ldr	r1, .L671+0x4
	add	r0, r4, #0
	bl	CopyItemName
	ldr	r4, .L671+0x8
	ldr	r1, .L671+0xc
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	add	r1, r5, #0
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L672:
	.align	2, 0
.L671:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_PkmnWasGivenItem
.Lfe59:
	.size	 sub_81B1C84,.Lfe59-sub_81B1C84
	.align	2, 0
	.type	 sub_81B1CD0,function
	.thumb_func
sub_81B1CD0:
	push	{r4, r5, lr}
	add	r4, r1, #0
	add	r5, r2, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L674
	bl	GetMonNickname
	ldr	r1, .L674+0x4
	add	r0, r4, #0
	bl	CopyItemName
	ldr	r4, .L674+0x8
	ldr	r1, .L674+0xc
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	add	r1, r5, #0
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L675:
	.align	2, 0
.L674:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_ReceivedItemFromPkmn
.Lfe60:
	.size	 sub_81B1CD0,.Lfe60-sub_81B1CD0
	.align	2, 0
	.type	 sub_81B1D1C,function
	.thumb_func
sub_81B1D1C:
	push	{r4, r5, lr}
	add	r4, r1, #0
	add	r5, r2, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L677
	bl	GetMonNickname
	ldr	r1, .L677+0x4
	add	r0, r4, #0
	bl	CopyItemName
	ldr	r4, .L677+0x8
	ldr	r1, .L677+0xc
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	add	r1, r5, #0
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L678:
	.align	2, 0
.L677:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_SwitchPkmnItem
.Lfe61:
	.size	 sub_81B1D1C,.Lfe61-sub_81B1D1C
	.align	2, 0
	.type	 sub_81B1D68,function
	.thumb_func
sub_81B1D68:
	push	{r4, r5, lr}
	add	r4, r1, #0
	add	r5, r2, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L680
	bl	CopyItemName
	ldr	r1, .L680+0x4
	add	r0, r4, #0
	bl	CopyItemName
	ldr	r4, .L680+0x8
	ldr	r1, .L680+0xc
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	add	r1, r5, #0
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L681:
	.align	2, 0
.L680:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_SwitchedPkmnItem
.Lfe62:
	.size	 sub_81B1D68,.Lfe62-sub_81B1D68
	.align	2, 0
	.type	 sub_81B1DB8,function
	.thumb_func
sub_81B1DB8:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	add	r6, r0, #0
	lsl	r5, r1, #0x10
	lsr	r4, r5, #0x10
	add	r7, r4, #0
	add	r0, r4, #0
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L683	@cond_branch
	add	r0, r6, #0
	add	r1, r4, #0
	bl	GiveMailToMon
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L682	@cond_branch
.L683:
	mov	r0, sp
	strb	r7, [r0]
	mov	r1, sp
	lsr	r0, r5, #0x18
	strb	r0, [r1, #0x1]
	add	r0, r6, #0
	mov	r1, #0xc
	mov	r2, sp
	bl	SetMonData
.L682:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe63:
	.size	 sub_81B1DB8,.Lfe63-sub_81B1DB8
	.align	2, 0
	.type	 TryTakeMonItem,function
	.thumb_func
TryTakeMonItem:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, sp
	strh	r0, [r1]
	cmp	r0, #0
	bne	.L686	@cond_branch
	mov	r0, #0x0
	b	.L688
.L686:
	mov	r1, #0x1
	bl	AddBagItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L687	@cond_branch
	mov	r1, #0x0
	mov	r0, sp
	strh	r1, [r0]
	add	r0, r4, #0
	mov	r1, #0xc
	mov	r2, sp
	bl	SetMonData
	mov	r0, #0x2
	b	.L688
.L687:
	mov	r0, #0x1
.L688:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe64:
	.size	 TryTakeMonItem,.Lfe64-TryTakeMonItem
	.align	2, 0
	.type	 pokemon_item_not_removed,function
	.thumb_func
pokemon_item_not_removed:
	push	{lr}
	ldr	r0, .L690
	ldr	r1, .L690+0x4
	bl	StringExpandPlaceholders
	pop	{r0}
	bx	r0
.L691:
	.align	2, 0
.L690:
	.word	gStringVar4
	.word	gText_BagFullCouldNotRemoveItem
.Lfe65:
	.size	 pokemon_item_not_removed,.Lfe65-pokemon_item_not_removed
	.align	2, 0
	.type	 sub_81B1E60,function
	.thumb_func
sub_81B1E60:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	ldr	r1, .L696
	add	r7, r0, r1
	ldrh	r0, [r7, #0x4]
	ldrh	r1, [r7]
	add	r0, r0, r1
	strh	r0, [r7]
	ldrh	r0, [r7, #0x6]
	sub	r0, r0, #0x1
	strh	r0, [r7, #0x6]
	mov	r2, #0x8
	ldrsh	r0, [r7, r2]
	mov	r5, #0x64
	mul	r0, r0, r5
	ldr	r4, .L696+0x4
	add	r0, r0, r4
	mov	r1, #0x39
	add	r2, r7, #0
	bl	SetMonData
	mov	r3, #0x8
	ldrsh	r2, [r7, r3]
	mov	r0, r2
	mul	r0, r0, r5
	add	r0, r0, r4
	ldr	r6, .L696+0x8
	lsl	r2, r2, #0x4
	ldr	r1, [r6]
	add	r1, r1, r2
	mov	r2, #0x1
	bl	DisplayPartyPokemonHPCheck
	mov	r0, #0x8
	ldrsh	r2, [r7, r0]
	mov	r0, r2
	mul	r0, r0, r5
	add	r0, r0, r4
	lsl	r2, r2, #0x4
	ldr	r1, [r6]
	add	r1, r1, r2
	bl	DisplayPartyPokemonHPBarCheck
	mov	r1, #0x6
	ldrsh	r0, [r7, r1]
	cmp	r0, #0
	beq	.L694	@cond_branch
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	cmp	r1, #0
	beq	.L694	@cond_branch
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	cmp	r1, r0
	bne	.L693	@cond_branch
.L694:
	mov	r0, #0x0
	ldrsh	r1, [r7, r0]
	mov	r2, #0xa
	ldrsh	r0, [r7, r2]
	cmp	r1, r0
	ble	.L695	@cond_branch
	ldr	r0, .L696+0xc
	mov	r3, #0xa
	ldrsh	r2, [r7, r3]
	sub	r1, r1, r2
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
.L695:
	mov	r0, r8
	bl	SwitchTaskToFollowupFunc
.L693:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L697:
	.align	2, 0
.L696:
	.word	gTasks+0x8
	.word	gPlayerParty
	.word	gUnknown_0203CEDC
	.word	gStringVar2
.Lfe66:
	.size	 sub_81B1E60,.Lfe66-sub_81B1E60
	.align	2, 0
	.globl	sub_81B1F18
	.type	 sub_81B1F18,function
	.thumb_func
sub_81B1F18:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r8, r0
	mov	r9, r1
	add	r5, r2, #0
	mov	sl, r3
	ldr	r7, [sp, #0x20]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r0, r9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r0, sl
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	sl, r0
	mov	r0, #0x64
	mov	r6, r9
	mul	r6, r6, r0
	ldr	r0, .L699
	add	r6, r6, r0
	mov	r0, r8
	lsl	r4, r0, #0x2
	add	r4, r4, r8
	lsl	r4, r4, #0x3
	ldr	r0, .L699+0x4
	add	r4, r4, r0
	add	r0, r6, #0
	mov	r1, #0x39
	bl	GetMonData
	strh	r0, [r4]
	add	r0, r6, #0
	mov	r1, #0x3a
	bl	GetMonData
	strh	r0, [r4, #0x2]
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	strh	r5, [r4, #0x4]
	mov	r0, sl
	strh	r0, [r4, #0x6]
	mov	r0, r9
	strh	r0, [r4, #0x8]
	ldrh	r0, [r4]
	strh	r0, [r4, #0xa]
	ldr	r1, .L699+0x8
	mov	r0, r8
	add	r2, r7, #0
	bl	SetTaskFuncWithFollowupFunc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L700:
	.align	2, 0
.L699:
	.word	gPlayerParty
	.word	gTasks+0x8
	.word	sub_81B1E60
.Lfe67:
	.size	 sub_81B1F18,.Lfe67-sub_81B1F18
	.align	2, 0
	.type	 sub_81B1FA8,function
	.thumb_func
sub_81B1FA8:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L711
	add	r3, r0, r1
	cmp	r5, #0x5
	bhi	.L702	@cond_branch
	lsl	r0, r5, #0x2
	ldr	r1, .L711+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L712:
	.align	2, 0
.L711:
	.word	gTasks+0x8
	.word	.L709
	.align	2, 0
	.align	2, 0
.L709:
	.word	.L703
	.word	.L704
	.word	.L705
	.word	.L706
	.word	.L707
	.word	.L708
.L703:
	strh	r2, [r3]
	strh	r2, [r3, #0xa]
	b	.L702
.L704:
	strh	r2, [r3, #0x2]
	b	.L702
.L705:
	strh	r2, [r3, #0x4]
	b	.L702
.L706:
	strh	r2, [r3, #0x6]
	b	.L702
.L707:
	strh	r2, [r3, #0x8]
	b	.L702
.L708:
	ldr	r1, .L713
	add	r0, r4, #0
	bl	SetTaskFuncWithFollowupFunc
.L702:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L714:
	.align	2, 0
.L713:
	.word	sub_81B1E60
.Lfe68:
	.size	 sub_81B1FA8,.Lfe68-sub_81B1FA8
	.align	2, 0
	.globl	pokemon_ailments_get_primary
	.type	 pokemon_ailments_get_primary,function
	.thumb_func
pokemon_ailments_get_primary:
	push	{lr}
	add	r1, r0, #0
	mov	r0, #0x88
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L716	@cond_branch
	mov	r0, #0x1
	b	.L721
.L716:
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L717	@cond_branch
	mov	r0, #0x2
	b	.L721
.L717:
	mov	r0, #0x7
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L718	@cond_branch
	mov	r0, #0x3
	b	.L721
.L718:
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L719	@cond_branch
	mov	r0, #0x4
	b	.L721
.L719:
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L720	@cond_branch
	mov	r0, #0x0
	b	.L721
.L720:
	mov	r0, #0x5
.L721:
	pop	{r1}
	bx	r1
.Lfe69:
	.size	 pokemon_ailments_get_primary,.Lfe69-pokemon_ailments_get_primary
	.align	2, 0
	.globl	GetMonAilment
	.type	 GetMonAilment,function
	.thumb_func
GetMonAilment:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	bne	.L723	@cond_branch
	mov	r0, #0x7
	b	.L726
.L723:
	add	r0, r4, #0
	mov	r1, #0x37
	bl	GetMonData
	bl	pokemon_ailments_get_primary
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	bne	.L726	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	CheckPartyPokerus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L725	@cond_branch
	mov	r0, #0x0
	b	.L726
.L725:
	mov	r0, #0x6
.L726:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe70:
	.size	 GetMonAilment,.Lfe70-GetMonAilment
	.align	2, 0
	.type	 sub_81B209C,function
	.thumb_func
sub_81B209C:
	push	{r4, r5, lr}
	ldr	r2, .L742
	ldrb	r1, [r2, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0xb
	bne	.L728	@cond_branch
	add	r5, r2, #0
	add	r5, r5, #0xe
	mov	r0, #0x0
	strh	r0, [r2, #0xe]
	ldr	r0, .L742+0x4
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L729	@cond_branch
	mov	r4, #0x0
	ldr	r0, .L742+0x8
	ldrb	r0, [r0]
	cmp	r4, r0
	bcs	.L728	@cond_branch
.L733:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L742+0xc
	add	r0, r0, r1
	bl	sub_81B2134
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r0, r0, r4
	ldrh	r1, [r5]
	add	r0, r0, r1
	strh	r0, [r5]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L742+0x8
	ldrb	r0, [r0]
	cmp	r4, r0
	bcc	.L733	@cond_branch
	b	.L728
.L743:
	.align	2, 0
.L742:
	.word	gUnknown_0203CEC8
	.word	gSpecialVar_0x8005
	.word	gPlayerPartyCount
	.word	gPlayerParty
.L729:
	mov	r4, #0x0
	b	.L741
.L739:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L744
	add	r0, r0, r1
	bl	sub_81B2164
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r0, r0, r4
	ldrh	r1, [r5]
	add	r0, r0, r1
	strh	r0, [r5]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L741:
	ldr	r0, .L744+0x4
	ldrb	r0, [r0]
	cmp	r4, r0
	bcc	.L739	@cond_branch
.L728:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L745:
	.align	2, 0
.L744:
	.word	gPlayerParty
	.word	gPlayerPartyCount
.Lfe71:
	.size	 sub_81B209C,.Lfe71-sub_81B209C
	.align	2, 0
	.type	 sub_81B2134,function
	.thumb_func
sub_81B2134:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0x1
	beq	.L747	@cond_branch
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	sub_802C908
	cmp	r0, #0
	beq	.L747	@cond_branch
	mov	r0, #0x1
	b	.L748
.L747:
	mov	r0, #0x0
.L748:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 sub_81B2134,.Lfe72-sub_81B2134
	.align	2, 0
	.type	 sub_81B2164,function
	.thumb_func
sub_81B2164:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0x1
	beq	.L750	@cond_branch
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0x55
	bne	.L750	@cond_branch
	mov	r0, #0x1
	b	.L751
.L750:
	mov	r0, #0x0
.L751:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe73:
	.size	 sub_81B2164,.Lfe73-sub_81B2164
	.align	2, 0
	.type	 sub_81B218C,function
	.thumb_func
sub_81B218C:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L755
	mov	r2, #0xe
	ldrsh	r1, [r1, r2]
	asr	r1, r1, r0
	mov	r0, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L754	@cond_branch
	mov	r0, #0x0
.L754:
	pop	{r1}
	bx	r1
.L756:
	.align	2, 0
.L755:
	.word	gUnknown_0203CEC8
.Lfe74:
	.size	 sub_81B218C,.Lfe74-sub_81B218C
	.align	2, 0
	.type	 sub_81B21AC,function
	.thumb_func
sub_81B21AC:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	add	r0, r5, #0
	bl	sub_81B218C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L758	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L760
	strh	r5, [r0]
	add	r0, r4, #0
	bl	sub_81B12C0
	b	.L759
.L761:
	.align	2, 0
.L760:
	.word	gSpecialVar_0x8004
.L758:
	mov	r0, #0x20
	bl	PlaySE
	ldr	r0, .L762
	mov	r1, #0x0
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r1, .L762+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L762+0x8
	str	r1, [r0]
.L759:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L763:
	.align	2, 0
.L762:
	.word	gText_PkmnCantParticipate
	.word	gTasks
	.word	sub_81B1C1C
.Lfe75:
	.size	 sub_81B21AC,.Lfe75-sub_81B21AC
	.align	2, 0
	.type	 sub_81B2210,function
	.thumb_func
sub_81B2210:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L765
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r1, .L765+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L765+0x8
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L766:
	.align	2, 0
.L765:
	.word	gText_CancelParticipation
	.word	gTasks
	.word	sub_81B2248
.Lfe76:
	.size	 sub_81B2210,.Lfe76-sub_81B2210
	.align	2, 0
	.type	 sub_81B2248,function
	.thumb_func
sub_81B2248:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L768	@cond_branch
	bl	sub_81B334C
	ldr	r0, .L769
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L769+0x4
	str	r0, [r1]
.L768:
	pop	{r4}
	pop	{r0}
	bx	r0
.L770:
	.align	2, 0
.L769:
	.word	gTasks
	.word	sub_81B227C
.Lfe77:
	.size	 sub_81B2248,.Lfe77-sub_81B2248
	.align	2, 0
	.type	 sub_81B227C,function
	.thumb_func
sub_81B227C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L773	@cond_branch
	cmp	r1, #0
	bgt	.L778	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L774	@cond_branch
	b	.L772
.L778:
	cmp	r1, #0x1
	beq	.L775	@cond_branch
	b	.L772
.L773:
	ldr	r1, .L779
	mov	r0, #0x7
	strh	r0, [r1]
	add	r0, r4, #0
	bl	sub_81B12C0
	b	.L772
.L780:
	.align	2, 0
.L779:
	.word	gSpecialVar_0x8004
.L774:
	mov	r0, #0x5
	bl	PlaySE
.L775:
	ldr	r0, .L781
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L781+0x4
	str	r0, [r1]
.L772:
	pop	{r4}
	pop	{r0}
	bx	r0
.L782:
	.align	2, 0
.L781:
	.word	gTasks
	.word	sub_81B1C1C
.Lfe78:
	.size	 sub_81B227C,.Lfe78-sub_81B227C
	.align	2, 0
	.type	 CanMonLearnTMTutor,function
	.thumb_func
CanMonLearnTMTutor:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r5, r0, #0
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	add	r7, r4, #0
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	mov	r8, r6
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	beq	.L784	@cond_branch
	mov	r0, #0x3
	b	.L798
.L784:
	mov	r0, #0x90
	lsl	r0, r0, #0x1
	cmp	r4, r0
	bls	.L785	@cond_branch
	add	r1, r4, #0
	sub	r1, r1, #0x21
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	CanMonLearnTMHM
	cmp	r0, #0
	beq	.L799	@cond_branch
	add	r0, r7, #0
	bl	ItemIdToBattleMoveId
	b	.L800
.L785:
	add	r0, r5, #0
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	bl	CanLearnTutorMove
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L794	@cond_branch
.L799:
	mov	r0, #0x1
	b	.L798
.L794:
	mov	r0, r8
	bl	GetTutorMove
.L800:
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	add	r0, r5, #0
	bl	MonKnowsMove
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L796	@cond_branch
	mov	r0, #0x0
	b	.L798
.L796:
	mov	r0, #0x2
.L798:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe79:
	.size	 CanMonLearnTMTutor,.Lfe79-CanMonLearnTMTutor
	.align	2, 0
	.type	 GetTutorMove,function
	.thumb_func
GetTutorMove:
	lsl	r0, r0, #0x18
	ldr	r1, .L802
	lsr	r0, r0, #0x17
	add	r0, r0, r1
	ldrh	r0, [r0]
	bx	lr
.L803:
	.align	2, 0
.L802:
	.word	gTutorMoves
.Lfe80:
	.size	 GetTutorMove,.Lfe80-GetTutorMove
	.align	2, 0
	.type	 CanLearnTutorMove,function
	.thumb_func
CanLearnTutorMove:
	push	{lr}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L808
	lsr	r0, r0, #0xe
	add	r0, r0, r2
	mov	r2, #0x1
	lsl	r2, r2, r1
	ldr	r0, [r0]
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L805	@cond_branch
	mov	r0, #0x0
	b	.L807
.L809:
	.align	2, 0
.L808:
	.word	sTutorLearnsets
.L805:
	mov	r0, #0x1
.L807:
	pop	{r1}
	bx	r1
.Lfe81:
	.size	 CanLearnTutorMove,.Lfe81-CanLearnTutorMove
	.align	2, 0
	.type	 sub_81B239C,function
	.thumb_func
sub_81B239C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0x1
	beq	.L813	@cond_branch
	cmp	r0, #0x1
	bgt	.L817	@cond_branch
	cmp	r0, #0
	beq	.L812	@cond_branch
	b	.L815
.L817:
	cmp	r1, #0x2
	beq	.L814	@cond_branch
	b	.L815
.L812:
	ldr	r0, .L823
	bl	InitWindows
	b	.L811
.L824:
	.align	2, 0
.L823:
	.word	gUnknown_08615810
.L813:
	ldr	r0, .L825
	bl	InitWindows
	b	.L811
.L826:
	.align	2, 0
.L825:
	.word	gUnknown_08615850
.L814:
	ldr	r0, .L827
	bl	InitWindows
	b	.L811
.L828:
	.align	2, 0
.L827:
	.word	gUnknown_08615890
.L815:
	ldr	r0, .L829
	bl	InitWindows
.L811:
	bl	DeactivateAllTextPrinters
	mov	r4, #0x0
.L821:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L821	@cond_branch
	mov	r0, #0x0
	mov	r1, #0x4f
	mov	r2, #0xd0
	bl	LoadUserWindowBorderGfx
	bl	GetOverworldTextboxPalettePtr
	mov	r1, #0xe0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L829+0x4
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	pop	{r4}
	pop	{r0}
	bx	r0
.L830:
	.align	2, 0
.L829:
	.word	gUnknown_086158D0
	.word	gUnknown_0860F074
.Lfe82:
	.size	 sub_81B239C,.Lfe82-sub_81B239C
	.align	2, 0
	.type	 sub_81B2428,function
	.thumb_func
sub_81B2428:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L837
	ldrb	r1, [r0, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x5
	bne	.LCB6301
	b	.L832	@long jump
.LCB6301:
	cmp	r2, #0x1
	bne	.L833	@cond_branch
	ldr	r0, .L837+0x4
	bl	AddWindow
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r5, .L837+0x8
	mov	r0, #0x0
	add	r1, r5, #0
	mov	r2, #0x30
	bl	GetStringCenterAlignXOffset
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r0, #0x0
	str	r0, [sp]
	str	r0, [sp, #0x4]
	ldr	r0, .L837+0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	neg	r0, r0
	str	r0, [sp, #0xc]
	str	r5, [sp, #0x10]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized4
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, .L837+0x10
	bl	AddWindow
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r6, #0x0
	b	.L834
.L838:
	.align	2, 0
.L837:
	.word	gUnknown_0203CEC8
	.word	gUnknown_08615918
	.word	gMenuText_Confirm
	.word	sFontColorTable
	.word	gUnknown_08615910
.L833:
	ldr	r0, .L839
	bl	AddWindow
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r6, #0x3
.L834:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r0, .L839+0x4
	ldrb	r1, [r0, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0xa
	beq	.L835	@cond_branch
	ldr	r4, .L839+0x8
	mov	r0, #0x0
	add	r1, r4, #0
	mov	r2, #0x30
	bl	GetStringCenterAlignXOffset
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r2, r2, r6
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L839+0xc
	str	r0, [sp]
	mov	r0, #0x1
	neg	r0, r0
	str	r0, [sp, #0x4]
	str	r4, [sp, #0x8]
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	b	.L836
.L840:
	.align	2, 0
.L839:
	.word	gUnknown_08615908
	.word	gUnknown_0203CEC8
	.word	gText_Cancel
	.word	sFontColorTable
.L835:
	ldr	r4, .L841
	mov	r0, #0x0
	add	r1, r4, #0
	mov	r2, #0x30
	bl	GetStringCenterAlignXOffset
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r2, r2, r6
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L841+0x4
	str	r0, [sp]
	mov	r0, #0x1
	neg	r0, r0
	str	r0, [sp, #0x4]
	str	r4, [sp, #0x8]
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
.L836:
	add	r0, r5, #0
	bl	PutWindowTilemap
	add	r0, r5, #0
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	schedule_bg_copy_tilemap_to_vram
.L832:
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L842:
	.align	2, 0
.L841:
	.word	gText_Cancel2
	.word	sFontColorTable
.Lfe83:
	.size	 sub_81B2428,.Lfe83-sub_81B2428
	.align	2, 0
	.type	 GetPartyMenuPaletteFromBuffer,function
	.thumb_func
GetPartyMenuPaletteFromBuffer:
	lsl	r0, r0, #0x18
	ldr	r1, .L844
	lsr	r0, r0, #0x17
	add	r0, r0, #0x18
	ldr	r1, [r1]
	add	r1, r1, r0
	add	r0, r1, #0
	bx	lr
.L845:
	.align	2, 0
.L844:
	.word	gUnknown_0203CEC4
.Lfe84:
	.size	 GetPartyMenuPaletteFromBuffer,.Lfe84-GetPartyMenuPaletteFromBuffer
	.align	2, 0
	.type	 BlitBitmapToPartyWindow,function
	.thumb_func
BlitBitmapToPartyWindow:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x2c
	str	r1, [sp, #0xc]
	ldr	r1, [sp, #0x4c]
	ldr	r4, [sp, #0x50]
	ldr	r5, [sp, #0x54]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x8]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp, #0x10]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r3, [sp, #0x14]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	str	r1, [sp, #0x18]
	lsl	r4, r4, #0x18
	lsr	r6, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	sl, r5
	mov	r0, sl
	mul	r0, r0, r6
	lsl	r0, r0, #0x5
	bl	AllocZeroed
	mov	r9, r0
	cmp	r0, #0
	beq	.L847	@cond_branch
	mov	r5, #0x0
	ldr	r0, [sp, #0x14]
	lsl	r0, r0, #0x13
	str	r0, [sp, #0x1c]
	ldr	r1, [sp, #0x18]
	lsl	r1, r1, #0x13
	str	r1, [sp, #0x20]
	lsl	r2, r6, #0x13
	str	r2, [sp, #0x24]
	mov	r0, sl
	lsl	r0, r0, #0x13
	str	r0, [sp, #0x28]
	cmp	r5, sl
	bcs	.L849	@cond_branch
.L851:
	mov	r4, #0x0
	add	r1, r5, #0x1
	mov	r8, r1
	cmp	r4, r6
	bcs	.L850	@cond_branch
	ldr	r2, [sp, #0x18]
	add	r0, r2, r5
	ldr	r2, [sp, #0x10]
	mov	r1, r0
	mul	r1, r1, r2
	add	r7, r1, #0
.L855:
	ldr	r1, [sp, #0x14]
	add	r0, r1, r4
	add	r0, r0, r7
	ldr	r2, [sp, #0xc]
	add	r0, r2, r0
	ldrb	r0, [r0]
	bl	GetPartyMiscGraphicsTile
	mov	r1, r5
	mul	r1, r1, r6
	add	r1, r1, r4
	lsl	r1, r1, #0x5
	add	r1, r1, r9
	mov	r2, #0x10
	bl	CpuSet
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r6
	bcc	.L855	@cond_branch
.L850:
	mov	r1, r8
	lsl	r0, r1, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, sl
	bcc	.L851	@cond_branch
.L849:
	ldr	r0, [sp, #0x1c]
	lsr	r2, r0, #0x10
	ldr	r1, [sp, #0x20]
	lsr	r3, r1, #0x10
	ldr	r1, [sp, #0x24]
	lsr	r0, r1, #0x10
	str	r0, [sp]
	ldr	r1, [sp, #0x28]
	lsr	r0, r1, #0x10
	str	r0, [sp, #0x4]
	ldr	r0, [sp, #0x8]
	mov	r1, r9
	bl	BlitBitmapToWindow
	mov	r0, r9
	bl	Free
.L847:
	add	sp, sp, #0x2c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe85:
	.size	 BlitBitmapToPartyWindow,.Lfe85-BlitBitmapToPartyWindow
	.align	2, 0
	.type	 BlitBitmapToPartyWindow_Default1,function
	.thumb_func
BlitBitmapToPartyWindow_Default1:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r4, [sp, #0x1c]
	ldr	r5, [sp, #0x20]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	cmp	r3, #0
	bne	.L859	@cond_branch
	cmp	r4, #0
	bne	.L859	@cond_branch
	mov	r3, #0xa
	mov	r4, #0x7
.L859:
	cmp	r5, #0
	bne	.L860	@cond_branch
	ldr	r1, .L862
	str	r2, [sp]
	str	r3, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r2, #0xa
	add	r3, r6, #0
	bl	BlitBitmapToPartyWindow
	b	.L861
.L863:
	.align	2, 0
.L862:
	.word	sMainSlotTileNums
.L860:
	ldr	r1, .L864
	str	r2, [sp]
	str	r3, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r2, #0xa
	add	r3, r6, #0
	bl	BlitBitmapToPartyWindow
.L861:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L865:
	.align	2, 0
.L864:
	.word	sMainSlotTileNums_Egg
.Lfe86:
	.size	 BlitBitmapToPartyWindow_Default1,.Lfe86-BlitBitmapToPartyWindow_Default1
	.align	2, 0
	.type	 BlitBitmapToPartyWindow_Default2,function
	.thumb_func
BlitBitmapToPartyWindow_Default2:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r4, [sp, #0x1c]
	ldr	r5, [sp, #0x20]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	cmp	r3, #0
	bne	.L867	@cond_branch
	cmp	r4, #0
	bne	.L867	@cond_branch
	mov	r3, #0x12
	mov	r4, #0x3
.L867:
	cmp	r5, #0
	bne	.L868	@cond_branch
	ldr	r1, .L870
	str	r2, [sp]
	str	r3, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r2, #0x12
	add	r3, r6, #0
	bl	BlitBitmapToPartyWindow
	b	.L869
.L871:
	.align	2, 0
.L870:
	.word	sOtherSlotsTileNums
.L868:
	ldr	r1, .L872
	str	r2, [sp]
	str	r3, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r2, #0x12
	add	r3, r6, #0
	bl	BlitBitmapToPartyWindow
.L869:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L873:
	.align	2, 0
.L872:
	.word	sOtherSlotsTileNums_Egg
.Lfe87:
	.size	 BlitBitmapToPartyWindow_Default2,.Lfe87-BlitBitmapToPartyWindow_Default2
	.align	2, 0
	.type	 DrawEmptySlot,function
	.thumb_func
DrawEmptySlot:
	push	{lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L875
	mov	r2, #0x0
	str	r2, [sp]
	mov	r2, #0x12
	str	r2, [sp, #0x4]
	mov	r2, #0x3
	str	r2, [sp, #0x8]
	mov	r2, #0x12
	mov	r3, #0x0
	bl	BlitBitmapToPartyWindow
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L876:
	.align	2, 0
.L875:
	.word	sEmptySlotTileNums
.Lfe88:
	.size	 DrawEmptySlot,.Lfe88-DrawEmptySlot
	.align	2, 0
	.type	 UpdateSelectedPartyBox,function
	.thumb_func
UpdateSelectedPartyBox:
	push	{r4, r5, r6, r7, lr}
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	add	r5, r4, #0
	ldrb	r0, [r0, #0x8]
	mov	r1, #0x5
	bl	GetWindowAttribute
	lsl	r0, r0, #0x1c
	lsr	r6, r0, #0x18
	add	r7, r6, #0
	mov	r0, #0x40
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L878	@cond_branch
	ldr	r5, .L903
	ldrb	r0, [r5]
	bl	GetPartyMenuPaletteFromBuffer
	ldr	r4, .L903+0x4
	b	.L900
.L904:
	.align	2, 0
.L903:
	.word	gUnknown_08615AF1
	.word	gUnknown_08615AC0
.L878:
	mov	r0, #0x20
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L880	@cond_branch
	mov	r0, #0x1
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L881	@cond_branch
	ldr	r5, .L905
	b	.L901
.L906:
	.align	2, 0
.L905:
	.word	gUnknown_08615ADF
.L881:
	ldr	r5, .L907
	ldrb	r0, [r5]
	bl	GetPartyMenuPaletteFromBuffer
	ldr	r4, .L907+0x4
	ldrb	r1, [r4]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x1]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x1]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x2]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x2]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldr	r5, .L907+0x8
	b	.L902
.L908:
	.align	2, 0
.L907:
	.word	gUnknown_08615ADF
	.word	gUnknown_08615ABA
	.word	gUnknown_08615AEE
.L880:
	mov	r0, #0x10
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L884	@cond_branch
	ldr	r5, .L909
	ldrb	r0, [r5]
	bl	GetPartyMenuPaletteFromBuffer
	ldr	r4, .L909+0x4
	ldrb	r1, [r4]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x1]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x1]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x2]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x2]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldr	r5, .L909+0x8
	b	.L902
.L910:
	.align	2, 0
.L909:
	.word	gUnknown_08615ADF
	.word	gUnknown_08615ABA
	.word	gUnknown_08615AEE
.L884:
	mov	r0, #0x4
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L886	@cond_branch
	mov	r0, #0x1
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L887	@cond_branch
	ldr	r5, .L911
	b	.L901
.L912:
	.align	2, 0
.L911:
	.word	gUnknown_08615ADF
.L887:
	ldr	r5, .L913
	ldrb	r0, [r5]
	bl	GetPartyMenuPaletteFromBuffer
	ldr	r4, .L913+0x4
	ldrb	r1, [r4]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x1]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x1]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x2]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x2]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldr	r5, .L913+0x8
	b	.L902
.L914:
	.align	2, 0
.L913:
	.word	gUnknown_08615ADF
	.word	gUnknown_08615ABA
	.word	gUnknown_08615AEE
.L886:
	mov	r0, #0x2
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L890	@cond_branch
	mov	r0, #0x1
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L891	@cond_branch
	ldr	r5, .L915
	b	.L901
.L916:
	.align	2, 0
.L915:
	.word	gUnknown_08615ADC
.L891:
	ldr	r5, .L917
	ldrb	r0, [r5]
	bl	GetPartyMenuPaletteFromBuffer
	ldr	r4, .L917+0x4
	ldrb	r1, [r4]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x1]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x1]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x2]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x2]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldr	r5, .L917+0x8
	b	.L902
.L918:
	.align	2, 0
.L917:
	.word	gUnknown_08615AD3
	.word	gUnknown_08615ABA
	.word	gUnknown_08615AE8
.L890:
	mov	r0, #0x8
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L894	@cond_branch
	mov	r0, #0x1
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L895	@cond_branch
	ldr	r5, .L919
	b	.L901
.L920:
	.align	2, 0
.L919:
	.word	gUnknown_08615AD9
.L895:
	ldr	r5, .L921
	ldrb	r0, [r5]
	bl	GetPartyMenuPaletteFromBuffer
	ldr	r4, .L921+0x4
	ldrb	r1, [r4]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x1]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x1]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x2]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x2]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldr	r5, .L921+0x8
	b	.L902
.L922:
	.align	2, 0
.L921:
	.word	gUnknown_08615AD0
	.word	gUnknown_08615ABA
	.word	gUnknown_08615AE5
.L894:
	mov	r0, #0x1
	and	r5, r5, r0
	cmp	r5, #0
	beq	.L898	@cond_branch
	ldr	r5, .L923
.L901:
	ldrb	r0, [r5]
	bl	GetPartyMenuPaletteFromBuffer
	ldr	r4, .L923+0x4
	ldrb	r1, [r4]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x1]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x1]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x2]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x2]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldr	r5, .L923+0x8
.L902:
	ldrb	r0, [r5]
	bl	GetPartyMenuPaletteFromBuffer
	ldr	r4, .L923+0xc
.L900:
	ldrb	r1, [r4]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x1]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x1]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x2]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x2]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	b	.L879
.L924:
	.align	2, 0
.L923:
	.word	gUnknown_08615AD6
	.word	gUnknown_08615ABA
	.word	gUnknown_08615AEB
	.word	gUnknown_08615ABD
.L898:
	ldr	r5, .L925
	ldrb	r0, [r5]
	bl	GetPartyMenuPaletteFromBuffer
	ldr	r4, .L925+0x4
	ldrb	r1, [r4]
	add	r1, r1, r7
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x1]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x1]
	add	r1, r1, r7
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x2]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x2]
	add	r1, r1, r7
	mov	r2, #0x2
	bl	LoadPalette
	ldr	r5, .L925+0x8
	ldrb	r0, [r5]
	bl	GetPartyMenuPaletteFromBuffer
	ldr	r4, .L925+0xc
	ldrb	r1, [r4]
	add	r1, r1, r7
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x1]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x1]
	add	r1, r1, r7
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x2]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x2]
	add	r1, r1, r7
	mov	r2, #0x2
	bl	LoadPalette
.L879:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L926:
	.align	2, 0
.L925:
	.word	gUnknown_08615ACD
	.word	gUnknown_08615ABA
	.word	gUnknown_08615AE2
	.word	gUnknown_08615ABD
.Lfe89:
	.size	 UpdateSelectedPartyBox,.Lfe89-UpdateSelectedPartyBox
	.align	2, 0
	.type	 DisplayPartyPokemonBarDetail,function
	.thumb_func
DisplayPartyPokemonBarDetail:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r5, [r3]
	ldrb	r3, [r3, #0x1]
	lsl	r4, r2, #0x1
	add	r4, r4, r2
	ldr	r2, .L928
	add	r4, r4, r2
	str	r4, [sp]
	mov	r2, #0x0
	str	r2, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x0
	add	r2, r5, #0
	bl	AddTextPrinterParameterized3
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L929:
	.align	2, 0
.L928:
	.word	sFontColorTable
.Lfe90:
	.size	 DisplayPartyPokemonBarDetail,.Lfe90-DisplayPartyPokemonBarDetail
	.align	2, 0
	.type	 DisplayPartyPokemonNickname,function
	.thumb_func
DisplayPartyPokemonNickname:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x14
	add	r7, r0, #0
	add	r6, r1, #0
	lsl	r2, r2, #0x18
	lsr	r4, r2, #0x18
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L931	@cond_branch
	cmp	r4, #0x1
	bne	.L932	@cond_branch
	ldr	r5, [r6]
	ldrb	r0, [r6, #0x8]
	ldrb	r1, [r5, #0x4]
	lsr	r1, r1, #0x3
	ldrb	r2, [r5, #0x5]
	lsr	r2, r2, #0x3
	ldrb	r3, [r5, #0x6]
	lsr	r3, r3, #0x3
	ldrb	r4, [r5, #0x7]
	lsr	r4, r4, #0x3
	str	r4, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r4, [r5]
	bl	_call_via_r4
.L932:
	add	r0, r7, #0
	add	r1, sp, #0x8
	bl	GetMonNickname
	ldrb	r0, [r6, #0x8]
	ldr	r3, [r6]
	add	r3, r3, #0x4
	add	r1, sp, #0x8
	mov	r2, #0x0
	bl	DisplayPartyPokemonBarDetail
.L931:
	add	sp, sp, #0x14
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe91:
	.size	 DisplayPartyPokemonNickname,.Lfe91-DisplayPartyPokemonNickname
	.align	2, 0
	.type	 DisplayPartyPokemonLevelCheck,function
	.thumb_func
DisplayPartyPokemonLevelCheck:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	add	r6, r0, #0
	add	r7, r1, #0
	lsl	r2, r2, #0x18
	lsr	r4, r2, #0x18
	mov	r8, r4
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L934	@cond_branch
	add	r0, r6, #0
	bl	GetMonAilment
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L936	@cond_branch
	cmp	r0, #0x6
	bne	.L934	@cond_branch
.L936:
	cmp	r4, #0
	beq	.L937	@cond_branch
	ldr	r5, [r7]
	ldrb	r0, [r7, #0x8]
	ldrb	r1, [r5, #0x8]
	lsr	r1, r1, #0x3
	ldrb	r2, [r5, #0x9]
	lsr	r2, r2, #0x3
	add	r2, r2, #0x1
	ldrb	r3, [r5, #0xa]
	lsr	r3, r3, #0x3
	ldrb	r4, [r5, #0xb]
	lsr	r4, r4, #0x3
	str	r4, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r4, [r5]
	bl	_call_via_r4
.L937:
	mov	r0, r8
	cmp	r0, #0x2
	beq	.L934	@cond_branch
	add	r0, r6, #0
	mov	r1, #0x38
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r7, #0
	bl	DisplayPartyPokemonLevel
.L934:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe92:
	.size	 DisplayPartyPokemonLevelCheck,.Lfe92-DisplayPartyPokemonLevelCheck
	.align	2, 0
	.type	 DisplayPartyPokemonLevel,function
	.thumb_func
DisplayPartyPokemonLevel:
	push	{r4, r5, r6, lr}
	add	r2, r0, #0
	add	r6, r1, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r5, .L940
	add	r0, r5, #0
	add	r1, r2, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L940+0x4
	ldr	r1, .L940+0x8
	add	r0, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	add	r1, r5, #0
	bl	StringAppend
	ldrb	r0, [r6, #0x8]
	ldr	r3, [r6]
	add	r3, r3, #0x8
	add	r1, r4, #0
	mov	r2, #0x0
	bl	DisplayPartyPokemonBarDetail
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L941:
	.align	2, 0
.L940:
	.word	gStringVar2
	.word	gStringVar1
	.word	gText_LevelSymbol
.Lfe93:
	.size	 DisplayPartyPokemonLevel,.Lfe93-DisplayPartyPokemonLevel
	.align	2, 0
	.type	 DisplayPartyPokemonGenderNidoranCheck,function
	.thumb_func
DisplayPartyPokemonGenderNidoranCheck:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x14
	add	r6, r0, #0
	add	r7, r1, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	cmp	r2, #0x1
	bne	.L943	@cond_branch
	ldr	r5, [r7]
	ldrb	r0, [r7, #0x8]
	ldrb	r1, [r5, #0xc]
	lsr	r1, r1, #0x3
	ldrb	r2, [r5, #0xd]
	lsr	r2, r2, #0x3
	add	r2, r2, #0x1
	ldrb	r3, [r5, #0xe]
	lsr	r3, r3, #0x3
	ldrb	r4, [r5, #0xf]
	lsr	r4, r4, #0x3
	str	r4, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r4, [r5]
	bl	_call_via_r4
.L943:
	add	r0, r6, #0
	add	r1, sp, #0x8
	bl	GetMonNickname
	add	r0, r6, #0
	bl	GetMonGender
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r6, #0
	mov	r1, #0xb
	bl	GetMonData
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	add	r2, sp, #0x8
	add	r3, r7, #0
	bl	DisplayPartyPokemonGender
	add	sp, sp, #0x14
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe94:
	.size	 DisplayPartyPokemonGenderNidoranCheck,.Lfe94-DisplayPartyPokemonGenderNidoranCheck
	.align	2, 0
	.type	 DisplayPartyPokemonGender,function
	.thumb_func
DisplayPartyPokemonGender:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r9, r2
	add	r7, r3, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	add	r5, r4, #0
	ldrb	r0, [r7, #0x8]
	mov	r1, #0x5
	bl	GetWindowAttribute
	lsl	r0, r0, #0x1c
	lsr	r6, r0, #0x18
	cmp	r4, #0
	beq	.L944	@cond_branch
	cmp	r4, #0x20
	beq	.L947	@cond_branch
	cmp	r4, #0x1d
	bne	.L946	@cond_branch
.L947:
	mov	r0, #0xb
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L953
	add	r1, r1, r0
	mov	r0, r9
	bl	StringCompare
	cmp	r0, #0
	beq	.L944	@cond_branch
.L946:
	mov	r0, r8
	cmp	r0, #0
	beq	.L949	@cond_branch
	cmp	r0, #0xfe
	beq	.L950	@cond_branch
	b	.L944
.L954:
	.align	2, 0
.L953:
	.word	gSpeciesNames
.L949:
	ldr	r5, .L955
	ldrb	r0, [r5]
	bl	GetPartyMenuPaletteFromBuffer
	ldr	r4, .L955+0x4
	ldrb	r1, [r4]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x1]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x1]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r7, #0x8]
	ldr	r1, .L955+0x8
	ldr	r3, [r7]
	add	r3, r3, #0xc
	mov	r2, #0x2
	bl	DisplayPartyPokemonBarDetail
	b	.L944
.L956:
	.align	2, 0
.L955:
	.word	gUnknown_08615AC3
	.word	gUnknown_08615AB6
	.word	gText_MaleSymbol
.L950:
	ldr	r5, .L957
	ldrb	r0, [r5]
	bl	GetPartyMenuPaletteFromBuffer
	ldr	r4, .L957+0x4
	ldrb	r1, [r4]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x1]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x1]
	add	r1, r1, r6
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r7, #0x8]
	ldr	r1, .L957+0x8
	ldr	r3, [r7]
	add	r3, r3, #0xc
	mov	r2, #0x2
	bl	DisplayPartyPokemonBarDetail
.L944:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L958:
	.align	2, 0
.L957:
	.word	gUnknown_08615AC5
	.word	gUnknown_08615AB6
	.word	gText_FemaleSymbol
.Lfe95:
	.size	 DisplayPartyPokemonGender,.Lfe95-DisplayPartyPokemonGender
	.align	2, 0
	.type	 DisplayPartyPokemonHPCheck,function
	.thumb_func
DisplayPartyPokemonHPCheck:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	add	r7, r0, #0
	add	r6, r1, #0
	lsl	r2, r2, #0x18
	lsr	r4, r2, #0x18
	mov	r8, r4
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L960	@cond_branch
	cmp	r4, #0
	beq	.L961	@cond_branch
	ldr	r5, [r6]
	ldrb	r0, [r6, #0x8]
	ldrb	r1, [r5, #0x10]
	lsr	r1, r1, #0x3
	ldrb	r2, [r5, #0x11]
	lsr	r2, r2, #0x3
	add	r2, r2, #0x1
	ldrb	r3, [r5, #0x12]
	lsr	r3, r3, #0x3
	ldrb	r4, [r5, #0x13]
	lsr	r4, r4, #0x3
	str	r4, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r4, [r5]
	bl	_call_via_r4
.L961:
	mov	r0, r8
	cmp	r0, #0x2
	beq	.L960	@cond_branch
	add	r0, r7, #0
	mov	r1, #0x39
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	bl	DisplayPartyPokemonHP
.L960:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe96:
	.size	 DisplayPartyPokemonHPCheck,.Lfe96-DisplayPartyPokemonHPCheck
	.align	2, 0
	.type	 DisplayPartyPokemonHP,function
	.thumb_func
DisplayPartyPokemonHP:
	push	{r4, r5, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r5, .L964
	add	r0, r5, #0
	add	r1, r2, #0
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r1, #0xba
	strb	r1, [r0]
	mov	r1, #0xff
	strb	r1, [r0, #0x1]
	ldrb	r0, [r4, #0x8]
	ldr	r3, [r4]
	add	r3, r3, #0x10
	add	r1, r5, #0
	mov	r2, #0x0
	bl	DisplayPartyPokemonBarDetail
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L965:
	.align	2, 0
.L964:
	.word	gStringVar1
.Lfe97:
	.size	 DisplayPartyPokemonHP,.Lfe97-DisplayPartyPokemonHP
	.align	2, 0
	.type	 DisplayPartyPokemonMaxHPCheck,function
	.thumb_func
DisplayPartyPokemonMaxHPCheck:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	add	r7, r0, #0
	add	r6, r1, #0
	lsl	r2, r2, #0x18
	lsr	r4, r2, #0x18
	mov	r8, r4
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L967	@cond_branch
	cmp	r4, #0
	beq	.L968	@cond_branch
	ldr	r5, [r6]
	ldrb	r0, [r6, #0x8]
	ldrb	r1, [r5, #0x14]
	lsr	r1, r1, #0x3
	add	r1, r1, #0x1
	ldrb	r2, [r5, #0x15]
	lsr	r2, r2, #0x3
	add	r2, r2, #0x1
	ldrb	r3, [r5, #0x16]
	lsr	r3, r3, #0x3
	ldrb	r4, [r5, #0x17]
	lsr	r4, r4, #0x3
	str	r4, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r4, [r5]
	bl	_call_via_r4
.L968:
	mov	r0, r8
	cmp	r0, #0x2
	beq	.L967	@cond_branch
	add	r0, r7, #0
	mov	r1, #0x3a
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	bl	DisplayPartyPokemonMaxHP
.L967:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe98:
	.size	 DisplayPartyPokemonMaxHPCheck,.Lfe98-DisplayPartyPokemonMaxHPCheck
	.align	2, 0
	.type	 DisplayPartyPokemonMaxHP,function
	.thumb_func
DisplayPartyPokemonMaxHP:
	push	{r4, r5, r6, lr}
	add	r2, r0, #0
	add	r6, r1, #0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r5, .L971
	add	r0, r5, #0
	add	r1, r2, #0
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L971+0x4
	ldr	r1, .L971+0x8
	add	r0, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	add	r1, r5, #0
	bl	StringAppend
	ldrb	r0, [r6, #0x8]
	ldr	r3, [r6]
	add	r3, r3, #0x14
	add	r1, r4, #0
	mov	r2, #0x0
	bl	DisplayPartyPokemonBarDetail
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L972:
	.align	2, 0
.L971:
	.word	gStringVar2
	.word	gStringVar1
	.word	gText_Slash
.Lfe99:
	.size	 DisplayPartyPokemonMaxHP,.Lfe99-DisplayPartyPokemonMaxHP
	.align	2, 0
	.type	 DisplayPartyPokemonHPBarCheck,function
	.thumb_func
DisplayPartyPokemonHPBarCheck:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L974	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x39
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r5, #0
	mov	r1, #0x3a
	bl	GetMonData
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	add	r2, r6, #0
	bl	DisplayPartyPokemonHPBar
.L974:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe100:
	.size	 DisplayPartyPokemonHPBarCheck,.Lfe100-DisplayPartyPokemonHPBarCheck
	.align	2, 0
	.type	 DisplayPartyPokemonHPBar,function
	.thumb_func
DisplayPartyPokemonHPBar:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x8
	add	r6, r2, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r9, r1
	ldrb	r0, [r6, #0x8]
	mov	r1, #0x5
	bl	GetWindowAttribute
	lsl	r0, r0, #0x1c
	lsr	r7, r0, #0x18
	mov	r1, r8
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	mov	r2, r9
	lsl	r1, r2, #0x10
	asr	r1, r1, #0x10
	bl	GetHPBarLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.L979	@cond_branch
	cmp	r0, #0x2
	blt	.L980	@cond_branch
	cmp	r0, #0x4
	bgt	.L980	@cond_branch
	ldr	r5, .L984
	b	.L983
.L985:
	.align	2, 0
.L984:
	.word	gUnknown_08615AC7
.L979:
	ldr	r5, .L986
.L983:
	ldrb	r0, [r5]
	bl	GetPartyMenuPaletteFromBuffer
	ldr	r4, .L986+0x4
	ldrb	r1, [r4]
	add	r1, r1, r7
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x1]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x1]
	add	r1, r1, r7
	mov	r2, #0x2
	bl	LoadPalette
	b	.L976
.L987:
	.align	2, 0
.L986:
	.word	gUnknown_08615AC9
	.word	gUnknown_08615AB8
.L980:
	ldr	r5, .L988
	ldrb	r0, [r5]
	bl	GetPartyMenuPaletteFromBuffer
	ldr	r4, .L988+0x4
	ldrb	r1, [r4]
	add	r1, r1, r7
	mov	r2, #0x2
	bl	LoadPalette
	ldrb	r0, [r5, #0x1]
	bl	GetPartyMenuPaletteFromBuffer
	ldrb	r1, [r4, #0x1]
	add	r1, r1, r7
	mov	r2, #0x2
	bl	LoadPalette
.L976:
	mov	r1, r8
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	mov	r2, r9
	lsl	r1, r2, #0x10
	asr	r1, r1, #0x10
	ldr	r2, [r6]
	ldrb	r2, [r2, #0x1a]
	bl	GetScaledHPFraction
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldrb	r0, [r6, #0x8]
	ldr	r4, .L988+0x4
	ldrb	r1, [r4, #0x1]
	ldr	r3, [r6]
	ldrb	r2, [r3, #0x18]
	ldrb	r3, [r3, #0x19]
	str	r5, [sp]
	mov	r7, #0x1
	str	r7, [sp, #0x4]
	bl	FillWindowPixelRect
	ldrb	r0, [r6, #0x8]
	ldrb	r1, [r4]
	ldr	r3, [r6]
	ldrb	r2, [r3, #0x18]
	ldrb	r3, [r3, #0x19]
	add	r3, r3, #0x1
	str	r5, [sp]
	mov	r4, #0x2
	str	r4, [sp, #0x4]
	bl	FillWindowPixelRect
	ldr	r1, [r6]
	ldrb	r0, [r1, #0x1a]
	cmp	r5, r0
	beq	.L982	@cond_branch
	ldrb	r0, [r6, #0x8]
	ldrb	r2, [r1, #0x18]
	add	r2, r2, r5
	ldrb	r3, [r1, #0x19]
	ldrb	r1, [r1, #0x1a]
	sub	r1, r1, r5
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	str	r1, [sp]
	str	r7, [sp, #0x4]
	mov	r1, #0xd
	bl	FillWindowPixelRect
	ldrb	r0, [r6, #0x8]
	ldr	r1, [r6]
	ldrb	r2, [r1, #0x18]
	add	r2, r2, r5
	ldrb	r3, [r1, #0x19]
	add	r3, r3, #0x1
	ldrb	r1, [r1, #0x1a]
	sub	r1, r1, r5
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	str	r1, [sp]
	str	r4, [sp, #0x4]
	mov	r1, #0x2
	bl	FillWindowPixelRect
.L982:
	ldrb	r0, [r6, #0x8]
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L989:
	.align	2, 0
.L988:
	.word	gUnknown_08615ACB
	.word	gUnknown_08615AB8
.Lfe101:
	.size	 DisplayPartyPokemonHPBar,.Lfe101-DisplayPartyPokemonHPBar
	.align	2, 0
	.type	 DisplayPartyPokemonOtherText,function
	.thumb_func
DisplayPartyPokemonOtherText:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	add	r6, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	cmp	r7, #0
	beq	.L991	@cond_branch
	ldr	r5, [r6]
	ldrb	r1, [r5, #0x1c]
	mov	r4, #0x7
	add	r0, r1, #0
	and	r0, r0, r4
	ldrb	r2, [r5, #0x1e]
	add	r0, r0, r2
	add	r3, r0, #0x7
	asr	r3, r3, #0x3
	ldrb	r2, [r5, #0x1d]
	add	r0, r2, #0
	and	r0, r0, r4
	ldrb	r4, [r5, #0x1f]
	add	r0, r0, r4
	add	r4, r0, #0x7
	ldrb	r0, [r6, #0x8]
	lsr	r1, r1, #0x3
	lsr	r2, r2, #0x3
	lsr	r4, r4, #0x3
	str	r4, [sp]
	mov	r4, #0x1
	str	r4, [sp, #0x4]
	ldr	r4, [r5]
	bl	_call_via_r4
.L991:
	cmp	r7, #0x2
	beq	.L994	@cond_branch
	ldrb	r0, [r6, #0x8]
	ldr	r1, [r6]
	ldrb	r2, [r1, #0x1c]
	ldrb	r3, [r1, #0x1d]
	ldr	r1, .L995
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	ldr	r4, .L995+0x4
	mov	r5, r8
	lsl	r1, r5, #0x2
	add	r1, r1, r4
	ldr	r1, [r1]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	bl	AddTextPrinterParameterized3
.L994:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L996:
	.align	2, 0
.L995:
	.word	sFontColorTable
	.word	sSelectionStringTable
.Lfe102:
	.size	 DisplayPartyPokemonOtherText,.Lfe102-DisplayPartyPokemonOtherText
	.align	2, 0
	.type	 sub_81B302C,function
	.thumb_func
sub_81B302C:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0xff
	beq	.L998	@cond_branch
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	RemoveWindow
	mov	r0, #0xff
	strb	r0, [r4]
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
.L998:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe103:
	.size	 sub_81B302C,.Lfe103-sub_81B302C
	.align	2, 0
	.globl	display_pokemon_menu_message
	.type	 display_pokemon_menu_message,function
	.thumb_func
display_pokemon_menu_message:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r6, r0, #0
	ldr	r0, .L1016
	ldr	r4, [r0]
	add	r5, r4, #0
	add	r5, r5, #0xd
	ldrb	r0, [r4, #0xd]
	cmp	r0, #0xff
	beq	.L1000	@cond_branch
	add	r0, r5, #0
	bl	sub_81B302C
.L1000:
	cmp	r6, #0x7f
	beq	.L1001	@cond_branch
	add	r0, r6, #0
	sub	r0, r0, #0x15
	cmp	r0, #0x5
	bhi	.L1009	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L1016+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1017:
	.align	2, 0
.L1016:
	.word	gUnknown_0203CEC4
	.word	.L1010
	.align	2, 0
	.align	2, 0
.L1010:
	.word	.L1003
	.word	.L1007
	.word	.L1007
	.word	.L1004
	.word	.L1005
	.word	.L1008
.L1003:
	ldr	r0, .L1018
	b	.L1015
.L1019:
	.align	2, 0
.L1018:
	.word	gUnknown_08615928
.L1004:
	ldr	r0, .L1020
	b	.L1015
.L1021:
	.align	2, 0
.L1020:
	.word	gUnknown_08615930
.L1005:
	ldr	r0, .L1022
	b	.L1015
.L1023:
	.align	2, 0
.L1022:
	.word	gUnknown_08615938
.L1007:
	ldr	r0, .L1024
	b	.L1015
.L1025:
	.align	2, 0
.L1024:
	.word	gUnknown_08615940
.L1008:
	ldr	r0, .L1026
.L1015:
	bl	AddWindow
	strb	r0, [r5]
	b	.L1002
.L1027:
	.align	2, 0
.L1026:
	.word	gUnknown_08615948
.L1009:
	ldr	r0, .L1028
	bl	AddWindow
	strb	r0, [r4, #0xd]
.L1002:
	cmp	r6, #0
	bne	.L1011	@cond_branch
	ldr	r0, .L1028+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L1012	@cond_branch
	mov	r6, #0x2
	b	.L1011
.L1029:
	.align	2, 0
.L1028:
	.word	gUnknown_08615920
	.word	gUnknown_0203CEC4
.L1012:
	bl	sub_81B314C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1011	@cond_branch
	mov	r6, #0x1
.L1011:
	ldrb	r0, [r5]
	mov	r1, #0x0
	mov	r2, #0x4f
	mov	r3, #0xd
	bl	DrawStdFrameWithCustomTileAndPalette
	ldr	r4, .L1030
	ldr	r1, .L1030+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r5]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
.L1001:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1031:
	.align	2, 0
.L1030:
	.word	gStringVar4
	.word	sActionStringTable
.Lfe104:
	.size	 display_pokemon_menu_message,.Lfe104-display_pokemon_menu_message
	.align	2, 0
	.type	 sub_81B314C,function
	.thumb_func
sub_81B314C:
	push	{r4, r5, r6, r7, lr}
	ldr	r7, .L1045
	mov	r6, #0x0
	ldr	r0, .L1045+0x4
	ldrb	r0, [r0, #0xb]
	cmp	r0, #0x1
	bne	.L1033	@cond_branch
.L1044:
	mov	r0, #0x1
	b	.L1042
.L1046:
	.align	2, 0
.L1045:
	.word	gPlayerParty
	.word	gUnknown_0203CEC8
.L1033:
	mov	r5, #0x0
.L1037:
	mov	r0, #0x64
	mul	r0, r0, r5
	add	r4, r7, r0
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L1038	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	bne	.L1039	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	beq	.L1038	@cond_branch
.L1039:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L1038:
	cmp	r6, #0x1
	bhi	.L1044	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L1037	@cond_branch
	mov	r0, #0x0
.L1042:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe105:
	.size	 sub_81B314C,.Lfe105-sub_81B314C
	.align	2, 0
	.type	 sub_81B31B0,function
	.thumb_func
sub_81B31B0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x1c
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	beq	.L1050	@cond_branch
	cmp	r4, #0x1
	bgt	.L1054	@cond_branch
	cmp	r4, #0
	beq	.L1049	@cond_branch
	b	.L1052
.L1054:
	cmp	r4, #0x2
	beq	.L1051	@cond_branch
	b	.L1052
.L1049:
	ldr	r0, .L1067
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x17]
	lsl	r0, r0, #0x1
	mov	r3, #0x13
	sub	r3, r3, r0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0xa
	str	r0, [sp]
	ldrb	r0, [r1, #0x17]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	mov	r0, #0xe
	str	r0, [sp, #0x8]
	ldr	r0, .L1067+0x4
	str	r0, [sp, #0xc]
	add	r0, sp, #0x14
	mov	r1, #0x2
	mov	r2, #0x13
	bl	SetWindowTemplateFields
	b	.L1048
.L1068:
	.align	2, 0
.L1067:
	.word	gUnknown_0203CEC4
	.word	0x2e9
.L1050:
	ldr	r0, .L1069
	b	.L1064
.L1070:
	.align	2, 0
.L1069:
	.word	gUnknown_08615950
.L1051:
	ldr	r0, .L1071
	b	.L1064
.L1072:
	.align	2, 0
.L1071:
	.word	gUnknown_08615958
.L1052:
	ldr	r0, .L1073
.L1064:
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x14]
	str	r1, [sp, #0x18]
.L1048:
	add	r0, sp, #0x14
	bl	AddWindow
	ldr	r6, .L1073+0x4
	ldr	r1, [r6]
	strb	r0, [r1, #0xc]
	ldr	r0, [r6]
	ldrb	r0, [r0, #0xc]
	mov	r1, #0x0
	mov	r2, #0x4f
	mov	r3, #0xd
	bl	DrawStdFrameWithCustomTileAndPalette
	cmp	r4, #0x3
	bne	.L1055	@cond_branch
	ldr	r0, [r6]
	b	.L1066
.L1074:
	.align	2, 0
.L1073:
	.word	gUnknown_08615960
	.word	gUnknown_0203CEC4
.L1055:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	GetMenuCursorDimensionByFont
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	mov	r0, #0x1
	mov	r1, #0x2
	bl	GetFontAttribute
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r5, #0x0
	ldr	r0, [r6]
	ldrb	r0, [r0, #0x17]
	cmp	r5, r0
	bcs	.L1057	@cond_branch
	add	r7, r6, #0
	mov	r6, #0x0
.L1059:
	ldr	r1, [r7]
	add	r0, r1, #0
	add	r0, r0, #0xf
	add	r4, r0, r5
	ldrb	r0, [r4]
	mov	r2, #0x3
	cmp	r0, #0x12
	bls	.L1060	@cond_branch
	mov	r2, #0x4
.L1060:
	ldrb	r0, [r1, #0xc]
	lsl	r3, r5, #0x4
	add	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r1, r8
	str	r1, [sp]
	str	r6, [sp, #0x4]
	lsl	r1, r2, #0x1
	add	r1, r1, r2
	ldr	r2, .L1075
	add	r1, r1, r2
	str	r1, [sp, #0x8]
	str	r6, [sp, #0xc]
	ldr	r2, .L1075+0x4
	ldrb	r1, [r4]
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r1, [r1]
	str	r1, [sp, #0x10]
	mov	r1, #0x1
	mov	r2, r9
	bl	AddTextPrinterParameterized4
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, [r7]
	ldrb	r0, [r0, #0x17]
	cmp	r5, r0
	bcc	.L1059	@cond_branch
.L1057:
	ldr	r4, .L1075+0x8
	ldr	r1, [r4]
	ldrb	r0, [r1, #0xc]
	ldrb	r1, [r1, #0x17]
	mov	r2, #0x0
	mov	r3, #0x1
	bl	InitMenuInUpperLeftCorner
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r0, [r4]
.L1066:
	ldrb	r0, [r0, #0xc]
	add	sp, sp, #0x1c
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1076:
	.align	2, 0
.L1075:
	.word	sFontColorTable
	.word	sCursorOptions
	.word	gUnknown_0203CEC4
.Lfe106:
	.size	 sub_81B31B0,.Lfe106-sub_81B31B0
	.align	2, 0
	.type	 sub_81B3300,function
	.thumb_func
sub_81B3300:
	push	{r4, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	mov	r0, #0x6
	mov	r1, #0x0
	mov	r2, #0x4f
	mov	r3, #0xd
	bl	DrawStdFrameWithCustomTileAndPalette
	ldr	r2, .L1078
	ldrb	r0, [r2]
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2]
	bl	GetPlayerTextSpeedDelay
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x6
	mov	r1, #0x1
	add	r2, r4, #0
	bl	AddTextPrinterParameterized2
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L1079:
	.align	2, 0
.L1078:
	.word	gTextFlags
.Lfe107:
	.size	 sub_81B3300,.Lfe107-sub_81B3300
	.align	2, 0
	.type	 sub_81B334C,function
	.thumb_func
sub_81B334C:
	push	{lr}
	ldr	r0, .L1081
	mov	r1, #0x4f
	mov	r2, #0xd
	mov	r3, #0x0
	bl	CreateYesNoMenu
	pop	{r0}
	bx	r0
.L1082:
	.align	2, 0
.L1081:
	.word	gUnknown_08615968
.Lfe108:
	.size	 sub_81B334C,.Lfe108-sub_81B334C
	.align	2, 0
	.type	 sub_81B3364,function
	.thumb_func
sub_81B3364:
	push	{r4, lr}
	ldr	r0, .L1084
	bl	AddWindow
	ldr	r4, .L1084+0x4
	ldr	r1, [r4]
	strb	r0, [r1, #0xc]
	ldr	r0, [r4]
	ldrb	r0, [r0, #0xc]
	mov	r1, #0x0
	mov	r2, #0x4f
	mov	r3, #0xd
	bl	DrawStdFrameWithCustomTileAndPalette
	ldr	r0, [r4]
	ldrb	r0, [r0, #0xc]
	pop	{r4}
	pop	{r1}
	bx	r1
.L1085:
	.align	2, 0
.L1084:
	.word	gUnknown_08615970
	.word	gUnknown_0203CEC4
.Lfe109:
	.size	 sub_81B3364,.Lfe109-sub_81B3364
	.align	2, 0
	.type	 sub_81B3394,function
	.thumb_func
sub_81B3394:
	push	{r4, lr}
	ldr	r4, .L1087
	ldr	r0, [r4]
	ldrb	r0, [r0, #0xc]
	bl	ClearWindowTilemap
	ldr	r0, [r4]
	add	r0, r0, #0xc
	bl	sub_81B302C
	pop	{r4}
	pop	{r0}
	bx	r0
.L1088:
	.align	2, 0
.L1087:
	.word	gUnknown_0203CEC4
.Lfe110:
	.size	 sub_81B3394,.Lfe110-sub_81B3394
	.align	2, 0
	.type	 sub_81B33B4,function
	.thumb_func
sub_81B33B4:
	push	{r4, lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	cmp	r2, #0
	bne	.L1090	@cond_branch
	bl	CreateActionList
	b	.L1091
.L1090:
	ldr	r4, .L1097
	ldr	r1, [r4]
	ldr	r0, .L1097+0x4
	add	r0, r2, r0
	ldrb	r0, [r0]
	strb	r0, [r1, #0x17]
	mov	r3, #0x0
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x17]
	cmp	r3, r0
	bcs	.L1091	@cond_branch
	ldr	r1, .L1097+0x8
	lsl	r0, r2, #0x2
	add	r2, r0, r1
.L1095:
	ldr	r1, [r4]
	add	r1, r1, #0xf
	add	r1, r1, r3
	ldr	r0, [r2]
	add	r0, r0, r3
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x17]
	cmp	r3, r0
	bcc	.L1095	@cond_branch
.L1091:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1098:
	.align	2, 0
.L1097:
	.word	gUnknown_0203CEC4
	.word	sListSizeTable
	.word	sActionTable
.Lfe111:
	.size	 sub_81B33B4,.Lfe111-sub_81B33B4
	.align	2, 0
	.type	 CreateActionList,function
	.thumb_func
CreateActionList:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	r9, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	sl, r1
	ldr	r2, .L1115
	ldr	r1, [r2]
	mov	r0, #0x0
	strb	r0, [r1, #0x17]
	ldr	r1, [r2]
	add	r0, r1, #0
	add	r0, r0, #0xf
	add	r1, r1, #0x17
	mov	r2, #0x0
	bl	AppendToList
	mov	r7, #0x0
	ldr	r0, .L1115+0x4
	ldrh	r0, [r0]
	str	r0, [sp]
.L1103:
	mov	r4, #0x0
	add	r0, r7, #0x1
	mov	r8, r0
	ldr	r1, [sp]
	cmp	r1, #0xe
	beq	.L1102	@cond_branch
	mov	r0, #0x64
	mov	r6, sl
	mul	r6, r6, r0
	ldr	r5, .L1115+0x4
.L1107:
	mov	r1, r9
	add	r0, r1, r6
	add	r1, r7, #0
	add	r1, r1, #0xd
	bl	GetMonData
	lsl	r1, r4, #0x1
	add	r1, r1, r5
	ldrh	r1, [r1]
	cmp	r0, r1
	bne	.L1106	@cond_branch
	ldr	r0, .L1115
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0xf
	add	r1, r1, #0x17
	add	r2, r4, #0
	add	r2, r2, #0x13
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	bl	AppendToList
	b	.L1102
.L1116:
	.align	2, 0
.L1115:
	.word	gUnknown_0203CEC4
	.word	sFieldMoves
.L1106:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x1
	add	r0, r0, r5
	ldrh	r0, [r0]
	cmp	r0, #0xe
	bne	.L1107	@cond_branch
.L1102:
	mov	r1, r8
	lsl	r0, r1, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0x3
	bls	.L1103	@cond_branch
	bl	InBattlePike
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1111	@cond_branch
	mov	r0, r9
	add	r0, r0, #0x64
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L1112	@cond_branch
	ldr	r0, .L1117
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0xf
	add	r1, r1, #0x17
	mov	r2, #0x1
	bl	AppendToList
.L1112:
	mov	r0, #0x64
	mov	r1, sl
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r9
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1113	@cond_branch
	ldr	r0, .L1117
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0xf
	add	r1, r1, #0x17
	mov	r2, #0x6
	bl	AppendToList
	b	.L1111
.L1118:
	.align	2, 0
.L1117:
	.word	gUnknown_0203CEC4
.L1113:
	ldr	r0, .L1119
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0xf
	add	r1, r1, #0x17
	mov	r2, #0x3
	bl	AppendToList
.L1111:
	ldr	r0, .L1119
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0xf
	add	r1, r1, #0x17
	mov	r2, #0x2
	bl	AppendToList
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1120:
	.align	2, 0
.L1119:
	.word	gUnknown_0203CEC4
.Lfe112:
	.size	 CreateActionList,.Lfe112-CreateActionList
	.align	2, 0
	.type	 sub_81B353C,function
	.thumb_func
sub_81B353C:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r1, .L1143
	ldrb	r0, [r1, #0x8]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r2, r1, #0
	cmp	r0, #0xc
	bhi	.L1141	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L1143+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1144:
	.align	2, 0
.L1143:
	.word	gUnknown_0203CEC8
	.word	.L1142
	.align	2, 0
	.align	2, 0
.L1142:
	.word	.L1123
	.word	.L1127
	.word	.L1141
	.word	.L1141
	.word	.L1128
	.word	.L1141
	.word	.L1134
	.word	.L1141
	.word	.L1137
	.word	.L1138
	.word	.L1139
	.word	.L1141
	.word	.L1140
.L1123:
	bl	InMultiBattleRoom
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1125	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	beq	.L1141	@cond_branch
.L1125:
	mov	r1, #0x1
	b	.L1122
.L1127:
	add	r0, r4, #0
	bl	sub_81B8A2C
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	b	.L1122
.L1128:
	mov	r0, #0x9
	ldrsb	r0, [r2, r0]
	bl	sub_81B856C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1131	@cond_branch
	cmp	r0, #0x1
	beq	.L1132	@cond_branch
	mov	r1, #0x7
	b	.L1122
.L1131:
	mov	r1, #0x4
	b	.L1122
.L1132:
	mov	r1, #0x5
	b	.L1122
.L1134:
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	mov	r1, #0x6
	cmp	r0, #0
	beq	.L1122	@cond_branch
	mov	r1, #0x7
	b	.L1122
.L1137:
	mov	r1, #0xa
	b	.L1122
.L1138:
	mov	r1, #0xb
	b	.L1122
.L1139:
	mov	r1, #0xc
	b	.L1122
.L1140:
	mov	r1, #0xd
	b	.L1122
.L1141:
	mov	r1, #0x0
.L1122:
	add	r0, r1, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe113:
	.size	 sub_81B353C,.Lfe113-sub_81B353C
	.align	2, 0
	.type	 sub_81B3608,function
	.thumb_func
sub_81B3608:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r4, .L1151
	mov	r1, #0x9
	ldrsb	r1, [r4, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r7, .L1151+0x4
	add	r5, r0, r7
	ldr	r1, .L1151+0x8
	add	r0, r5, #0
	bl	GetMonNickname
	ldr	r0, .L1151+0xc
	ldr	r0, [r0]
	add	r0, r0, #0xd
	bl	sub_81B302C
	ldrb	r1, [r4, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0xc
	beq	.L1146	@cond_branch
	ldrb	r4, [r4, #0x9]
	add	r0, r5, #0
	bl	sub_81B353C
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r7, #0
	add	r1, r4, #0
	bl	sub_81B33B4
	mov	r0, #0x0
	bl	sub_81B31B0
	mov	r0, #0x15
	bl	display_pokemon_menu_message
	b	.L1147
.L1152:
	.align	2, 0
.L1151:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gStringVar1
	.word	gUnknown_0203CEC4
.L1146:
	add	r0, r5, #0
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0
	bne	.L1148	@cond_branch
	ldr	r4, .L1153
	ldr	r1, .L1153+0x4
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r1, .L1153+0x8
	mov	r2, r8
	lsl	r0, r2, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1153+0xc
	str	r1, [r0]
	mov	r0, #0x0
	b	.L1150
.L1154:
	.align	2, 0
.L1153:
	.word	gStringVar4
	.word	gText_PkmnNotHolding
	.word	gTasks
	.word	sub_81B469C
.L1148:
	ldrb	r4, [r4, #0x9]
	add	r0, r5, #0
	bl	sub_81B353C
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r7, #0
	add	r1, r4, #0
	bl	sub_81B33B4
	mov	r0, #0x1
	bl	sub_81B31B0
	ldr	r1, .L1155
	add	r0, r6, #0
	bl	CopyItemName
	mov	r0, #0x1a
	bl	display_pokemon_menu_message
.L1147:
	mov	r0, #0x1
.L1150:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1156:
	.align	2, 0
.L1155:
	.word	gStringVar2
.Lfe114:
	.size	 sub_81B3608,.Lfe114-sub_81B3608
	.align	2, 0
	.type	 sub_81B36FC,function
	.thumb_func
sub_81B36FC:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	sub_81B3608
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1158	@cond_branch
	ldr	r1, .L1159
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0xff
	strh	r1, [r0, #0x8]
	ldr	r1, .L1159+0x4
	str	r1, [r0]
.L1158:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1160:
	.align	2, 0
.L1159:
	.word	gTasks
	.word	HandleMenuInput
.Lfe115:
	.size	 sub_81B36FC,.Lfe115-sub_81B36FC
	.align	2, 0
	.type	 HandleMenuInput,function
	.thumb_func
HandleMenuInput:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L1171
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1162	@cond_branch
	bl	sub_81221EC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1162	@cond_branch
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L1171+0x4
	add	r5, r0, r1
	ldr	r0, .L1171+0x8
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x3
	bhi	.L1163	@cond_branch
	bl	Menu_ProcessInputNoWrapAround_other
	b	.L1170
.L1172:
	.align	2, 0
.L1171:
	.word	gPaletteFade
	.word	gTasks+0x8
	.word	gUnknown_0203CEC4
.L1163:
	bl	ProcessMenuInput_other
.L1170:
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	Menu_GetCursorPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5]
	lsl	r0, r4, #0x18
	asr	r5, r0, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r5, r0
	beq	.L1162	@cond_branch
	add	r0, r0, #0x1
	cmp	r5, r0
	bne	.L1168	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L1173
	ldr	r0, [r4]
	add	r0, r0, #0xe
	bl	sub_81B302C
	ldr	r2, .L1173+0x4
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x17]
	add	r0, r0, r1
	ldrb	r0, [r0, #0xe]
	lsl	r0, r0, #0x3
	add	r2, r2, #0x4
	add	r0, r0, r2
	ldr	r1, [r0]
	add	r0, r6, #0
	bl	_call_via_r1
	b	.L1162
.L1174:
	.align	2, 0
.L1173:
	.word	gUnknown_0203CEC4
	.word	sCursorOptions
.L1168:
	ldr	r4, .L1175
	ldr	r0, [r4]
	add	r0, r0, #0xe
	bl	sub_81B302C
	ldr	r1, .L1175+0x4
	ldr	r0, [r4]
	add	r0, r0, #0xf
	add	r0, r0, r5
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r6, #0
	bl	_call_via_r1
.L1162:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1176:
	.align	2, 0
.L1175:
	.word	gUnknown_0203CEC4
	.word	sCursorOptions
.Lfe116:
	.size	 HandleMenuInput,.Lfe116-HandleMenuInput
	.align	2, 0
	.type	 CursorCb_Summary,function
	.thumb_func
CursorCb_Summary:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L1178
	ldr	r1, [r0]
	ldr	r0, .L1178+0x4
	str	r0, [r1, #0x4]
	add	r0, r4, #0
	bl	sub_81B12C0
	pop	{r4}
	pop	{r0}
	bx	r0
.L1179:
	.align	2, 0
.L1178:
	.word	gUnknown_0203CEC4
	.word	sub_81B3828
.Lfe117:
	.size	 CursorCb_Summary,.Lfe117-CursorCb_Summary
	.align	2, 0
	.type	 sub_81B3828,function
	.thumb_func
sub_81B3828:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r4, .L1183
	ldrb	r1, [r4, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1181	@cond_branch
	bl	pokemon_change_order
	ldr	r1, .L1183+0x4
	ldrb	r2, [r4, #0x9]
	ldr	r0, .L1183+0x8
	ldrb	r3, [r0]
	sub	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, .L1183+0xc
	str	r0, [sp]
	mov	r0, #0x1
	bl	ShowPokemonSummaryScreen
	b	.L1182
.L1184:
	.align	2, 0
.L1183:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gPlayerPartyCount
	.word	sub_81B3894
.L1181:
	ldr	r1, .L1185
	ldrb	r2, [r4, #0x9]
	ldr	r0, .L1185+0x4
	ldrb	r3, [r0]
	sub	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, .L1185+0x8
	str	r0, [sp]
	mov	r0, #0x0
	bl	ShowPokemonSummaryScreen
.L1182:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L1186:
	.align	2, 0
.L1185:
	.word	gPlayerParty
	.word	gPlayerPartyCount
	.word	sub_81B3894
.Lfe118:
	.size	 sub_81B3828,.Lfe118-sub_81B3828
	.align	2, 0
	.type	 sub_81B3894,function
	.thumb_func
sub_81B3894:
	push	{lr}
	add	sp, sp, #-0xc
	ldr	r2, .L1188
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r3, .L1188+0x4
	ldr	r0, .L1188+0x8
	ldrb	r0, [r0]
	strb	r0, [r3, #0x9]
	ldrb	r0, [r3, #0x8]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	ldrb	r2, [r3, #0xb]
	mov	r1, #0x15
	str	r1, [sp]
	ldr	r1, .L1188+0xc
	str	r1, [sp, #0x4]
	ldr	r1, [r3]
	str	r1, [sp, #0x8]
	mov	r1, #0xff
	mov	r3, #0x1
	bl	InitPartyMenu
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L1189:
	.align	2, 0
.L1188:
	.word	gPaletteFade
	.word	gUnknown_0203CEC8
	.word	gLastViewedMonIndex
	.word	sub_81B36FC
.Lfe119:
	.size	 sub_81B3894,.Lfe119-sub_81B3894
	.align	2, 0
	.type	 CursorCb_Switch,function
	.thumb_func
CursorCb_Switch:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r5, .L1191
	mov	r0, #0x8
	strb	r0, [r5, #0xb]
	ldr	r4, .L1191+0x4
	ldr	r0, [r4]
	add	r0, r0, #0xd
	bl	sub_81B302C
	ldr	r0, [r4]
	add	r0, r0, #0xc
	bl	sub_81B302C
	mov	r0, #0x3
	bl	display_pokemon_menu_message
	ldrb	r0, [r5, #0x9]
	mov	r1, #0x1
	bl	sub_81B0FCC
	ldrb	r0, [r5, #0x9]
	strb	r0, [r5, #0xa]
	ldr	r1, .L1191+0x8
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1191+0xc
	str	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1192:
	.align	2, 0
.L1191:
	.word	gUnknown_0203CEC8
	.word	gUnknown_0203CEC4
	.word	gTasks
	.word	sub_81B1370
.Lfe120:
	.size	 CursorCb_Switch,.Lfe120-CursorCb_Switch
	.align	2, 0
	.type	 sub_81B3938,function
	.thumb_func
sub_81B3938:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L1202
	add	r6, r0, r1
	ldr	r3, .L1202+0x4
	mov	r1, #0xa
	ldrsb	r1, [r3, r1]
	mov	r0, #0x9
	ldrsb	r0, [r3, r0]
	cmp	r1, r0
	bne	.L1194	@cond_branch
	add	r0, r7, #0
	bl	sub_81B407C
	b	.L1195
.L1203:
	.align	2, 0
.L1202:
	.word	gTasks+0x8
	.word	gUnknown_0203CEC8
.L1194:
	add	r2, sp, #0x8
	mov	r0, #0x9
	ldrsb	r0, [r3, r0]
	ldr	r1, .L1204
	ldr	r1, [r1]
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	mov	r4, #0x0
	strb	r0, [r2]
	add	r0, r2, #0
	ldrb	r0, [r0]
	mov	r1, #0x1
	bl	GetWindowAttribute
	strh	r0, [r6]
	add	r0, sp, #0x8
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	GetWindowAttribute
	strh	r0, [r6, #0x2]
	add	r0, sp, #0x8
	ldrb	r0, [r0]
	mov	r1, #0x3
	bl	GetWindowAttribute
	strh	r0, [r6, #0x4]
	add	r0, sp, #0x8
	ldrb	r0, [r0]
	mov	r1, #0x4
	bl	GetWindowAttribute
	strh	r0, [r6, #0x6]
	strh	r4, [r6, #0x10]
	mov	r1, #0x4
	ldrsh	r0, [r6, r1]
	cmp	r0, #0xa
	bne	.L1196	@cond_branch
	mov	r2, #0x1
	neg	r2, r2
	add	r0, r2, #0
	b	.L1200
.L1205:
	.align	2, 0
.L1204:
	.word	gUnknown_0203CEDC
.L1196:
	mov	r0, #0x1
.L1200:
	strh	r0, [r6, #0x14]
	add	r2, sp, #0x8
	ldr	r0, .L1206
	ldrb	r0, [r0, #0xa]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	ldr	r1, .L1206+0x4
	ldr	r1, [r1]
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	mov	r4, #0x0
	strb	r0, [r2, #0x1]
	add	r0, r2, #0
	ldrb	r0, [r0, #0x1]
	mov	r1, #0x1
	bl	GetWindowAttribute
	strh	r0, [r6, #0x8]
	add	r0, sp, #0x8
	ldrb	r0, [r0, #0x1]
	mov	r1, #0x2
	bl	GetWindowAttribute
	strh	r0, [r6, #0xa]
	add	r0, sp, #0x8
	ldrb	r0, [r0, #0x1]
	mov	r1, #0x3
	bl	GetWindowAttribute
	strh	r0, [r6, #0xc]
	add	r0, sp, #0x8
	ldrb	r0, [r0, #0x1]
	mov	r1, #0x4
	bl	GetWindowAttribute
	strh	r0, [r6, #0xe]
	strh	r4, [r6, #0x12]
	mov	r1, #0xc
	ldrsh	r0, [r6, r1]
	cmp	r0, #0xa
	bne	.L1198	@cond_branch
	mov	r2, #0x1
	neg	r2, r2
	add	r0, r2, #0
	b	.L1201
.L1207:
	.align	2, 0
.L1206:
	.word	gUnknown_0203CEC8
	.word	gUnknown_0203CEDC
.L1198:
	mov	r0, #0x1
.L1201:
	strh	r0, [r6, #0x16]
	ldr	r4, .L1208
	mov	r0, #0x4
	ldrsh	r1, [r6, r0]
	mov	r2, #0x6
	ldrsh	r0, [r6, r2]
	lsl	r0, r0, #0x1
	mul	r0, r0, r1
	bl	Alloc
	str	r0, [r4]
	ldr	r5, .L1208+0x4
	mov	r0, #0xc
	ldrsh	r1, [r6, r0]
	mov	r2, #0xe
	ldrsh	r0, [r6, r2]
	lsl	r0, r0, #0x1
	mul	r0, r0, r1
	bl	Alloc
	str	r0, [r5]
	ldr	r1, [r4]
	ldrb	r2, [r6]
	ldrb	r3, [r6, #0x2]
	ldrb	r0, [r6, #0x4]
	str	r0, [sp]
	ldrb	r0, [r6, #0x6]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	bl	sub_8199CBC
	ldr	r1, [r5]
	ldrb	r2, [r6, #0x8]
	ldrb	r3, [r6, #0xa]
	ldrb	r0, [r6, #0xc]
	str	r0, [sp]
	ldrb	r0, [r6, #0xe]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	bl	sub_8199CBC
	add	r0, sp, #0x8
	ldrb	r0, [r0]
	bl	ClearWindowTilemap
	add	r0, sp, #0x8
	ldrb	r0, [r0, #0x1]
	bl	ClearWindowTilemap
	ldr	r4, .L1208+0x8
	mov	r0, #0x9
	strb	r0, [r4, #0xb]
	ldrb	r0, [r4, #0x9]
	mov	r1, #0x1
	bl	sub_81B0FCC
	ldrb	r0, [r4, #0xa]
	mov	r1, #0x1
	bl	sub_81B0FCC
	add	r0, r7, #0
	bl	sub_81B3CC0
	ldr	r1, .L1208+0xc
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1208+0x10
	str	r1, [r0]
.L1195:
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1209:
	.align	2, 0
.L1208:
	.word	gUnknown_0203CEF0
	.word	gUnknown_0203CEF4
	.word	gUnknown_0203CEC8
	.word	gTasks
	.word	sub_81B3D48
.Lfe121:
	.size	 sub_81B3938,.Lfe121-sub_81B3938
	.align	2, 0
	.type	 sub_81B3AD8,function
	.thumb_func
sub_81B3AD8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r2, #0
	mov	ip, r3
	ldr	r7, [sp, #0x18]
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	add	r5, r3, #0
	lsl	r1, r1, #0x10
	lsr	r2, r1, #0x10
	mov	r8, r2
	lsl	r0, r3, #0x10
	asr	r1, r0, #0x10
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	add	r4, r1, r0
	cmp	r4, #0
	blt	.L1218	@cond_branch
	cmp	r1, #0x1f
	ble	.L1212	@cond_branch
.L1218:
	mov	r0, #0x0
	b	.L1217
.L1212:
	cmp	r1, #0
	bge	.L1213	@cond_branch
	neg	r0, r1
	strb	r0, [r6]
	mov	r0, #0x0
	mov	r1, ip
	strb	r0, [r1]
	add	r0, r2, r3
	strb	r0, [r7]
	b	.L1214
.L1213:
	mov	r0, #0x0
	strb	r0, [r6]
	mov	r0, ip
	strb	r5, [r0]
	cmp	r4, #0x1f
	ble	.L1215	@cond_branch
	mov	r0, #0x20
	sub	r0, r0, r5
	strb	r0, [r7]
	b	.L1214
.L1215:
	mov	r1, r8
	strb	r1, [r7]
.L1214:
	mov	r0, #0x1
.L1217:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe122:
	.size	 sub_81B3AD8,.Lfe122-sub_81B3AD8
	.align	2, 0
	.type	 sub_81B3B40,function
	.thumb_func
sub_81B3B40:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x34
	str	r0, [sp, #0x28]
	ldr	r0, [sp, #0x54]
	ldr	r4, [sp, #0x58]
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r9, r2
	lsl	r3, r3, #0x10
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	sl, r0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	str	r4, [sp, #0x30]
	lsl	r1, r1, #0x10
	asr	r7, r1, #0x10
	lsr	r0, r3, #0x10
	str	r0, [sp, #0x2c]
	asr	r3, r3, #0x10
	mov	r8, r3
	mov	r5, sp
	add	r5, r5, #0x25
	mov	r6, sp
	add	r6, r6, #0x26
	str	r6, [sp]
	add	r0, r7, #0
	mov	r1, r8
	add	r2, sp, #0x24
	add	r3, r5, #0
	bl	sub_81B3AD8
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1220	@cond_branch
	ldrb	r2, [r5]
	mov	r1, r9
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	ldrb	r0, [r6]
	str	r0, [sp]
	mov	r1, sl
	lsl	r0, r1, #0x18
	lsr	r4, r0, #0x18
	str	r4, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r3, r9
	bl	FillBgTilemapBufferRect_Palette0
	ldr	r1, [sp, #0x30]
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	add	r0, r7, r0
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	str	r6, [sp]
	mov	r1, r8
	add	r2, sp, #0x24
	add	r3, r5, #0
	bl	sub_81B3AD8
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1220	@cond_branch
	add	r0, sp, #0x24
	ldrb	r2, [r0]
	ldr	r1, [sp, #0x2c]
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp]
	str	r4, [sp, #0x4]
	ldrb	r0, [r5]
	str	r0, [sp, #0x8]
	mov	r0, r9
	str	r0, [sp, #0xc]
	ldrb	r0, [r6]
	str	r0, [sp, #0x10]
	str	r4, [sp, #0x14]
	mov	r0, #0x11
	str	r0, [sp, #0x18]
	mov	r0, #0x0
	str	r0, [sp, #0x1c]
	str	r0, [sp, #0x20]
	ldr	r1, [sp, #0x28]
	mov	r3, #0x0
	bl	CopyRectToBgTilemapBufferRect
.L1220:
	add	sp, sp, #0x34
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe123:
	.size	 sub_81B3B40,.Lfe123-sub_81B3B40
	.align	2, 0
	.type	 sub_81B3C0C,function
	.thumb_func
sub_81B3C0C:
	push	{r4, lr}
	ldr	r4, .L1223
	ldrb	r2, [r0, #0xb]
	lsl	r3, r2, #0x4
	add	r3, r3, r2
	lsl	r3, r3, #0x2
	add	r3, r3, r4
	lsl	r1, r1, #0x10
	asr	r1, r1, #0xd
	ldrh	r2, [r3, #0x24]
	add	r2, r2, r1
	strh	r2, [r3, #0x24]
	ldrb	r3, [r0, #0xa]
	lsl	r2, r3, #0x4
	add	r2, r2, r3
	lsl	r2, r2, #0x2
	add	r2, r2, r4
	ldrh	r3, [r2, #0x24]
	add	r3, r3, r1
	strh	r3, [r2, #0x24]
	ldrb	r3, [r0, #0x9]
	lsl	r2, r3, #0x4
	add	r2, r2, r3
	lsl	r2, r2, #0x2
	add	r2, r2, r4
	ldrh	r3, [r2, #0x24]
	add	r3, r3, r1
	strh	r3, [r2, #0x24]
	ldrb	r2, [r0, #0xc]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r2, [r0, #0x24]
	add	r2, r2, r1
	strh	r2, [r0, #0x24]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1224:
	.align	2, 0
.L1223:
	.word	gSprites
.Lfe124:
	.size	 sub_81B3C0C,.Lfe124-sub_81B3C0C
	.align	2, 0
	.type	 sub_81B3C60,function
	.thumb_func
sub_81B3C60:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L1228
	add	r4, r1, r0
	mov	r1, #0x14
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L1226	@cond_branch
	ldr	r2, .L1228+0x4
	ldr	r0, .L1228+0x8
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	lsl	r1, r1, #0x4
	ldr	r0, [r2]
	add	r0, r0, r1
	mov	r2, #0x14
	ldrsh	r1, [r4, r2]
	bl	sub_81B3C0C
.L1226:
	mov	r1, #0x16
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L1227	@cond_branch
	ldr	r2, .L1228+0x4
	ldr	r0, .L1228+0x8
	mov	r1, #0xa
	ldrsb	r1, [r0, r1]
	lsl	r1, r1, #0x4
	ldr	r0, [r2]
	add	r0, r0, r1
	mov	r2, #0x16
	ldrsh	r1, [r4, r2]
	bl	sub_81B3C0C
.L1227:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1229:
	.align	2, 0
.L1228:
	.word	gTasks+0x8
	.word	gUnknown_0203CEDC
	.word	gUnknown_0203CEC8
.Lfe125:
	.size	 sub_81B3C60,.Lfe125-sub_81B3C60
	.align	2, 0
	.type	 sub_81B3CC0,function
	.thumb_func
sub_81B3CC0:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L1233
	add	r5, r1, r0
	mov	r1, #0x14
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L1231	@cond_branch
	ldr	r0, .L1233+0x4
	ldr	r0, [r0]
	ldrh	r1, [r5, #0x10]
	ldrh	r2, [r5]
	add	r1, r1, r2
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r3, #0x2
	ldrsh	r2, [r5, r3]
	mov	r4, #0x4
	ldrsh	r3, [r5, r4]
	mov	r6, #0x6
	ldrsh	r4, [r5, r6]
	str	r4, [sp]
	mov	r6, #0x14
	ldrsh	r4, [r5, r6]
	str	r4, [sp, #0x4]
	bl	sub_81B3B40
.L1231:
	mov	r1, #0x16
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L1232	@cond_branch
	ldr	r0, .L1233+0x8
	ldr	r0, [r0]
	ldrh	r1, [r5, #0x12]
	ldrh	r2, [r5, #0x8]
	add	r1, r1, r2
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r3, #0xa
	ldrsh	r2, [r5, r3]
	mov	r4, #0xc
	ldrsh	r3, [r5, r4]
	mov	r6, #0xe
	ldrsh	r4, [r5, r6]
	str	r4, [sp]
	mov	r6, #0x16
	ldrsh	r4, [r5, r6]
	str	r4, [sp, #0x4]
	bl	sub_81B3B40
.L1232:
	mov	r0, #0x0
	bl	schedule_bg_copy_tilemap_to_vram
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1234:
	.align	2, 0
.L1233:
	.word	gTasks+0x8
	.word	gUnknown_0203CEF0
	.word	gUnknown_0203CEF4
.Lfe126:
	.size	 sub_81B3CC0,.Lfe126-sub_81B3CC0
	.align	2, 0
	.type	 sub_81B3D48,function
	.thumb_func
sub_81B3D48:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r7, r0, #0x3
	ldr	r0, .L1237
	mov	r8, r0
	add	r6, r7, r0
	add	r0, r4, #0
	bl	sub_81B3CC0
	add	r0, r4, #0
	bl	sub_81B3C60
	ldrh	r1, [r6, #0x14]
	ldrh	r2, [r6, #0x10]
	add	r1, r1, r2
	strh	r1, [r6, #0x10]
	ldrh	r0, [r6, #0x16]
	ldrh	r3, [r6, #0x12]
	add	r0, r0, r3
	strh	r0, [r6, #0x12]
	add	r2, sp, #0x8
	ldrh	r0, [r6]
	add	r0, r0, r1
	strh	r0, [r2]
	add	r1, r2, #0
	ldrh	r0, [r6, #0x12]
	ldrh	r3, [r6, #0x8]
	add	r2, r0, r3
	strh	r2, [r1, #0x2]
	add	r0, r1, #0
	ldrh	r0, [r0]
	cmp	r0, #0x21
	bls	.L1236	@cond_branch
	lsl	r0, r2, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x21
	bls	.L1236	@cond_branch
	mov	r1, #0x14
	ldrsh	r0, [r6, r1]
	neg	r0, r0
	strh	r0, [r6, #0x14]
	mov	r2, #0x16
	ldrsh	r0, [r6, r2]
	neg	r0, r0
	strh	r0, [r6, #0x16]
	bl	swap_pokemon_and_oams
	ldr	r4, .L1237+0x4
	ldrb	r0, [r4, #0x9]
	bl	DisplayPartyPokemonData
	ldrb	r0, [r4, #0xa]
	bl	DisplayPartyPokemonData
	mov	r0, #0x9
	ldrsb	r0, [r4, r0]
	ldr	r5, .L1237+0x8
	ldr	r1, [r5]
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	bl	PutWindowTilemap
	mov	r0, #0xa
	ldrsb	r0, [r4, r0]
	ldr	r1, [r5]
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	bl	PutWindowTilemap
	ldr	r0, .L1237+0xc
	ldr	r1, [r0]
	ldrb	r2, [r6]
	ldrb	r3, [r6, #0x2]
	ldrb	r0, [r6, #0x4]
	str	r0, [sp]
	ldrb	r0, [r6, #0x6]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	bl	sub_8199CBC
	ldr	r0, .L1237+0x10
	ldr	r1, [r0]
	ldrb	r2, [r6, #0x8]
	ldrb	r3, [r6, #0xa]
	ldrb	r0, [r6, #0xc]
	str	r0, [sp]
	ldrb	r0, [r6, #0xe]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	bl	sub_8199CBC
	mov	r0, #0x9
	ldrsb	r0, [r4, r0]
	ldr	r1, [r5]
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	bl	ClearWindowTilemap
	mov	r0, #0xa
	ldrsb	r0, [r4, r0]
	ldr	r1, [r5]
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	bl	ClearWindowTilemap
	mov	r0, r8
	sub	r0, r0, #0x8
	add	r0, r7, r0
	ldr	r1, .L1237+0x14
	str	r1, [r0]
.L1236:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1238:
	.align	2, 0
.L1237:
	.word	gTasks+0x8
	.word	gUnknown_0203CEC8
	.word	gUnknown_0203CEDC
	.word	gUnknown_0203CEF0
	.word	gUnknown_0203CEF4
	.word	sub_81B3E60
.Lfe127:
	.size	 sub_81B3D48,.Lfe127-sub_81B3D48
	.align	2, 0
	.type	 sub_81B3E60,function
	.thumb_func
sub_81B3E60:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L1244
	add	r4, r0, r1
	add	r0, r6, #0
	bl	sub_81B3CC0
	add	r0, r6, #0
	bl	sub_81B3C60
	mov	r1, #0x14
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L1240	@cond_branch
	mov	r2, #0x16
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bne	.L1240	@cond_branch
	ldr	r5, .L1244+0x4
	mov	r0, #0x9
	ldrsb	r0, [r5, r0]
	ldr	r4, .L1244+0x8
	ldr	r1, [r4]
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	bl	PutWindowTilemap
	mov	r0, #0xa
	ldrsb	r0, [r5, r0]
	ldr	r1, [r4]
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r0, .L1244+0xc
	ldr	r0, [r0]
	bl	Free
	ldr	r0, .L1244+0x10
	ldr	r0, [r0]
	bl	Free
	add	r0, r6, #0
	bl	sub_81B407C
	b	.L1241
.L1245:
	.align	2, 0
.L1244:
	.word	gTasks+0x8
	.word	gUnknown_0203CEC8
	.word	gUnknown_0203CEDC
	.word	gUnknown_0203CEF0
	.word	gUnknown_0203CEF4
.L1240:
	ldrh	r1, [r4, #0x14]
	ldrh	r0, [r4, #0x10]
	add	r1, r1, r0
	strh	r1, [r4, #0x10]
	ldrh	r0, [r4, #0x16]
	ldrh	r2, [r4, #0x12]
	add	r0, r0, r2
	strh	r0, [r4, #0x12]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0
	bne	.L1242	@cond_branch
	strh	r1, [r4, #0x14]
.L1242:
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L1241	@cond_branch
	strh	r0, [r4, #0x16]
.L1241:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe128:
	.size	 sub_81B3E60,.Lfe128-sub_81B3E60
	.align	2, 0
	.type	 oamt_swap_pos,function
	.thumb_func
oamt_swap_pos:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	ldrb	r3, [r0]
	ldrb	r2, [r1]
	strb	r2, [r0]
	strb	r3, [r1]
	ldr	r5, .L1247
	ldrb	r2, [r0]
	lsl	r3, r2, #0x4
	add	r3, r3, r2
	lsl	r3, r3, #0x2
	add	r3, r3, r5
	ldrh	r6, [r3, #0x20]
	ldrh	r2, [r3, #0x22]
	mov	r8, r2
	ldrh	r2, [r3, #0x24]
	mov	r9, r2
	ldrh	r2, [r3, #0x26]
	mov	sl, r2
	ldrb	r4, [r1]
	lsl	r2, r4, #0x4
	add	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldrh	r2, [r2, #0x20]
	strh	r2, [r3, #0x20]
	ldrb	r2, [r0]
	lsl	r3, r2, #0x4
	add	r3, r3, r2
	lsl	r3, r3, #0x2
	add	r3, r3, r5
	ldrb	r4, [r1]
	lsl	r2, r4, #0x4
	add	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldrh	r2, [r2, #0x22]
	strh	r2, [r3, #0x22]
	ldrb	r2, [r0]
	lsl	r3, r2, #0x4
	add	r3, r3, r2
	lsl	r3, r3, #0x2
	add	r3, r3, r5
	ldrb	r4, [r1]
	lsl	r2, r4, #0x4
	add	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldrh	r2, [r2, #0x24]
	strh	r2, [r3, #0x24]
	ldrb	r0, [r0]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldrb	r3, [r1]
	lsl	r0, r3, #0x4
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrh	r0, [r0, #0x26]
	strh	r0, [r2, #0x26]
	ldrb	r2, [r1]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	strh	r6, [r0, #0x20]
	ldrb	r2, [r1]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r2, r8
	strh	r2, [r0, #0x22]
	ldrb	r2, [r1]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r2, r9
	strh	r2, [r0, #0x24]
	ldrb	r1, [r1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, sl
	strh	r1, [r0, #0x26]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1248:
	.align	2, 0
.L1247:
	.word	gSprites
.Lfe129:
	.size	 oamt_swap_pos,.Lfe129-oamt_swap_pos
	.align	2, 0
	.type	 swap_pokemon_and_oams,function
	.thumb_func
swap_pokemon_and_oams:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	ldr	r1, .L1250
	ldr	r2, .L1250+0x4
	mov	r3, #0x9
	ldrsb	r3, [r2, r3]
	lsl	r0, r3, #0x4
	ldr	r1, [r1]
	add	r0, r1, r0
	str	r0, [sp]
	ldrb	r2, [r2, #0xa]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	lsl	r0, r2, #0x4
	add	r0, r1, r0
	str	r0, [sp, #0x4]
	mov	r1, #0x64
	mov	r4, r3
	mul	r4, r4, r1
	ldr	r0, .L1250+0x8
	add	r4, r4, r0
	mov	r5, r2
	mul	r5, r5, r1
	add	r5, r5, r0
	mov	r0, #0x64
	bl	Alloc
	add	r6, r0, #0
	add	r1, r4, #0
	mov	r2, #0x64
	bl	memcpy
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x64
	bl	memcpy
	add	r0, r5, #0
	add	r1, r6, #0
	mov	r2, #0x64
	bl	memcpy
	add	r0, r6, #0
	bl	Free
	ldr	r0, [sp]
	add	r0, r0, #0xb
	ldr	r1, [sp, #0x4]
	add	r1, r1, #0xb
	bl	oamt_swap_pos
	ldr	r0, [sp]
	add	r0, r0, #0xa
	ldr	r1, [sp, #0x4]
	add	r1, r1, #0xa
	bl	oamt_swap_pos
	ldr	r0, [sp]
	add	r0, r0, #0x9
	ldr	r1, [sp, #0x4]
	add	r1, r1, #0x9
	bl	oamt_swap_pos
	ldr	r0, [sp]
	add	r0, r0, #0xc
	ldr	r1, [sp, #0x4]
	add	r1, r1, #0xc
	bl	oamt_swap_pos
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1251:
	.align	2, 0
.L1250:
	.word	gUnknown_0203CEDC
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
.Lfe130:
	.size	 swap_pokemon_and_oams,.Lfe130-swap_pokemon_and_oams
	.align	2, 0
	.type	 sub_81B407C,function
	.thumb_func
sub_81B407C:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L1253
	ldr	r0, [r0]
	add	r0, r0, #0xd
	bl	sub_81B302C
	ldr	r4, .L1253+0x4
	mov	r0, #0x0
	strb	r0, [r4, #0xb]
	ldrb	r0, [r4, #0x9]
	mov	r1, #0x0
	bl	sub_81B0FCC
	ldrb	r0, [r4, #0xa]
	strb	r0, [r4, #0x9]
	ldrb	r0, [r4, #0xa]
	mov	r1, #0x1
	bl	sub_81B0FCC
	mov	r0, #0x0
	bl	display_pokemon_menu_message
	ldr	r1, .L1253+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1253+0xc
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1254:
	.align	2, 0
.L1253:
	.word	gUnknown_0203CEC4
	.word	gUnknown_0203CEC8
	.word	gTasks
	.word	sub_81B1370
.Lfe131:
	.size	 sub_81B407C,.Lfe131-sub_81B407C
	.align	2, 0
	.type	 CursorCb_Cancel1,function
	.thumb_func
CursorCb_Cancel1:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L1258
	ldr	r0, [r4]
	add	r0, r0, #0xc
	bl	sub_81B302C
	ldr	r0, [r4]
	add	r0, r0, #0xd
	bl	sub_81B302C
	ldr	r0, .L1258+0x4
	ldrb	r1, [r0, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x6
	bne	.L1256	@cond_branch
	mov	r0, #0xf
	bl	display_pokemon_menu_message
	b	.L1257
.L1259:
	.align	2, 0
.L1258:
	.word	gUnknown_0203CEC4
	.word	gUnknown_0203CEC8
.L1256:
	mov	r0, #0x0
	bl	display_pokemon_menu_message
.L1257:
	ldr	r0, .L1260
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L1260+0x4
	str	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1261:
	.align	2, 0
.L1260:
	.word	gTasks
	.word	sub_81B1370
.Lfe132:
	.size	 CursorCb_Cancel1,.Lfe132-CursorCb_Cancel1
	.align	2, 0
	.type	 CursorCb_Item,function
	.thumb_func
CursorCb_Item:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L1263
	ldr	r0, [r4]
	add	r0, r0, #0xc
	bl	sub_81B302C
	ldr	r0, [r4]
	add	r0, r0, #0xd
	bl	sub_81B302C
	ldr	r0, .L1263+0x4
	ldr	r1, .L1263+0x8
	ldrb	r1, [r1, #0x9]
	mov	r2, #0x8
	bl	sub_81B33B4
	mov	r0, #0x1
	bl	sub_81B31B0
	mov	r0, #0x18
	bl	display_pokemon_menu_message
	ldr	r1, .L1263+0xc
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0xff
	strh	r1, [r0, #0x8]
	ldr	r1, .L1263+0x10
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1264:
	.align	2, 0
.L1263:
	.word	gUnknown_0203CEC4
	.word	gPlayerParty
	.word	gUnknown_0203CEC8
	.word	gTasks
	.word	HandleMenuInput
.Lfe133:
	.size	 CursorCb_Item,.Lfe133-CursorCb_Item
	.align	2, 0
	.type	 CursorCb_Give,function
	.thumb_func
CursorCb_Give:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L1266
	ldr	r1, [r0]
	ldr	r0, .L1266+0x4
	str	r0, [r1, #0x4]
	add	r0, r4, #0
	bl	sub_81B12C0
	pop	{r4}
	pop	{r0}
	bx	r0
.L1267:
	.align	2, 0
.L1266:
	.word	gUnknown_0203CEC4
	.word	sub_81B41C4
.Lfe134:
	.size	 CursorCb_Give,.Lfe134-CursorCb_Give
	.align	2, 0
	.type	 sub_81B41C4,function
	.thumb_func
sub_81B41C4:
	push	{lr}
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1269	@cond_branch
	ldr	r2, .L1271
	mov	r0, #0x2
	mov	r1, #0x5
	bl	GoToBagMenu
	b	.L1270
.L1272:
	.align	2, 0
.L1271:
	.word	c2_8123744
.L1269:
	ldr	r1, .L1273
	mov	r0, #0x2
	bl	sub_81C4F98
.L1270:
	pop	{r0}
	bx	r0
.L1274:
	.align	2, 0
.L1273:
	.word	c2_8123744
.Lfe135:
	.size	 sub_81B41C4,.Lfe135-sub_81B41C4
	.align	2, 0
	.type	 c2_8123744,function
	.thumb_func
c2_8123744:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	ldr	r6, .L1283
	ldrh	r0, [r6]
	cmp	r0, #0
	bne	.L1276	@cond_branch
	ldr	r3, .L1283+0x4
	ldrb	r0, [r3, #0x8]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	ldrb	r2, [r3, #0xb]
	mov	r1, #0x7f
	str	r1, [sp]
	ldr	r1, .L1283+0x8
	str	r1, [sp, #0x4]
	ldr	r1, [r3]
	b	.L1282
.L1284:
	.align	2, 0
.L1283:
	.word	gSpecialVar_ItemId
	.word	gUnknown_0203CEC8
	.word	sub_81B36FC
.L1276:
	ldr	r4, .L1285
	ldr	r5, .L1285+0x4
	mov	r0, #0x9
	ldrsb	r0, [r5, r0]
	mov	r1, #0x64
	mov	r8, r1
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r7, .L1285+0x8
	add	r0, r0, r7
	mov	r1, #0xc
	bl	GetMonData
	strh	r0, [r4]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L1278	@cond_branch
	ldrb	r0, [r5, #0x8]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	ldrb	r2, [r5, #0xb]
	mov	r1, #0x7f
	str	r1, [sp]
	ldr	r1, .L1285+0xc
	str	r1, [sp, #0x4]
	ldr	r1, [r5]
.L1282:
	str	r1, [sp, #0x8]
	mov	r1, #0xff
	mov	r3, #0x1
	bl	InitPartyMenu
	b	.L1277
.L1286:
	.align	2, 0
.L1285:
	.word	gUnknown_0203CEFC
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	sub_81B4350
.L1278:
	ldrh	r0, [r6]
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1280	@cond_branch
	ldrh	r0, [r6]
	mov	r1, #0x1
	bl	RemoveBagItem
	mov	r0, #0x9
	ldrsb	r0, [r5, r0]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r7
	ldrh	r1, [r6]
	bl	sub_81B1DB8
	bl	sub_81B452C
	b	.L1277
.L1280:
	ldrb	r0, [r5, #0x8]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	ldrb	r2, [r5, #0xb]
	mov	r1, #0x7f
	str	r1, [sp]
	ldr	r1, .L1287
	str	r1, [sp, #0x4]
	ldr	r1, [r5]
	str	r1, [sp, #0x8]
	mov	r1, #0xff
	mov	r3, #0x1
	bl	InitPartyMenu
.L1277:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1288:
	.align	2, 0
.L1287:
	.word	sub_81B42D0
.Lfe136:
	.size	 c2_8123744,.Lfe136-c2_8123744
	.align	2, 0
	.type	 sub_81B42D0,function
	.thumb_func
sub_81B42D0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L1291
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1290	@cond_branch
	ldr	r0, .L1291+0x4
	ldrh	r4, [r0]
	ldr	r0, .L1291+0x8
	mov	r8, r0
	ldrb	r0, [r0, #0x9]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	mov	r6, #0x64
	mul	r0, r0, r6
	ldr	r5, .L1291+0xc
	add	r0, r0, r5
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	sub_81B1C84
	mov	r1, r8
	mov	r0, #0x9
	ldrsb	r0, [r1, r0]
	mul	r0, r0, r6
	add	r0, r0, r5
	add	r1, r4, #0
	bl	sub_81B1DB8
	add	r0, r4, #0
	mov	r1, #0x1
	bl	RemoveBagItem
	ldr	r1, .L1291+0x10
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1291+0x14
	str	r1, [r0]
.L1290:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1292:
	.align	2, 0
.L1291:
	.word	gPaletteFade
	.word	gSpecialVar_ItemId
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gTasks
	.word	sub_81B469C
.Lfe137:
	.size	 sub_81B42D0,.Lfe137-sub_81B42D0
	.align	2, 0
	.type	 sub_81B4350,function
	.thumb_func
sub_81B4350:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L1295
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1294	@cond_branch
	ldr	r0, .L1295+0x4
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1295+0x8
	add	r0, r0, r1
	ldr	r1, .L1295+0xc
	ldrh	r1, [r1]
	mov	r2, #0x1
	bl	sub_81B1D1C
	ldr	r1, .L1295+0x10
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1295+0x14
	str	r1, [r0]
.L1294:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1296:
	.align	2, 0
.L1295:
	.word	gPaletteFade
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gUnknown_0203CEFC
	.word	gTasks
	.word	sub_81B43A8
.Lfe138:
	.size	 sub_81B4350,.Lfe138-sub_81B4350
	.align	2, 0
	.type	 sub_81B43A8,function
	.thumb_func
sub_81B43A8:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1298	@cond_branch
	bl	sub_81B334C
	ldr	r0, .L1299
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L1299+0x4
	str	r0, [r1]
.L1298:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1300:
	.align	2, 0
.L1299:
	.word	gTasks
	.word	sub_81B43DC
.Lfe139:
	.size	 sub_81B43A8,.Lfe139-sub_81B43A8
	.align	2, 0
	.type	 sub_81B43DC,function
	.thumb_func
sub_81B43DC:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1303	@cond_branch
	cmp	r1, #0
	bgt	.L1312	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1308	@cond_branch
	b	.L1302
.L1312:
	cmp	r1, #0x1
	beq	.L1309	@cond_branch
	b	.L1302
.L1303:
	ldr	r5, .L1313
	ldrh	r0, [r5]
	mov	r1, #0x1
	bl	RemoveBagItem
	ldr	r6, .L1313+0x4
	ldrh	r0, [r6]
	mov	r1, #0x1
	bl	AddBagItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1304	@cond_branch
	ldrh	r0, [r5]
	mov	r1, #0x1
	bl	AddBagItem
	ldrh	r0, [r6]
	bl	pokemon_item_not_removed
	ldr	r0, .L1313+0x8
	mov	r1, #0x0
	bl	sub_81B1B5C
	ldr	r1, .L1313+0xc
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1313+0x10
	str	r1, [r0]
	b	.L1302
.L1314:
	.align	2, 0
.L1313:
	.word	gSpecialVar_ItemId
	.word	gUnknown_0203CEFC
	.word	gStringVar4
	.word	gTasks
	.word	sub_81B1C1C
.L1304:
	ldrh	r0, [r5]
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1306	@cond_branch
	ldr	r0, .L1315
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1315+0x4
	add	r0, r0, r1
	ldrh	r1, [r5]
	bl	sub_81B1DB8
	ldr	r1, .L1315+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1315+0xc
	str	r1, [r0]
	b	.L1302
.L1316:
	.align	2, 0
.L1315:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gTasks
	.word	sub_81B44FC
.L1306:
	ldr	r0, .L1317
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1317+0x4
	add	r0, r0, r1
	ldrh	r1, [r5]
	bl	sub_81B1DB8
	ldrh	r0, [r5]
	ldrh	r1, [r6]
	mov	r2, #0x1
	bl	sub_81B1D68
	ldr	r1, .L1317+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1317+0xc
	str	r1, [r0]
	b	.L1302
.L1318:
	.align	2, 0
.L1317:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gTasks
	.word	sub_81B469C
.L1308:
	mov	r0, #0x5
	bl	PlaySE
.L1309:
	ldr	r0, .L1319
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L1319+0x4
	str	r0, [r1]
.L1302:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1320:
	.align	2, 0
.L1319:
	.word	gTasks
	.word	sub_81B1C1C
.Lfe140:
	.size	 sub_81B43DC,.Lfe140-sub_81B43DC
	.align	2, 0
	.type	 sub_81B44FC,function
	.thumb_func
sub_81B44FC:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1322	@cond_branch
	ldr	r0, .L1323
	ldr	r1, [r0]
	ldr	r0, .L1323+0x4
	str	r0, [r1, #0x4]
	add	r0, r4, #0
	bl	sub_81B12C0
.L1322:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1324:
	.align	2, 0
.L1323:
	.word	gUnknown_0203CEC4
	.word	sub_81B452C
.Lfe141:
	.size	 sub_81B44FC,.Lfe141-sub_81B44FC
	.align	2, 0
	.type	 sub_81B452C,function
	.thumb_func
sub_81B452C:
	push	{lr}
	ldr	r0, .L1326
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1326+0x4
	add	r0, r0, r1
	mov	r1, #0x40
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L1326+0x8
	lsl	r2, r0, #0x3
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L1326+0xc
	add	r2, r2, r0
	ldr	r1, [r1]
	add	r1, r1, r2
	ldr	r2, .L1326+0x10
	mov	r0, #0x4
	mov	r3, #0x3
	bl	DoEasyChatScreen
	pop	{r0}
	bx	r0
.L1327:
	.align	2, 0
.L1326:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gSaveBlock1Ptr
	.word	0x2be0
	.word	sub_81B4578
.Lfe142:
	.size	 sub_81B452C,.Lfe142-sub_81B452C
	.align	2, 0
	.type	 sub_81B4578,function
	.thumb_func
sub_81B4578:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	ldr	r6, .L1331
	mov	r1, #0x9
	ldrsb	r1, [r6, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L1331+0x4
	add	r5, r1, r0
	add	r0, r5, #0
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	ldr	r0, .L1331+0x8
	ldrh	r7, [r0]
	cmp	r7, #0
	bne	.L1329	@cond_branch
	add	r0, r5, #0
	bl	TakeMailFromMon
	ldr	r4, .L1331+0xc
	add	r0, r5, #0
	mov	r1, #0xc
	add	r2, r4, #0
	bl	SetMonData
	ldrh	r0, [r4]
	mov	r1, #0x1
	bl	RemoveBagItem
	mov	r0, r8
	mov	r1, #0x1
	bl	AddBagItem
	ldrb	r0, [r6, #0x8]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	ldrb	r2, [r6, #0xb]
	str	r7, [sp]
	ldr	r1, .L1331+0x10
	str	r1, [sp, #0x4]
	ldr	r1, [r6]
	str	r1, [sp, #0x8]
	mov	r1, #0xff
	mov	r3, #0x1
	bl	InitPartyMenu
	b	.L1330
.L1332:
	.align	2, 0
.L1331:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gSpecialVar_Result
	.word	gUnknown_0203CEFC
	.word	sub_81B36FC
.L1329:
	ldrb	r0, [r6, #0x8]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	ldrb	r2, [r6, #0xb]
	mov	r1, #0x7f
	str	r1, [sp]
	ldr	r1, .L1333
	str	r1, [sp, #0x4]
	ldr	r1, [r6]
	str	r1, [sp, #0x8]
	mov	r1, #0xff
	mov	r3, #0x1
	bl	InitPartyMenu
.L1330:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1334:
	.align	2, 0
.L1333:
	.word	sub_81B4624
.Lfe143:
	.size	 sub_81B4578,.Lfe143-sub_81B4578
	.align	2, 0
	.type	 sub_81B4624,function
	.thumb_func
sub_81B4624:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L1339
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1336	@cond_branch
	ldr	r1, .L1339+0x4
	ldrh	r0, [r1]
	cmp	r0, #0
	bne	.L1337	@cond_branch
	ldr	r0, .L1339+0x8
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1339+0xc
	add	r0, r0, r1
	ldr	r1, .L1339+0x10
	ldrh	r1, [r1]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	sub_81B1C84
	b	.L1338
.L1340:
	.align	2, 0
.L1339:
	.word	gPaletteFade
	.word	gUnknown_0203CEFC
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gSpecialVar_ItemId
.L1337:
	ldr	r0, .L1341
	ldrh	r0, [r0]
	ldrh	r1, [r1]
	mov	r2, #0x0
	bl	sub_81B1D68
.L1338:
	ldr	r0, .L1341+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L1341+0x8
	str	r0, [r1]
.L1336:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1342:
	.align	2, 0
.L1341:
	.word	gSpecialVar_ItemId
	.word	gTasks
	.word	sub_81B469C
.Lfe144:
	.size	 sub_81B4624,.Lfe144-sub_81B4624
	.align	2, 0
	.type	 sub_81B469C,function
	.thumb_func
sub_81B469C:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r4, .L1348
	mov	r1, #0x9
	ldrsb	r1, [r4, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L1348+0x4
	add	r6, r1, r0
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1344	@cond_branch
	ldr	r5, .L1348+0x8
	mov	r0, #0x9
	ldrsb	r0, [r4, r0]
	lsl	r0, r0, #0x4
	ldr	r1, [r5]
	add	r1, r1, r0
	add	r0, r6, #0
	bl	sub_81B5C94
	ldrb	r1, [r4, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0xc
	bne	.L1345	@cond_branch
	add	r0, r6, #0
	mov	r1, #0xc
	bl	GetMonData
	cmp	r0, #0
	beq	.L1346	@cond_branch
	mov	r0, #0x9
	ldrsb	r0, [r4, r0]
	lsl	r0, r0, #0x4
	ldr	r1, [r5]
	add	r1, r1, r0
	mov	r0, #0xb
	mov	r2, #0x1
	bl	DisplayPartyPokemonOtherText
	b	.L1345
.L1349:
	.align	2, 0
.L1348:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gUnknown_0203CEDC
.L1346:
	mov	r0, #0x9
	ldrsb	r0, [r4, r0]
	lsl	r0, r0, #0x4
	ldr	r1, [r5]
	add	r1, r1, r0
	mov	r0, #0xc
	mov	r2, #0x1
	bl	DisplayPartyPokemonOtherText
.L1345:
	add	r0, r7, #0
	bl	sub_81B1C1C
.L1344:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe145:
	.size	 sub_81B469C,.Lfe145-sub_81B469C
	.align	2, 0
	.type	 CursorCb_TakeItem,function
	.thumb_func
CursorCb_TakeItem:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L1359
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L1359+0x4
	add	r5, r1, r0
	add	r0, r5, #0
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L1359+0x8
	ldr	r0, [r4]
	add	r0, r0, #0xc
	bl	sub_81B302C
	ldr	r0, [r4]
	add	r0, r0, #0xd
	bl	sub_81B302C
	add	r0, r5, #0
	bl	TryTakeMonItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1352	@cond_branch
	cmp	r0, #0x1
	beq	.L1353	@cond_branch
	add	r0, r5, #0
	add	r1, r6, #0
	mov	r2, #0x1
	bl	sub_81B1CD0
	b	.L1351
.L1360:
	.align	2, 0
.L1359:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gUnknown_0203CEC4
.L1352:
	ldr	r1, .L1361
	add	r0, r5, #0
	bl	GetMonNickname
	ldr	r4, .L1361+0x4
	ldr	r1, .L1361+0x8
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	b	.L1358
.L1362:
	.align	2, 0
.L1361:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_PkmnNotHolding
.L1353:
	add	r0, r6, #0
	bl	pokemon_item_not_removed
	ldr	r0, .L1363
.L1358:
	mov	r1, #0x1
	bl	sub_81B1B5C
.L1351:
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r0, .L1363+0x4
	lsl	r1, r7, #0x2
	add	r1, r1, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L1363+0x8
	str	r0, [r1]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1364:
	.align	2, 0
.L1363:
	.word	gStringVar4
	.word	gTasks
	.word	sub_81B469C
.Lfe146:
	.size	 CursorCb_TakeItem,.Lfe146-CursorCb_TakeItem
	.align	2, 0
	.type	 CursorCb_Toss,function
	.thumb_func
CursorCb_Toss:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L1369
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L1369+0x4
	add	r7, r1, r0
	add	r0, r7, #0
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L1369+0x8
	ldr	r0, [r4]
	add	r0, r0, #0xc
	bl	sub_81B302C
	ldr	r0, [r4]
	add	r0, r0, #0xd
	bl	sub_81B302C
	cmp	r5, #0
	bne	.L1366	@cond_branch
	ldr	r1, .L1369+0xc
	add	r0, r7, #0
	bl	GetMonNickname
	ldr	r4, .L1369+0x10
	ldr	r1, .L1369+0x14
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	ldr	r1, .L1369+0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1369+0x1c
	b	.L1368
.L1370:
	.align	2, 0
.L1369:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gUnknown_0203CEC4
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_PkmnNotHolding
	.word	gTasks
	.word	sub_81B469C
.L1366:
	ldr	r1, .L1371
	add	r0, r5, #0
	bl	CopyItemName
	ldr	r4, .L1371+0x4
	ldr	r1, .L1371+0x8
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	ldr	r1, .L1371+0xc
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1371+0x10
.L1368:
	str	r1, [r0]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1372:
	.align	2, 0
.L1371:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_ThrowAwayItem
	.word	gTasks
	.word	sub_81B48A8
.Lfe147:
	.size	 CursorCb_Toss,.Lfe147-CursorCb_Toss
	.align	2, 0
	.type	 sub_81B48A8,function
	.thumb_func
sub_81B48A8:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1374	@cond_branch
	bl	sub_81B334C
	ldr	r0, .L1375
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L1375+0x4
	str	r0, [r1]
.L1374:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1376:
	.align	2, 0
.L1375:
	.word	gTasks
	.word	sub_81B48DC
.Lfe148:
	.size	 sub_81B48A8,.Lfe148-sub_81B48A8
	.align	2, 0
	.type	 sub_81B48DC,function
	.thumb_func
sub_81B48DC:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L1385
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L1385+0x4
	add	r4, r1, r0
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1379	@cond_branch
	cmp	r1, #0
	bgt	.L1384	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1380	@cond_branch
	b	.L1378
.L1386:
	.align	2, 0
.L1385:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
.L1384:
	cmp	r1, #0x1
	beq	.L1381	@cond_branch
	b	.L1378
.L1379:
	add	r0, r4, #0
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L1387
	bl	CopyItemName
	ldr	r4, .L1387+0x4
	ldr	r1, .L1387+0x8
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x0
	bl	sub_81B1B5C
	ldr	r1, .L1387+0xc
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1387+0x10
	str	r1, [r0]
	b	.L1378
.L1388:
	.align	2, 0
.L1387:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_ItemThrownAway
	.word	gTasks
	.word	sub_81B4988
.L1380:
	mov	r0, #0x5
	bl	PlaySE
.L1381:
	ldr	r0, .L1389
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L1389+0x4
	str	r0, [r1]
.L1378:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1390:
	.align	2, 0
.L1389:
	.word	gTasks
	.word	sub_81B1C1C
.Lfe149:
	.size	 sub_81B48DC,.Lfe149-sub_81B48DC
	.align	2, 0
	.type	 sub_81B4988,function
	.thumb_func
sub_81B4988:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r6, .L1393
	mov	r1, #0x9
	ldrsb	r1, [r6, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L1393+0x4
	add	r5, r1, r0
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1392	@cond_branch
	mov	r1, #0x0
	mov	r0, sp
	strh	r1, [r0]
	add	r0, r5, #0
	mov	r1, #0xc
	mov	r2, sp
	bl	SetMonData
	ldr	r4, .L1393+0x8
	mov	r0, #0x9
	ldrsb	r0, [r6, r0]
	lsl	r0, r0, #0x4
	ldr	r1, [r4]
	add	r1, r1, r0
	add	r0, r5, #0
	bl	sub_81B5C94
	mov	r0, #0x9
	ldrsb	r0, [r6, r0]
	lsl	r0, r0, #0x4
	ldr	r1, [r4]
	add	r1, r1, r0
	mov	r0, #0xc
	mov	r2, #0x1
	bl	DisplayPartyPokemonOtherText
	ldr	r1, .L1393+0xc
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1393+0x10
	str	r1, [r0]
.L1392:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1394:
	.align	2, 0
.L1393:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gUnknown_0203CEDC
	.word	gTasks
	.word	sub_81B1C1C
.Lfe150:
	.size	 sub_81B4988,.Lfe150-sub_81B4988
	.align	2, 0
	.type	 CursorCb_Mail,function
	.thumb_func
CursorCb_Mail:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L1396
	ldr	r0, [r4]
	add	r0, r0, #0xc
	bl	sub_81B302C
	ldr	r0, [r4]
	add	r0, r0, #0xd
	bl	sub_81B302C
	ldr	r0, .L1396+0x4
	ldr	r1, .L1396+0x8
	ldrb	r1, [r1, #0x9]
	mov	r2, #0x9
	bl	sub_81B33B4
	mov	r0, #0x2
	bl	sub_81B31B0
	mov	r0, #0x19
	bl	display_pokemon_menu_message
	ldr	r1, .L1396+0xc
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0xff
	strh	r1, [r0, #0x8]
	ldr	r1, .L1396+0x10
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1397:
	.align	2, 0
.L1396:
	.word	gUnknown_0203CEC4
	.word	gPlayerParty
	.word	gUnknown_0203CEC8
	.word	gTasks
	.word	HandleMenuInput
.Lfe151:
	.size	 CursorCb_Mail,.Lfe151-CursorCb_Mail
	.align	2, 0
	.type	 CursorCb_Read,function
	.thumb_func
CursorCb_Read:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L1399
	ldr	r1, [r0]
	ldr	r0, .L1399+0x4
	str	r0, [r1, #0x4]
	add	r0, r4, #0
	bl	sub_81B12C0
	pop	{r4}
	pop	{r0}
	bx	r0
.L1400:
	.align	2, 0
.L1399:
	.word	gUnknown_0203CEC4
	.word	sub_81B4A98
.Lfe152:
	.size	 CursorCb_Read,.Lfe152-CursorCb_Read
	.align	2, 0
	.type	 sub_81B4A98,function
	.thumb_func
sub_81B4A98:
	push	{lr}
	ldr	r0, .L1402
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1402+0x4
	add	r0, r0, r1
	mov	r1, #0x40
	bl	GetMonData
	ldr	r2, .L1402+0x8
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1402+0xc
	add	r1, r1, r0
	ldr	r0, [r2]
	add	r0, r0, r1
	ldr	r1, .L1402+0x10
	mov	r2, #0x1
	bl	ReadMail
	pop	{r0}
	bx	r0
.L1403:
	.align	2, 0
.L1402:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gSaveBlock1Ptr
	.word	0x2be0
	.word	sub_81B4AE0
.Lfe153:
	.size	 sub_81B4A98,.Lfe153-sub_81B4A98
	.align	2, 0
	.type	 sub_81B4AE0,function
	.thumb_func
sub_81B4AE0:
	push	{lr}
	add	sp, sp, #-0xc
	ldr	r2, .L1405
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r3, .L1405+0x4
	ldrb	r0, [r3, #0x8]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	ldrb	r2, [r3, #0xb]
	mov	r1, #0x15
	str	r1, [sp]
	ldr	r1, .L1405+0x8
	str	r1, [sp, #0x4]
	ldr	r1, [r3]
	str	r1, [sp, #0x8]
	mov	r1, #0xff
	mov	r3, #0x1
	bl	InitPartyMenu
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L1406:
	.align	2, 0
.L1405:
	.word	gPaletteFade
	.word	gUnknown_0203CEC8
	.word	sub_81B36FC
.Lfe154:
	.size	 sub_81B4AE0,.Lfe154-sub_81B4AE0
	.align	2, 0
	.type	 CursorCb_TakeMail,function
	.thumb_func
CursorCb_TakeMail:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r5, .L1408
	ldr	r0, [r5]
	add	r0, r0, #0xd
	bl	sub_81B302C
	ldr	r0, [r5]
	add	r0, r0, #0xc
	bl	sub_81B302C
	ldr	r0, .L1408+0x4
	mov	r1, #0x1
	bl	sub_81B1B5C
	ldr	r1, .L1408+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1408+0xc
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1409:
	.align	2, 0
.L1408:
	.word	gUnknown_0203CEC4
	.word	gText_SendMailToPC
	.word	gTasks
	.word	sub_81B4B6C
.Lfe155:
	.size	 CursorCb_TakeMail,.Lfe155-CursorCb_TakeMail
	.align	2, 0
	.type	 sub_81B4B6C,function
	.thumb_func
sub_81B4B6C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1411	@cond_branch
	bl	sub_81B334C
	ldr	r0, .L1412
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L1412+0x4
	str	r0, [r1]
.L1411:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1413:
	.align	2, 0
.L1412:
	.word	gTasks
	.word	sub_81B4BA0
.Lfe156:
	.size	 sub_81B4B6C,.Lfe156-sub_81B4B6C
	.align	2, 0
	.type	 sub_81B4BA0,function
	.thumb_func
sub_81B4BA0:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1416	@cond_branch
	cmp	r1, #0
	bgt	.L1423	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1419	@cond_branch
	b	.L1415
.L1423:
	cmp	r1, #0x1
	beq	.L1420	@cond_branch
	b	.L1415
.L1416:
	ldr	r0, .L1425
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1425+0x4
	add	r0, r0, r1
	bl	TakeMailFromMon2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L1417	@cond_branch
	ldr	r0, .L1425+0x8
	mov	r1, #0x0
	bl	sub_81B1B5C
	ldr	r1, .L1425+0xc
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1425+0x10
	b	.L1424
.L1426:
	.align	2, 0
.L1425:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gText_MailSentToPC
	.word	gTasks
	.word	sub_81B469C
.L1417:
	ldr	r0, .L1427
	mov	r1, #0x0
	bl	sub_81B1B5C
	ldr	r1, .L1427+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1427+0x8
	b	.L1424
.L1428:
	.align	2, 0
.L1427:
	.word	gText_PCMailboxFull
	.word	gTasks
	.word	sub_81B1C1C
.L1419:
	mov	r0, #0x5
	bl	PlaySE
.L1420:
	ldr	r0, .L1429
	mov	r1, #0x1
	bl	sub_81B1B5C
	ldr	r1, .L1429+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1429+0x8
.L1424:
	str	r1, [r0]
.L1415:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1430:
	.align	2, 0
.L1429:
	.word	gText_MailMessageWillBeLost
	.word	gTasks
	.word	sub_81B4C60
.Lfe157:
	.size	 sub_81B4BA0,.Lfe157-sub_81B4BA0
	.align	2, 0
	.type	 sub_81B4C60,function
	.thumb_func
sub_81B4C60:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1432	@cond_branch
	bl	sub_81B334C
	ldr	r0, .L1433
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L1433+0x4
	str	r0, [r1]
.L1432:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1434:
	.align	2, 0
.L1433:
	.word	gTasks
	.word	sub_81B4C94
.Lfe158:
	.size	 sub_81B4C60,.Lfe158-sub_81B4C60
	.align	2, 0
	.type	 sub_81B4C94,function
	.thumb_func
sub_81B4C94:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1437	@cond_branch
	cmp	r1, #0
	bgt	.L1444	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1440	@cond_branch
	b	.L1436
.L1444:
	cmp	r1, #0x1
	beq	.L1441	@cond_branch
	b	.L1436
.L1437:
	ldr	r0, .L1445
	mov	r8, r0
	ldrb	r0, [r0, #0x9]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	mov	r7, #0x64
	mul	r0, r0, r7
	ldr	r6, .L1445+0x4
	add	r0, r0, r6
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x1
	bl	AddBagItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1438	@cond_branch
	mov	r1, r8
	mov	r0, #0x9
	ldrsb	r0, [r1, r0]
	mul	r0, r0, r7
	add	r0, r0, r6
	bl	TakeMailFromMon
	ldr	r0, .L1445+0x8
	mov	r1, #0x0
	bl	sub_81B1B5C
	ldr	r1, .L1445+0xc
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1445+0x10
	str	r1, [r0]
	b	.L1436
.L1446:
	.align	2, 0
.L1445:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gText_MailTakenFromPkmn
	.word	gTasks
	.word	sub_81B469C
.L1438:
	add	r0, r4, #0
	bl	pokemon_item_not_removed
	ldr	r0, .L1447
	mov	r1, #0x0
	bl	sub_81B1B5C
	ldr	r1, .L1447+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1447+0x8
	str	r1, [r0]
	b	.L1436
.L1448:
	.align	2, 0
.L1447:
	.word	gStringVar4
	.word	gTasks
	.word	sub_81B1C1C
.L1440:
	mov	r0, #0x5
	bl	PlaySE
.L1441:
	ldr	r0, .L1449
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L1449+0x4
	str	r0, [r1]
.L1436:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1450:
	.align	2, 0
.L1449:
	.word	gTasks
	.word	sub_81B1C1C
.Lfe159:
	.size	 sub_81B4C94,.Lfe159-sub_81B4C94
	.align	2, 0
	.type	 CursorCb_Cancel2,function
	.thumb_func
CursorCb_Cancel2:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r5, .L1454
	mov	r1, #0x9
	ldrsb	r1, [r5, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r6, .L1454+0x4
	add	r7, r0, r6
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L1454+0x8
	ldr	r0, [r4]
	add	r0, r0, #0xc
	bl	sub_81B302C
	ldr	r0, [r4]
	add	r0, r0, #0xd
	bl	sub_81B302C
	ldrb	r4, [r5, #0x9]
	add	r0, r7, #0
	bl	sub_81B353C
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r6, #0
	add	r1, r4, #0
	bl	sub_81B33B4
	ldrb	r1, [r5, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0xc
	beq	.L1452	@cond_branch
	mov	r0, #0x0
	bl	sub_81B31B0
	mov	r0, #0x15
	bl	display_pokemon_menu_message
	b	.L1453
.L1455:
	.align	2, 0
.L1454:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gUnknown_0203CEC4
.L1452:
	mov	r0, #0x1
	bl	sub_81B31B0
	add	r0, r7, #0
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L1456
	bl	CopyItemName
	mov	r0, #0x1a
	bl	display_pokemon_menu_message
.L1453:
	ldr	r1, .L1456+0x4
	mov	r2, r8
	lsl	r0, r2, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0xff
	strh	r1, [r0, #0x8]
	ldr	r1, .L1456+0x8
	str	r1, [r0]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1457:
	.align	2, 0
.L1456:
	.word	gStringVar2
	.word	gTasks
	.word	HandleMenuInput
.Lfe160:
	.size	 CursorCb_Cancel2,.Lfe160-CursorCb_Cancel2
	.align	2, 0
	.type	 CursorCb_SendMon,function
	.thumb_func
CursorCb_SendMon:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r5, .L1461
	ldr	r0, [r5]
	add	r0, r0, #0xc
	bl	sub_81B302C
	bl	sub_81B8A7C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1459	@cond_branch
	add	r0, r4, #0
	bl	sub_81B12C0
	b	.L1460
.L1462:
	.align	2, 0
.L1461:
	.word	gUnknown_0203CEC4
.L1459:
	ldr	r0, [r5]
	add	r0, r0, #0xd
	bl	sub_81B302C
	ldr	r0, .L1463
	mov	r1, #0x1
	bl	sub_81B1B5C
	ldr	r1, .L1463+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1463+0x8
	str	r1, [r0]
.L1460:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1464:
	.align	2, 0
.L1463:
	.word	gStringVar4
	.word	gTasks
	.word	sub_81B1C1C
.Lfe161:
	.size	 CursorCb_SendMon,.Lfe161-CursorCb_SendMon
	.align	2, 0
	.type	 CursorCb_Enter,function
	.thumb_func
CursorCb_Enter:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r4, .L1473
	ldr	r0, [r4]
	add	r0, r0, #0xc
	bl	sub_81B302C
	ldr	r0, [r4]
	add	r0, r0, #0xd
	bl	sub_81B302C
	bl	sub_81B8830
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r5, #0x0
	cmp	r5, r6
	bcs	.L1467	@cond_branch
	ldr	r2, .L1473+0x4
	ldr	r1, .L1473+0x8
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r8, r0
.L1469:
	ldr	r0, .L1473+0xc
	add	r4, r5, r0
	ldrb	r0, [r4]
	cmp	r0, #0
	bne	.L1468	@cond_branch
	mov	r0, #0x5
	str	r2, [sp]
	bl	PlaySE
	ldr	r2, [sp]
	ldrb	r0, [r2, #0x9]
	add	r0, r0, #0x1
	strb	r0, [r4]
	add	r0, r5, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L1473+0x10
	ldrb	r2, [r2, #0x9]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	lsl	r2, r2, #0x4
	ldr	r1, [r1]
	add	r1, r1, r2
	mov	r2, #0x1
	bl	DisplayPartyPokemonOtherText
	sub	r0, r6, #0x1
	cmp	r5, r0
	bne	.L1471	@cond_branch
	bl	sub_81B4F88
.L1471:
	mov	r0, #0x0
	bl	display_pokemon_menu_message
	ldr	r0, .L1473+0x14
	mov	r1, r8
	str	r0, [r1]
	b	.L1465
.L1474:
	.align	2, 0
.L1473:
	.word	gUnknown_0203CEC4
	.word	gUnknown_0203CEC8
	.word	gTasks
	.word	gSelectedOrderFromParty
	.word	gUnknown_0203CEDC
	.word	sub_81B1370
.L1468:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, r6
	bcc	.L1469	@cond_branch
.L1467:
	ldr	r0, .L1475
	add	r1, r6, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L1475+0x4
	ldr	r1, .L1475+0x8
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x20
	bl	PlaySE
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	ldr	r1, .L1475+0xc
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1475+0x10
	str	r1, [r0]
.L1465:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1476:
	.align	2, 0
.L1475:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_NoMoreThanVar1Pkmn
	.word	gTasks
	.word	sub_81B1C1C
.Lfe162:
	.size	 CursorCb_Enter,.Lfe162-CursorCb_Enter
	.align	2, 0
	.type	 sub_81B4F88,function
	.thumb_func
sub_81B4F88:
	push	{r4, lr}
	ldr	r4, .L1478
	ldrb	r0, [r4, #0x9]
	mov	r1, #0x0
	bl	sub_81B0FCC
	mov	r0, #0x6
	strb	r0, [r4, #0x9]
	mov	r1, #0x1
	bl	sub_81B0FCC
	pop	{r4}
	pop	{r0}
	bx	r0
.L1479:
	.align	2, 0
.L1478:
	.word	gUnknown_0203CEC8
.Lfe163:
	.size	 sub_81B4F88,.Lfe163-sub_81B4F88
	.align	2, 0
	.type	 CursorCb_NoEntry,function
	.thumb_func
CursorCb_NoEntry:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L1498
	ldr	r0, [r4]
	add	r0, r0, #0xc
	bl	sub_81B302C
	ldr	r0, [r4]
	add	r0, r0, #0xd
	bl	sub_81B302C
	bl	sub_81B8830
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	cmp	r4, r5
	bcs	.L1482	@cond_branch
	ldr	r6, .L1498+0x4
	sub	r2, r5, #0x1
	add	r7, r6, #0
	ldr	r3, .L1498+0x8
.L1484:
	add	r0, r4, r6
	ldrb	r1, [r0]
	mov	r0, #0x9
	ldrsb	r0, [r3, r0]
	add	r0, r0, #0x1
	cmp	r1, r0
	bne	.L1483	@cond_branch
	add	r0, r4, #0
	add	r4, r2, #0
	cmp	r0, r4
	bge	.L1487	@cond_branch
	add	r3, r7, #0
.L1489:
	add	r2, r0, r3
	add	r1, r0, #0x1
	add	r0, r1, r3
	ldrb	r0, [r0]
	strb	r0, [r2]
	lsl	r1, r1, #0x18
	lsr	r0, r1, #0x18
	cmp	r0, r4
	blt	.L1489	@cond_branch
.L1487:
	add	r1, r0, r6
	mov	r0, #0x0
	strb	r0, [r1]
	b	.L1482
.L1499:
	.align	2, 0
.L1498:
	.word	gUnknown_0203CEC4
	.word	gSelectedOrderFromParty
	.word	gUnknown_0203CEC8
.L1483:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r5
	bcc	.L1484	@cond_branch
.L1482:
	ldr	r6, .L1500
	ldr	r0, .L1500+0x4
	ldrb	r0, [r0, #0x9]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x4
	ldr	r1, [r6]
	add	r1, r1, r0
	mov	r0, #0x1
	mov	r2, #0x1
	bl	DisplayPartyPokemonOtherText
	mov	r4, #0x0
	sub	r5, r5, #0x1
	mov	r0, r8
	lsl	r7, r0, #0x2
	cmp	r4, r5
	bge	.L1493	@cond_branch
.L1495:
	ldr	r0, .L1500+0x8
	add	r1, r4, r0
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L1494	@cond_branch
	add	r0, r4, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r2, [r1]
	lsl	r2, r2, #0x4
	sub	r2, r2, #0x10
	ldr	r1, [r6]
	add	r1, r1, r2
	mov	r2, #0x1
	bl	DisplayPartyPokemonOtherText
.L1494:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r5
	blt	.L1495	@cond_branch
.L1493:
	mov	r0, #0x0
	bl	display_pokemon_menu_message
	ldr	r0, .L1500+0xc
	mov	r2, r8
	add	r1, r7, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L1500+0x10
	str	r0, [r1]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1501:
	.align	2, 0
.L1500:
	.word	gUnknown_0203CEDC
	.word	gUnknown_0203CEC8
	.word	gSelectedOrderFromParty
	.word	gTasks
	.word	sub_81B1370
.Lfe164:
	.size	 CursorCb_NoEntry,.Lfe164-CursorCb_NoEntry
	.align	2, 0
	.type	 CursorCb_Store,function
	.thumb_func
CursorCb_Store:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_81B12C0
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe165:
	.size	 CursorCb_Store,.Lfe165-CursorCb_Store
	.align	2, 0
	.type	 CursorCb_Register,function
	.thumb_func
CursorCb_Register:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L1509
	mov	r9, r0
	ldrb	r0, [r0, #0x9]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	mov	r1, #0x64
	mov	r8, r1
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r4, .L1509+0x4
	add	r0, r0, r4
	mov	r1, #0x41
	bl	GetMonData
	add	r6, r0, #0
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	mov	r1, r9
	mov	r0, #0x9
	ldrsb	r0, [r1, r0]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r4
	mov	r1, #0xb
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r1, r9
	mov	r0, #0x9
	ldrsb	r0, [r1, r0]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r4
	mov	r1, #0x50
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	sub_800F7DC
	ldr	r0, [r0]
	add	r1, r6, #0
	add	r2, r5, #0
	add	r3, r4, #0
	bl	sub_807A8D0
	cmp	r0, #0x1
	beq	.L1505	@cond_branch
	cmp	r0, #0x2
	beq	.L1506	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r7, #0
	bl	sub_81B12C0
	b	.L1503
.L1510:
	.align	2, 0
.L1509:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
.L1505:
	ldr	r0, .L1511
	ldr	r1, .L1511+0x4
	bl	StringExpandPlaceholders
	b	.L1504
.L1512:
	.align	2, 0
.L1511:
	.word	gStringVar4
	.word	gText_PkmnCantBeTradedNow
.L1506:
	ldr	r0, .L1513
	ldr	r1, .L1513+0x4
	bl	StringExpandPlaceholders
.L1504:
	mov	r0, #0x20
	bl	PlaySE
	ldr	r4, .L1513+0x8
	ldr	r0, [r4]
	add	r0, r0, #0xc
	bl	sub_81B302C
	ldr	r0, [r4]
	add	r0, r0, #0xd
	bl	sub_81B302C
	ldr	r4, .L1513
	ldr	r1, .L1513+0xc
	add	r0, r4, #0
	bl	StringAppend
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	ldr	r1, .L1513+0x10
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1513+0x14
	str	r1, [r0]
.L1503:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1514:
	.align	2, 0
.L1513:
	.word	gStringVar4
	.word	gText_EggCantBeTradedNow
	.word	gUnknown_0203CEC4
	.word	gText_PauseUntilPress
	.word	gTasks
	.word	sub_81B1C1C
.Lfe166:
	.size	 CursorCb_Register,.Lfe166-CursorCb_Register
	.align	2, 0
	.type	 CursorCb_Trade1,function
	.thumb_func
CursorCb_Trade1:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L1518
	mov	r8, r0
	ldrb	r0, [r0, #0x9]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	mov	r6, #0x64
	mul	r0, r0, r6
	ldr	r4, .L1518+0x4
	add	r0, r0, r4
	mov	r1, #0x41
	bl	GetMonData
	mov	r9, r0
	mov	r1, r9
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r9, r1
	mov	r1, r8
	mov	r0, #0x9
	ldrsb	r0, [r1, r0]
	mul	r0, r0, r6
	add	r0, r0, r4
	mov	r1, #0xb
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r1, r8
	mov	r0, #0x9
	ldrsb	r0, [r1, r0]
	mul	r0, r0, r6
	add	r0, r0, r4
	mov	r1, #0x50
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	sub_800F7DC
	ldr	r0, [r0]
	ldr	r1, .L1518+0x8
	ldr	r1, [r1]
	ldr	r2, .L1518+0xc
	ldrh	r3, [r2]
	ldr	r2, .L1518+0x10
	ldrb	r2, [r2]
	str	r2, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r2, r9
	bl	sub_807A7E0
	cmp	r0, #0
	beq	.L1516	@cond_branch
	ldr	r5, .L1518+0x14
	ldr	r1, .L1518+0x18
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x20
	bl	PlaySE
	ldr	r4, .L1518+0x1c
	ldr	r0, [r4]
	add	r0, r0, #0xc
	bl	sub_81B302C
	ldr	r0, [r4]
	add	r0, r0, #0xd
	bl	sub_81B302C
	ldr	r1, .L1518+0x20
	add	r0, r5, #0
	bl	StringAppend
	add	r0, r5, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	ldr	r1, .L1518+0x24
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1518+0x28
	str	r1, [r0]
	b	.L1517
.L1519:
	.align	2, 0
.L1518:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gUnknown_02022C38
	.word	gUnknown_02022C3C
	.word	gUnknown_02022C3E
	.word	gStringVar4
	.word	gUnknown_08615E0C
	.word	gUnknown_0203CEC4
	.word	gText_PauseUntilPress
	.word	gTasks
	.word	sub_81B1C1C
.L1516:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r7, #0
	bl	sub_81B12C0
.L1517:
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe167:
	.size	 CursorCb_Trade1,.Lfe167-CursorCb_Trade1
	.align	2, 0
	.type	 CursorCb_Trade2,function
	.thumb_func
CursorCb_Trade2:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L1529
	ldr	r0, [r4]
	add	r0, r0, #0xc
	bl	sub_81B302C
	ldr	r0, [r4]
	add	r0, r0, #0xd
	bl	sub_81B302C
	ldr	r0, .L1529+0x4
	ldr	r1, .L1529+0x8
	ldrb	r1, [r1, #0x9]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	sub_807A918
	cmp	r0, #0x2
	beq	.L1523	@cond_branch
	cmp	r0, #0x2
	bgt	.L1527	@cond_branch
	cmp	r0, #0x1
	beq	.L1522	@cond_branch
	b	.L1525
.L1530:
	.align	2, 0
.L1529:
	.word	gUnknown_0203CEC4
	.word	gPlayerParty
	.word	gUnknown_0203CEC8
.L1527:
	cmp	r0, #0x3
	beq	.L1524	@cond_branch
	b	.L1525
.L1522:
	ldr	r0, .L1531
	ldr	r1, .L1531+0x4
	bl	StringExpandPlaceholders
	b	.L1521
.L1532:
	.align	2, 0
.L1531:
	.word	gStringVar4
	.word	gText_OnlyPkmnForBattle
.L1523:
	ldr	r0, .L1533
	ldr	r1, .L1533+0x4
	bl	StringExpandPlaceholders
	b	.L1521
.L1534:
	.align	2, 0
.L1533:
	.word	gStringVar4
	.word	gText_PkmnCantBeTradedNow
.L1524:
	ldr	r0, .L1535
	ldr	r1, .L1535+0x4
	bl	StringExpandPlaceholders
	b	.L1521
.L1536:
	.align	2, 0
.L1535:
	.word	gStringVar4
	.word	gText_EggCantBeTradedNow
.L1525:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L1537
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1537+0x4
	add	r0, r0, r1
	ldr	r1, .L1537+0x8
	bl	GetMonNickname
	ldr	r4, .L1537+0xc
	ldr	r1, .L1537+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	ldr	r1, .L1537+0x14
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1537+0x18
	b	.L1528
.L1538:
	.align	2, 0
.L1537:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar4
	.word	gJPText_PutVar1IntoSpinner
	.word	gTasks
	.word	sub_81B53FC
.L1521:
	mov	r0, #0x20
	bl	PlaySE
	ldr	r4, .L1539
	ldr	r1, .L1539+0x4
	add	r0, r4, #0
	bl	StringAppend
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	ldr	r1, .L1539+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1539+0xc
.L1528:
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1540:
	.align	2, 0
.L1539:
	.word	gStringVar4
	.word	gText_PauseUntilPress
	.word	gTasks
	.word	sub_81B1C1C
.Lfe168:
	.size	 CursorCb_Trade2,.Lfe168-CursorCb_Trade2
	.align	2, 0
	.type	 sub_81B53FC,function
	.thumb_func
sub_81B53FC:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1542	@cond_branch
	bl	sub_81B334C
	ldr	r0, .L1543
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L1543+0x4
	str	r0, [r1]
.L1542:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1544:
	.align	2, 0
.L1543:
	.word	gTasks
	.word	sub_81B5430
.Lfe169:
	.size	 sub_81B53FC,.Lfe169-sub_81B53FC
	.align	2, 0
	.type	 sub_81B5430,function
	.thumb_func
sub_81B5430:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1547	@cond_branch
	cmp	r1, #0
	bgt	.L1552	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1548	@cond_branch
	b	.L1546
.L1552:
	cmp	r1, #0x1
	beq	.L1549	@cond_branch
	b	.L1546
.L1547:
	add	r0, r4, #0
	bl	sub_81B12C0
	b	.L1546
.L1548:
	mov	r0, #0x5
	bl	PlaySE
.L1549:
	add	r0, r4, #0
	bl	sub_81B1C1C
.L1546:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe170:
	.size	 sub_81B5430,.Lfe170-sub_81B5430
	.align	2, 0
	.type	 CursorCb_FieldMove,function
	.thumb_func
CursorCb_FieldMove:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	bl	Menu_GetCursorPos
	ldr	r5, .L1581
	ldr	r1, [r5]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r1, #0xf
	add	r1, r1, r0
	ldrb	r0, [r1]
	sub	r0, r0, #0x13
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L1581+0x4
	lsl	r0, r4, #0x3
	add	r7, r0, r1
	ldr	r0, [r7]
	cmp	r0, #0
	bne	.LCB14454
	b	.L1553	@long jump
.LCB14454:
	ldr	r0, [r5]
	add	r0, r0, #0xc
	bl	sub_81B302C
	ldr	r0, [r5]
	add	r0, r0, #0xd
	bl	sub_81B302C
	bl	sub_81221AC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1556	@cond_branch
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.L1555	@cond_branch
.L1556:
	add	r0, r4, #0
	sub	r0, r0, #0xb
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L1557	@cond_branch
	mov	r0, #0xd
	bl	display_pokemon_menu_message
	b	.L1572
.L1582:
	.align	2, 0
.L1581:
	.word	gUnknown_0203CEC4
	.word	sFieldMoveCursorCallbacks
.L1557:
	ldrb	r0, [r7, #0x4]
	b	.L1580
.L1555:
	cmp	r4, #0x7
	bhi	.L1560	@cond_branch
	ldr	r1, .L1583
	add	r0, r4, r1
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1560	@cond_branch
	ldr	r0, .L1583+0x4
	mov	r1, #0x1
	bl	sub_81B1B5C
	ldr	r1, .L1583+0x8
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1583+0xc
	str	r1, [r0]
	b	.L1553
.L1584:
	.align	2, 0
.L1583:
	.word	0x867
	.word	gText_CantUseUntilNewBadge
	.word	gTasks
	.word	sub_81B1C1C
.L1560:
	ldr	r1, .L1585
	lsl	r0, r4, #0x3
	add	r5, r0, r1
	ldr	r0, [r5]
	bl	_call_via_r0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.LCB14546
	b	.L1562	@long jump
.LCB14546:
	sub	r0, r4, #0x5
	cmp	r0, #0x7
	bhi	.L1569	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L1585+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1586:
	.align	2, 0
.L1585:
	.word	sFieldMoveCursorCallbacks
	.word	.L1570
	.align	2, 0
	.align	2, 0
.L1570:
	.word	.L1568
	.word	.L1569
	.word	.L1569
	.word	.L1566
	.word	.L1567
	.word	.L1569
	.word	.L1565
	.word	.L1565
.L1565:
	add	r0, r6, #0
	bl	sub_8161560
	b	.L1553
.L1566:
	ldr	r0, .L1587
	ldr	r1, [r0]
	mov	r0, #0x1c
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x1d]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	add	r1, r0, #0
	ldr	r0, .L1587+0x4
	ldrb	r1, [r1, #0x14]
	bl	sub_81245DC
	ldr	r0, .L1587+0x8
	ldr	r1, .L1587+0xc
	b	.L1577
.L1588:
	.align	2, 0
.L1587:
	.word	gSaveBlock1Ptr
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_ReturnToHealingSpot
.L1567:
	ldr	r0, .L1589
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x24
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r1, #0x25
	ldrb	r1, [r1, #0]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	add	r1, r0, #0
	ldr	r0, .L1589+0x4
	ldrb	r1, [r1, #0x14]
	bl	sub_81245DC
	ldr	r0, .L1589+0x8
	ldr	r1, .L1589+0xc
.L1577:
	bl	StringExpandPlaceholders
	add	r0, r6, #0
	bl	sub_81B5674
	ldr	r0, .L1589+0x10
	ldr	r0, [r0]
	mov	r1, #0x86
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	strh	r4, [r0]
	b	.L1553
.L1590:
	.align	2, 0
.L1589:
	.word	gSaveBlock1Ptr
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_EscapeFromHere
	.word	gUnknown_0203CEC4
.L1568:
	ldr	r1, .L1591
	ldr	r0, .L1591+0x4
	b	.L1578
.L1592:
	.align	2, 0
.L1591:
	.word	gUnknown_0203CEC8
	.word	MCB2_FlyMap
.L1569:
	ldr	r1, .L1593
	ldr	r0, .L1593+0x4
.L1578:
	str	r0, [r1]
	add	r0, r6, #0
	bl	sub_81B12C0
	b	.L1553
.L1594:
	.align	2, 0
.L1593:
	.word	gUnknown_0203CEC8
	.word	CB2_ReturnToField
.L1562:
	cmp	r4, #0x1
	beq	.L1574	@cond_branch
	cmp	r4, #0x4
	bne	.L1575	@cond_branch
	bl	sub_81B5864
	b	.L1572
.L1574:
	bl	sub_81B57DC
	b	.L1572
.L1575:
	ldrb	r0, [r5, #0x4]
.L1580:
	bl	display_pokemon_menu_message
.L1572:
	ldr	r0, .L1595
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L1595+0x4
	str	r0, [r1]
.L1553:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1596:
	.align	2, 0
.L1595:
	.word	gTasks
	.word	task_brm_cancel_1_on_keypad_a_or_b
.Lfe171:
	.size	 CursorCb_FieldMove,.Lfe171-CursorCb_FieldMove
	.align	2, 0
	.type	 sub_81B5674,function
	.thumb_func
sub_81B5674:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L1598
	mov	r1, #0x1
	bl	sub_81B1B5C
	ldr	r1, .L1598+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1598+0x8
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1599:
	.align	2, 0
.L1598:
	.word	gStringVar4
	.word	gTasks
	.word	sub_81B56A4
.Lfe172:
	.size	 sub_81B5674,.Lfe172-sub_81B5674
	.align	2, 0
	.type	 sub_81B56A4,function
	.thumb_func
sub_81B56A4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1601	@cond_branch
	bl	sub_81B334C
	ldr	r0, .L1602
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L1602+0x4
	str	r0, [r1]
.L1601:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1603:
	.align	2, 0
.L1602:
	.word	gTasks
	.word	sub_81B56D8
.Lfe173:
	.size	 sub_81B56A4,.Lfe173-sub_81B56A4
	.align	2, 0
	.type	 sub_81B56D8,function
	.thumb_func
sub_81B56D8:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1606	@cond_branch
	cmp	r1, #0
	bgt	.L1611	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1607	@cond_branch
	b	.L1605
.L1611:
	cmp	r1, #0x1
	beq	.L1608	@cond_branch
	b	.L1605
.L1606:
	ldr	r1, .L1612
	ldr	r0, .L1612+0x4
	str	r0, [r1]
	add	r0, r4, #0
	bl	sub_81B12C0
	b	.L1605
.L1613:
	.align	2, 0
.L1612:
	.word	gUnknown_0203CEC8
	.word	CB2_ReturnToField
.L1607:
	mov	r0, #0x5
	bl	PlaySE
.L1608:
	ldr	r0, .L1614
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r0, .L1614+0x4
	str	r1, [r0]
	add	r0, r4, #0
	bl	sub_81B1C1C
.L1605:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1615:
	.align	2, 0
.L1614:
	.word	gFieldCallback2
	.word	gPostMenuFieldCallback
.Lfe174:
	.size	 sub_81B56D8,.Lfe174-sub_81B56D8
	.align	2, 0
	.globl	FieldCallback_PrepareFadeInFromMenu
	.type	 FieldCallback_PrepareFadeInFromMenu,function
	.thumb_func
FieldCallback_PrepareFadeInFromMenu:
	push	{lr}
	bl	pal_fill_black
	ldr	r0, .L1617
	mov	r1, #0x8
	bl	CreateTask
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.L1618:
	.align	2, 0
.L1617:
	.word	task_launch_hm_phase_2
.Lfe175:
	.size	 FieldCallback_PrepareFadeInFromMenu,.Lfe175-FieldCallback_PrepareFadeInFromMenu
	.align	2, 0
	.type	 task_launch_hm_phase_2,function
	.thumb_func
task_launch_hm_phase_2:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1620	@cond_branch
	bl	brm_get_selected_species
	ldr	r1, .L1621
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [r1]
	ldr	r0, .L1621+0x4
	ldr	r0, [r0]
	bl	_call_via_r0
	add	r0, r4, #0
	bl	DestroyTask
.L1620:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1622:
	.align	2, 0
.L1621:
	.word	gFieldEffectArguments
	.word	gPostMenuFieldCallback
.Lfe176:
	.size	 task_launch_hm_phase_2,.Lfe176-task_launch_hm_phase_2
	.align	2, 0
	.type	 brm_get_selected_species,function
	.thumb_func
brm_get_selected_species:
	push	{lr}
	ldr	r0, .L1624
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1624+0x4
	add	r0, r0, r1
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L1625:
	.align	2, 0
.L1624:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
.Lfe177:
	.size	 brm_get_selected_species,.Lfe177-brm_get_selected_species
	.align	2, 0
	.type	 task_brm_cancel_1_on_keypad_a_or_b,function
	.thumb_func
task_brm_cancel_1_on_keypad_a_or_b:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L1629
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1628	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1627	@cond_branch
.L1628:
	add	r0, r2, #0
	bl	CursorCb_Cancel1
.L1627:
	pop	{r0}
	bx	r0
.L1630:
	.align	2, 0
.L1629:
	.word	gMain
.Lfe178:
	.size	 task_brm_cancel_1_on_keypad_a_or_b,.Lfe178-task_brm_cancel_1_on_keypad_a_or_b
	.align	2, 0
	.type	 sub_81B57DC,function
	.thumb_func
sub_81B57DC:
	push	{lr}
	ldr	r0, .L1634
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1632	@cond_branch
	mov	r0, #0xc
	bl	display_pokemon_menu_message
	b	.L1633
.L1635:
	.align	2, 0
.L1634:
	.word	0x888
.L1632:
	mov	r0, #0xd
	bl	display_pokemon_menu_message
.L1633:
	pop	{r0}
	bx	r0
.Lfe179:
	.size	 sub_81B57DC,.Lfe179-sub_81B57DC
	.align	2, 0
	.type	 hm_surf_run_dp02scr,function
	.thumb_func
hm_surf_run_dp02scr:
	push	{lr}
	bl	GetCursorSelectionMonId
	ldr	r1, .L1637
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [r1]
	mov	r0, #0x9
	bl	FieldEffectStart
	pop	{r0}
	bx	r0
.L1638:
	.align	2, 0
.L1637:
	.word	gFieldEffectArguments
.Lfe180:
	.size	 hm_surf_run_dp02scr,.Lfe180-hm_surf_run_dp02scr
	.align	2, 0
	.type	 SetUpFieldMove_Surf,function
	.thumb_func
SetUpFieldMove_Surf:
	push	{lr}
	bl	PartyHasMonWithSurf
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1640	@cond_branch
	bl	IsPlayerFacingSurfableFishableWater
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1640	@cond_branch
	ldr	r1, .L1642
	ldr	r0, .L1642+0x4
	str	r0, [r1]
	ldr	r1, .L1642+0x8
	ldr	r0, .L1642+0xc
	str	r0, [r1]
	mov	r0, #0x1
	b	.L1641
.L1643:
	.align	2, 0
.L1642:
	.word	gFieldCallback2
	.word	FieldCallback_PrepareFadeInFromMenu
	.word	gPostMenuFieldCallback
	.word	hm_surf_run_dp02scr
.L1640:
	mov	r0, #0x0
.L1641:
	pop	{r1}
	bx	r1
.Lfe181:
	.size	 SetUpFieldMove_Surf,.Lfe181-SetUpFieldMove_Surf
	.align	2, 0
	.type	 sub_81B5864,function
	.thumb_func
sub_81B5864:
	push	{lr}
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1645	@cond_branch
	mov	r0, #0x9
	bl	display_pokemon_menu_message
	b	.L1646
.L1645:
	mov	r0, #0x8
	bl	display_pokemon_menu_message
.L1646:
	pop	{r0}
	bx	r0
.Lfe182:
	.size	 sub_81B5864,.Lfe182-sub_81B5864
	.align	2, 0
	.type	 SetUpFieldMove_Fly,function
	.thumb_func
SetUpFieldMove_Fly:
	push	{lr}
	ldr	r0, .L1651
	ldrb	r0, [r0, #0x17]
	bl	Overworld_MapTypeAllowsTeleportAndFly
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1648	@cond_branch
	mov	r0, #0x0
	b	.L1650
.L1652:
	.align	2, 0
.L1651:
	.word	gMapHeader
.L1648:
	mov	r0, #0x1
.L1650:
	pop	{r1}
	bx	r1
.Lfe183:
	.size	 SetUpFieldMove_Fly,.Lfe183-SetUpFieldMove_Fly
	.align	2, 0
	.globl	sub_81B58A8
	.type	 sub_81B58A8,function
	.thumb_func
sub_81B58A8:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L1654
	str	r0, [sp, #0x4]
	ldr	r0, .L1654+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	InitPartyMenu
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L1655:
	.align	2, 0
.L1654:
	.word	sub_81B1370
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe184:
	.size	 sub_81B58A8,.Lfe184-sub_81B58A8
	.align	2, 0
	.type	 hm2_waterfall,function
	.thumb_func
hm2_waterfall:
	push	{lr}
	bl	GetCursorSelectionMonId
	ldr	r1, .L1657
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [r1]
	mov	r0, #0x2b
	bl	FieldEffectStart
	pop	{r0}
	bx	r0
.L1658:
	.align	2, 0
.L1657:
	.word	gFieldEffectArguments
.Lfe185:
	.size	 hm2_waterfall,.Lfe185-hm2_waterfall
	.align	2, 0
	.type	 SetUpFieldMove_Waterfall,function
	.thumb_func
SetUpFieldMove_Waterfall:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsWaterfall
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1660	@cond_branch
	bl	IsPlayerSurfingNorth
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1660	@cond_branch
	ldr	r1, .L1662
	ldr	r0, .L1662+0x4
	str	r0, [r1]
	ldr	r1, .L1662+0x8
	ldr	r0, .L1662+0xc
	str	r0, [r1]
	mov	r0, #0x1
	b	.L1661
.L1663:
	.align	2, 0
.L1662:
	.word	gFieldCallback2
	.word	FieldCallback_PrepareFadeInFromMenu
	.word	gPostMenuFieldCallback
	.word	hm2_waterfall
.L1660:
	mov	r0, #0x0
.L1661:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe186:
	.size	 SetUpFieldMove_Waterfall,.Lfe186-SetUpFieldMove_Waterfall
	.align	2, 0
	.type	 sub_81B5958,function
	.thumb_func
sub_81B5958:
	push	{lr}
	bl	GetCursorSelectionMonId
	ldr	r1, .L1665
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [r1]
	mov	r0, #0x2c
	bl	FieldEffectStart
	pop	{r0}
	bx	r0
.L1666:
	.align	2, 0
.L1665:
	.word	gFieldEffectArguments
.Lfe187:
	.size	 sub_81B5958,.Lfe187-sub_81B5958
	.align	2, 0
	.type	 SetUpFieldMove_Dive,function
	.thumb_func
SetUpFieldMove_Dive:
	push	{lr}
	bl	TrySetDiveWarp
	ldr	r1, .L1670
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [r1, #0x4]
	cmp	r0, #0
	bne	.L1668	@cond_branch
	mov	r0, #0x0
	b	.L1669
.L1671:
	.align	2, 0
.L1670:
	.word	gFieldEffectArguments
.L1668:
	ldr	r1, .L1672
	ldr	r0, .L1672+0x4
	str	r0, [r1]
	ldr	r1, .L1672+0x8
	ldr	r0, .L1672+0xc
	str	r0, [r1]
	mov	r0, #0x1
.L1669:
	pop	{r1}
	bx	r1
.L1673:
	.align	2, 0
.L1672:
	.word	gFieldCallback2
	.word	FieldCallback_PrepareFadeInFromMenu
	.word	gPostMenuFieldCallback
	.word	sub_81B5958
.Lfe188:
	.size	 SetUpFieldMove_Dive,.Lfe188-SetUpFieldMove_Dive
	.align	2, 0
	.type	 party_menu_icon_anim,function
	.thumb_func
party_menu_icon_anim:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	add	r7, r1, #0
	add	r4, r2, #0
	mov	r6, #0x1
	bl	IsMultiBattle
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1675	@cond_branch
	ldr	r0, .L1677
	ldr	r1, .L1677+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1675	@cond_branch
	ldr	r0, .L1677+0x8
	add	r0, r4, r0
	ldrb	r1, [r0]
	eor	r1, r1, r6
	neg	r0, r1
	orr	r0, r0, r1
	lsr	r6, r0, #0x1f
.L1675:
	add	r0, r5, #0
	mov	r1, #0x41
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r5, #0
	mov	r1, #0x0
	bl	GetMonData
	add	r1, r0, #0
	str	r6, [sp]
	add	r0, r4, #0
	add	r2, r7, #0
	mov	r3, #0x1
	bl	party_menu_link_mon_icon_anim
	ldrb	r0, [r7, #0x9]
	add	r1, r5, #0
	bl	sub_81B5B38
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1678:
	.align	2, 0
.L1677:
	.word	gMain
	.word	0x439
	.word	gUnknown_08616020
.Lfe189:
	.size	 party_menu_icon_anim,.Lfe189-party_menu_icon_anim
	.align	2, 0
	.type	 party_menu_link_mon_icon_anim,function
	.thumb_func
party_menu_link_mon_icon_anim:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	add	r6, r1, #0
	add	r4, r2, #0
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r3, r3, #0x18
	lsr	r7, r3, #0x18
	cmp	r5, #0
	beq	.L1680	@cond_branch
	ldr	r1, .L1681
	ldr	r0, [r4, #0x4]
	ldrb	r2, [r0]
	ldrb	r3, [r0, #0x1]
	mov	r0, #0x4
	str	r0, [sp]
	str	r6, [sp, #0x4]
	ldr	r0, [sp, #0x20]
	str	r0, [sp, #0x8]
	add	r0, r5, #0
	bl	CreateMonIcon
	strb	r0, [r4, #0x9]
	ldr	r2, .L1681+0x4
	ldrb	r0, [r4, #0x9]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	mov	r0, #0x3
	add	r2, r7, #0
	and	r2, r2, r0
	lsl	r2, r2, #0x2
	ldrb	r3, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
.L1680:
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1682:
	.align	2, 0
.L1681:
	.word	sub_80D3014
	.word	gSprites
.Lfe190:
	.size	 party_menu_link_mon_icon_anim,.Lfe190-party_menu_link_mon_icon_anim
	.align	2, 0
	.type	 sub_81B5A8C,function
	.thumb_func
sub_81B5A8C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r0, r1, #0
	add	r1, r2, #0
	bl	GetHPBarLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.L1687	@cond_branch
	cmp	r0, #0x2
	bgt	.L1691	@cond_branch
	cmp	r0, #0x1
	beq	.L1688	@cond_branch
	b	.L1689
.L1691:
	cmp	r0, #0x3
	beq	.L1686	@cond_branch
	cmp	r0, #0x4
	bne	.L1689	@cond_branch
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	ldr	r1, .L1692
	add	r0, r0, r1
	mov	r1, #0x0
	bl	sub_80D32C8
	b	.L1684
.L1693:
	.align	2, 0
.L1692:
	.word	gSprites
.L1686:
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	ldr	r1, .L1694
	add	r0, r0, r1
	mov	r1, #0x1
	bl	sub_80D32C8
	b	.L1684
.L1695:
	.align	2, 0
.L1694:
	.word	gSprites
.L1687:
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	ldr	r1, .L1696
	add	r0, r0, r1
	mov	r1, #0x2
	bl	sub_80D32C8
	b	.L1684
.L1697:
	.align	2, 0
.L1696:
	.word	gSprites
.L1688:
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	ldr	r1, .L1698
	add	r0, r0, r1
	mov	r1, #0x3
	bl	sub_80D32C8
	b	.L1684
.L1699:
	.align	2, 0
.L1698:
	.word	gSprites
.L1689:
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	ldr	r1, .L1700
	add	r0, r0, r1
	mov	r1, #0x4
	bl	sub_80D32C8
.L1684:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1701:
	.align	2, 0
.L1700:
	.word	gSprites
.Lfe191:
	.size	 sub_81B5A8C,.Lfe191-sub_81B5A8C
	.align	2, 0
	.type	 sub_81B5B38,function
	.thumb_func
sub_81B5B38:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	add	r0, r6, #0
	mov	r1, #0x39
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r6, #0
	mov	r1, #0x3a
	bl	GetMonData
	add	r2, r0, #0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	add	r0, r5, #0
	add	r1, r4, #0
	bl	sub_81B5A8C
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe192:
	.size	 sub_81B5B38,.Lfe192-sub_81B5B38
	.align	2, 0
	.type	 AnimateSelectedPartyIcon,function
	.thumb_func
AnimateSelectedPartyIcon:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x18
	ldr	r5, .L1709
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r6, r0, #0x2
	add	r2, r6, r5
	mov	r7, #0x0
	mov	r3, #0x0
	strh	r3, [r2, #0x2e]
	mov	ip, r5
	cmp	r1, #0
	bne	.L1704	@cond_branch
	mov	r1, #0x20
	ldrsh	r0, [r2, r1]
	cmp	r0, #0x10
	bne	.L1705	@cond_branch
	strh	r3, [r2, #0x24]
	ldr	r0, .L1709+0x4
	strh	r0, [r2, #0x26]
	b	.L1706
.L1710:
	.align	2, 0
.L1709:
	.word	gSprites
	.word	0xfffc
.L1705:
	ldr	r0, .L1711
	strh	r0, [r2, #0x24]
	strh	r3, [r2, #0x26]
.L1706:
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	mov	r1, ip
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L1711+0x4
	b	.L1708
.L1712:
	.align	2, 0
.L1711:
	.word	0xfffc
	.word	UpdatePartyMonIconFrame
.L1704:
	strh	r3, [r2, #0x24]
	strh	r3, [r2, #0x26]
	add	r0, r5, #0
	add	r0, r0, #0x1c
	add	r0, r6, r0
	ldr	r1, .L1713
.L1708:
	str	r1, [r0]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1714:
	.align	2, 0
.L1713:
	.word	UpdatePartyMonIconFrameAndBounce
.Lfe193:
	.size	 AnimateSelectedPartyIcon,.Lfe193-AnimateSelectedPartyIcon
	.align	2, 0
	.type	 UpdatePartyMonIconFrameAndBounce,function
	.thumb_func
UpdatePartyMonIconFrameAndBounce:
	push	{r4, lr}
	add	r4, r0, #0
	bl	UpdateMonIconFrame
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1716	@cond_branch
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1717	@cond_branch
	ldr	r0, .L1719
	strh	r0, [r4, #0x26]
	b	.L1716
.L1720:
	.align	2, 0
.L1719:
	.word	0xfffd
.L1717:
	strh	r1, [r4, #0x26]
.L1716:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe194:
	.size	 UpdatePartyMonIconFrameAndBounce,.Lfe194-UpdatePartyMonIconFrameAndBounce
	.align	2, 0
	.type	 UpdatePartyMonIconFrame,function
	.thumb_func
UpdatePartyMonIconFrame:
	push	{lr}
	bl	UpdateMonIconFrame
	pop	{r0}
	bx	r0
.Lfe195:
	.size	 UpdatePartyMonIconFrame,.Lfe195-UpdatePartyMonIconFrame
	.align	2, 0
	.type	 party_menu_held_item_object,function
	.thumb_func
party_menu_held_item_object:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L1723	@cond_branch
	ldr	r0, .L1724
	ldr	r2, [r4, #0x4]
	ldrb	r1, [r2, #0x2]
	ldrb	r2, [r2, #0x3]
	mov	r3, #0x0
	bl	CreateSprite
	strb	r0, [r4, #0xa]
	add	r0, r5, #0
	add	r1, r4, #0
	bl	sub_81B5C94
.L1723:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1725:
	.align	2, 0
.L1724:
	.word	sSpriteTemplate_HeldItem
.Lfe196:
	.size	 party_menu_held_item_object,.Lfe196-party_menu_held_item_object
	.align	2, 0
	.type	 party_menu_link_mon_held_item_object,function
	.thumb_func
party_menu_link_mon_held_item_object:
	push	{r4, r5, lr}
	add	r4, r2, #0
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	cmp	r0, #0
	beq	.L1727	@cond_branch
	ldr	r0, .L1728
	ldr	r2, [r4, #0x4]
	ldrb	r1, [r2, #0x2]
	ldrb	r2, [r2, #0x3]
	mov	r3, #0x0
	bl	CreateSprite
	strb	r0, [r4, #0xa]
	ldr	r2, .L1728+0x4
	ldrb	r0, [r4, #0xa]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	add	r0, r5, #0
	add	r1, r4, #0
	bl	sub_81B5CB0
.L1727:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1729:
	.align	2, 0
.L1728:
	.word	sSpriteTemplate_HeldItem
	.word	gSprites
.Lfe197:
	.size	 party_menu_link_mon_held_item_object,.Lfe197-party_menu_link_mon_held_item_object
	.align	2, 0
	.type	 sub_81B5C94,function
	.thumb_func
sub_81B5C94:
	push	{r4, lr}
	add	r4, r1, #0
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r4, #0
	bl	sub_81B5CB0
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe198:
	.size	 sub_81B5C94,.Lfe198-sub_81B5C94
	.align	2, 0
	.type	 sub_81B5CB0,function
	.thumb_func
sub_81B5CB0:
	push	{r4, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1732	@cond_branch
	ldr	r2, .L1737
	ldrb	r1, [r4, #0xa]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	b	.L1736
.L1738:
	.align	2, 0
.L1737:
	.word	gSprites
.L1732:
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1734	@cond_branch
	ldrb	r1, [r4, #0xa]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1739
	add	r0, r0, r1
	mov	r1, #0x1
	bl	StartSpriteAnim
	b	.L1735
.L1740:
	.align	2, 0
.L1739:
	.word	gSprites
.L1734:
	ldrb	r1, [r4, #0xa]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1741
	add	r0, r0, r1
	mov	r1, #0x0
	bl	StartSpriteAnim
.L1735:
	ldr	r2, .L1741
	ldrb	r1, [r4, #0xa]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
.L1736:
	strb	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1742:
	.align	2, 0
.L1741:
	.word	gSprites
.Lfe199:
	.size	 sub_81B5CB0,.Lfe199-sub_81B5CB0
	.align	2, 0
	.globl	LoadHeldItemIcons
	.type	 LoadHeldItemIcons,function
	.thumb_func
LoadHeldItemIcons:
	push	{lr}
	ldr	r0, .L1744
	bl	LoadSpriteSheet
	ldr	r0, .L1744+0x4
	bl	LoadSpritePalette
	pop	{r0}
	bx	r0
.L1745:
	.align	2, 0
.L1744:
	.word	sSpriteSheet_HeldItem
	.word	sSpritePalette_HeldItem
.Lfe200:
	.size	 LoadHeldItemIcons,.Lfe200-LoadHeldItemIcons
	.align	2, 0
	.globl	sub_81B5D4C
	.type	 sub_81B5D4C,function
	.thumb_func
sub_81B5D4C:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	add	r7, r1, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	cmp	r2, #0
	beq	.L1748	@cond_branch
	cmp	r2, #0x1
	beq	.L1755	@cond_branch
	b	.L1747
.L1748:
	mov	r5, #0x0
	ldrb	r0, [r6]
	cmp	r5, r0
	bcs	.L1747	@cond_branch
.L1752:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L1765
	add	r0, r0, r1
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	beq	.L1751	@cond_branch
	add	r0, r7, r5
	ldrb	r4, [r0]
	add	r0, r1, #0
	bl	ItemIsMail
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_81B5DF0
.L1751:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldrb	r0, [r6]
	cmp	r5, r0
	bcc	.L1752	@cond_branch
	b	.L1747
.L1766:
	.align	2, 0
.L1765:
	.word	gPlayerParty
.L1755:
	mov	r5, #0x0
	b	.L1764
.L1759:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L1767
	add	r0, r0, r1
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	beq	.L1758	@cond_branch
	add	r0, r5, r7
	ldrb	r4, [r0, #0x6]
	add	r0, r1, #0
	bl	ItemIsMail
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_81B5DF0
.L1758:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
.L1764:
	ldrb	r0, [r6, #0x1]
	cmp	r5, r0
	bcc	.L1759	@cond_branch
.L1747:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1768:
	.align	2, 0
.L1767:
	.word	gEnemyParty
.Lfe201:
	.size	 sub_81B5D4C,.Lfe201-sub_81B5D4C
	.align	2, 0
	.type	 sub_81B5DF0,function
	.thumb_func
sub_81B5DF0:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	r6, r0, #0
	mov	r9, r1
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	mov	r0, r9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	ldr	r0, .L1770
	mov	r8, r0
	lsl	r0, r6, #0x4
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	add	r0, r0, #0x43
	ldrb	r3, [r0]
	ldr	r0, .L1770+0x4
	sub	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r1, #0xfa
	mov	r2, #0xaa
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	mov	r0, r8
	add	r5, r4, r0
	mov	r0, #0x4
	strh	r0, [r5, #0x24]
	mov	r0, #0xa
	strh	r0, [r5, #0x26]
	mov	r0, #0x1c
	add	r8, r8, r0
	add	r4, r4, r8
	ldr	r0, .L1770+0x8
	str	r0, [r4]
	strh	r6, [r5, #0x3c]
	add	r0, r5, #0
	mov	r1, r9
	bl	StartSpriteAnim
	ldr	r1, [r4]
	add	r0, r5, #0
	bl	_call_via_r1
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1771:
	.align	2, 0
.L1770:
	.word	gSprites
	.word	sSpriteTemplate_HeldItem
	.word	SpriteCB_HeldItem
.Lfe202:
	.size	 sub_81B5DF0,.Lfe202-sub_81B5DF0
	.align	2, 0
	.type	 SpriteCB_HeldItem,function
	.thumb_func
SpriteCB_HeldItem:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r1, [r4, #0x3c]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L1775
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r0, r2
	add	r0, r2, #0
	add	r0, r0, #0x3e
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1d
	cmp	r0, #0
	bge	.L1773	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	b	.L1774
.L1776:
	.align	2, 0
.L1775:
	.word	gSprites
.L1773:
	add	r3, r4, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3]
	ldrh	r0, [r2, #0x24]
	ldrh	r1, [r2, #0x20]
	add	r0, r0, r1
	strh	r0, [r4, #0x20]
	ldrh	r0, [r2, #0x26]
	ldrh	r2, [r2, #0x22]
	add	r0, r0, r2
	strh	r0, [r4, #0x22]
.L1774:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe203:
	.size	 SpriteCB_HeldItem,.Lfe203-SpriteCB_HeldItem
	.align	2, 0
	.type	 party_menu_pokeball_object,function
	.thumb_func
party_menu_pokeball_object:
	push	{r4, lr}
	add	r4, r1, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L1778	@cond_branch
	ldr	r0, .L1779
	ldr	r2, [r4, #0x4]
	ldrb	r1, [r2, #0x6]
	ldrb	r2, [r2, #0x7]
	mov	r3, #0x8
	bl	CreateSprite
	strb	r0, [r4, #0xb]
.L1778:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1780:
	.align	2, 0
.L1779:
	.word	sSpriteTemplate_MenuPokeball
.Lfe204:
	.size	 party_menu_pokeball_object,.Lfe204-party_menu_pokeball_object
	.align	2, 0
	.type	 party_menu_link_mon_pokeball_object,function
	.thumb_func
party_menu_link_mon_pokeball_object:
	push	{r4, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L1782	@cond_branch
	ldr	r0, .L1783
	ldr	r2, [r4, #0x4]
	ldrb	r1, [r2, #0x6]
	ldrb	r2, [r2, #0x7]
	mov	r3, #0x8
	bl	CreateSprite
	strb	r0, [r4, #0xb]
	ldr	r2, .L1783+0x4
	ldrb	r0, [r4, #0xb]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
.L1782:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1784:
	.align	2, 0
.L1783:
	.word	sSpriteTemplate_MenuPokeball
	.word	gSprites
.Lfe205:
	.size	 party_menu_link_mon_pokeball_object,.Lfe205-party_menu_link_mon_pokeball_object
	.align	2, 0
	.type	 sub_81B5F34,function
	.thumb_func
sub_81B5F34:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L1786
	add	r1, r3, #0
	mov	r3, #0x8
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1786+0x4
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r3, [r1, #0x5]
	mov	r2, #0xd
	neg	r2, r2
	and	r2, r2, r3
	mov	r3, #0x8
	orr	r2, r2, r3
	strb	r2, [r1, #0x5]
	pop	{r1}
	bx	r1
.L1787:
	.align	2, 0
.L1786:
	.word	sSpriteTemplate_MenuPokeball
	.word	gSprites
.Lfe206:
	.size	 sub_81B5F34,.Lfe206-sub_81B5F34
	.align	2, 0
	.type	 sub_81B5F74,function
	.thumb_func
sub_81B5F74:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L1789
	add	r1, r3, #0
	mov	r3, #0x8
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L1790:
	.align	2, 0
.L1789:
	.word	gSpriteTemplate_8615F78
.Lfe207:
	.size	 sub_81B5F74,.Lfe207-sub_81B5F74
	.align	2, 0
	.type	 sub_81B5F98,function
	.thumb_func
sub_81B5F98:
	push	{lr}
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L1792
	add	r0, r0, r2
	bl	StartSpriteAnim
	pop	{r0}
	bx	r0
.L1793:
	.align	2, 0
.L1792:
	.word	gSprites
.Lfe208:
	.size	 sub_81B5F98,.Lfe208-sub_81B5F98
	.align	2, 0
	.type	 sub_81B5FBC,function
	.thumb_func
sub_81B5FBC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	cmp	r6, #0
	bne	.L1795	@cond_branch
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L1797
	mov	r8, r0
	add	r4, r4, r8
	add	r0, r4, #0
	mov	r1, #0x2
	bl	StartSpriteAnim
	lsl	r5, r7, #0x4
	add	r5, r5, r7
	lsl	r5, r5, #0x2
	add	r5, r5, r8
	add	r0, r5, #0
	mov	r1, #0x4
	bl	StartSpriteAnim
	strh	r6, [r4, #0x26]
	strh	r6, [r5, #0x26]
	b	.L1796
.L1798:
	.align	2, 0
.L1797:
	.word	gSprites
.L1795:
	lsl	r5, r0, #0x4
	add	r5, r5, r0
	lsl	r5, r5, #0x2
	ldr	r0, .L1799
	mov	r8, r0
	add	r5, r5, r8
	add	r0, r5, #0
	mov	r1, #0x3
	bl	StartSpriteAnim
	lsl	r4, r7, #0x4
	add	r4, r4, r7
	lsl	r4, r4, #0x2
	add	r4, r4, r8
	add	r0, r4, #0
	mov	r1, #0x5
	bl	StartSpriteAnim
	ldr	r0, .L1799+0x4
	strh	r0, [r5, #0x26]
	mov	r0, #0x4
	strh	r0, [r4, #0x26]
.L1796:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1800:
	.align	2, 0
.L1799:
	.word	gSprites
	.word	0xfffc
.Lfe209:
	.size	 sub_81B5FBC,.Lfe209-sub_81B5FBC
	.align	2, 0
	.type	 LoadPartyMenuPokeballGfx,function
	.thumb_func
LoadPartyMenuPokeballGfx:
	push	{lr}
	ldr	r0, .L1802
	bl	LoadCompressedSpriteSheet
	ldr	r0, .L1802+0x4
	bl	LoadCompressedSpriteSheet
	ldr	r0, .L1802+0x8
	bl	LoadCompressedSpritePalette
	pop	{r0}
	bx	r0
.L1803:
	.align	2, 0
.L1802:
	.word	sSpriteSheet_MenuPokeball
	.word	sSpriteSheet_MenuPokeballSmall
	.word	sSpritePalette_MenuPokeball
.Lfe210:
	.size	 LoadPartyMenuPokeballGfx,.Lfe210-LoadPartyMenuPokeballGfx
	.align	2, 0
	.type	 party_menu_status_condition_object,function
	.thumb_func
party_menu_status_condition_object:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L1805	@cond_branch
	ldr	r0, .L1806
	ldr	r2, [r4, #0x4]
	ldrb	r1, [r2, #0x4]
	ldrb	r2, [r2, #0x5]
	mov	r3, #0x0
	bl	CreateSprite
	strb	r0, [r4, #0xc]
	add	r0, r5, #0
	add	r1, r4, #0
	bl	party_menu_get_status_condition_and_update_object
.L1805:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1807:
	.align	2, 0
.L1806:
	.word	sSpriteTemplate_StatusIcons
.Lfe211:
	.size	 party_menu_status_condition_object,.Lfe211-party_menu_status_condition_object
	.align	2, 0
	.type	 party_menu_link_mon_status_condition_object,function
	.thumb_func
party_menu_link_mon_status_condition_object:
	push	{r4, r5, lr}
	add	r4, r2, #0
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	cmp	r0, #0
	beq	.L1809	@cond_branch
	ldr	r0, .L1810
	ldr	r2, [r4, #0x4]
	ldrb	r1, [r2, #0x4]
	ldrb	r2, [r2, #0x5]
	mov	r3, #0x0
	bl	CreateSprite
	strb	r0, [r4, #0xc]
	add	r0, r5, #0
	add	r1, r4, #0
	bl	party_menu_update_status_condition_object
	ldr	r2, .L1810+0x4
	ldrb	r0, [r4, #0xc]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
.L1809:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1811:
	.align	2, 0
.L1810:
	.word	sSpriteTemplate_StatusIcons
	.word	gSprites
.Lfe212:
	.size	 party_menu_link_mon_status_condition_object,.Lfe212-party_menu_link_mon_status_condition_object
	.align	2, 0
	.type	 party_menu_get_status_condition_and_update_object,function
	.thumb_func
party_menu_get_status_condition_and_update_object:
	push	{r4, lr}
	add	r4, r1, #0
	bl	GetMonAilment
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	bl	party_menu_update_status_condition_object
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe213:
	.size	 party_menu_get_status_condition_and_update_object,.Lfe213-party_menu_get_status_condition_and_update_object
	.align	2, 0
	.type	 party_menu_update_status_condition_object,function
	.thumb_func
party_menu_update_status_condition_object:
	push	{r4, r5, lr}
	add	r5, r1, #0
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	beq	.L1816	@cond_branch
	cmp	r2, #0x6
	bne	.L1817	@cond_branch
.L1816:
	ldr	r2, .L1820
	ldrb	r1, [r5, #0xc]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	b	.L1819
.L1821:
	.align	2, 0
.L1820:
	.word	gSprites
.L1817:
	ldrb	r1, [r5, #0xc]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L1822
	add	r0, r0, r4
	sub	r1, r2, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	ldrb	r1, [r5, #0xc]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
.L1819:
	strb	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1823:
	.align	2, 0
.L1822:
	.word	gSprites
.Lfe214:
	.size	 party_menu_update_status_condition_object,.Lfe214-party_menu_update_status_condition_object
	.align	2, 0
	.type	 LoadPartyMenuAilmentGfx,function
	.thumb_func
LoadPartyMenuAilmentGfx:
	push	{lr}
	ldr	r0, .L1825
	bl	LoadCompressedSpriteSheet
	ldr	r0, .L1825+0x4
	bl	LoadCompressedSpritePalette
	pop	{r0}
	bx	r0
.L1826:
	.align	2, 0
.L1825:
	.word	sSpriteSheet_StatusIcons
	.word	sSpritePalette_StatusIcons
.Lfe215:
	.size	 LoadPartyMenuAilmentGfx,.Lfe215-LoadPartyMenuAilmentGfx
	.align	2, 0
	.globl	sub_81B617C
	.type	 sub_81B617C,function
	.thumb_func
sub_81B617C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	ldr	r0, .L1841
	mov	r8, r0
	ldr	r0, .L1841+0x4
	ldr	r1, .L1841+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1828	@cond_branch
	mov	r7, #0x1
	bl	sub_81B8984
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	b	.L1829
.L1842:
	.align	2, 0
.L1841:
	.word	c2_815ABFC
	.word	gMain
	.word	0x439
.L1840:
	ldr	r0, .L1843
	strb	r5, [r0, #0x9]
	b	.L1832
.L1844:
	.align	2, 0
.L1843:
	.word	gUnknown_0203CEC8
.L1828:
	mov	r7, #0x0
	mov	r6, #0x0
.L1829:
	ldr	r4, .L1845
	ldrh	r0, [r4]
	bl	GetItemEffectType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xa
	bne	.L1830	@cond_branch
	ldr	r1, .L1845+0x4
	mov	r0, #0x0
	strb	r0, [r1, #0x9]
	mov	r5, #0x0
.L1834:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L1845+0x8
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L1833	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	beq	.L1840	@cond_branch
.L1833:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L1834	@cond_branch
.L1832:
	ldr	r0, .L1845+0xc
	mov	r1, #0x7f
	b	.L1837
.L1846:
	.align	2, 0
.L1845:
	.word	gSpecialVar_ItemId
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	sub_81B6280
.L1830:
	ldrh	r0, [r4]
	bl	GetPocketByItemId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x5
	cmp	r0, #0x3
	bne	.L1838	@cond_branch
	mov	r1, #0x4
.L1838:
	ldr	r0, .L1847
.L1837:
	str	r1, [sp]
	str	r0, [sp, #0x4]
	mov	r0, r8
	str	r0, [sp, #0x8]
	add	r0, r7, #0
	add	r1, r6, #0
	mov	r2, #0x3
	mov	r3, #0x1
	bl	InitPartyMenu
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1848:
	.align	2, 0
.L1847:
	.word	sub_81B1370
.Lfe216:
	.size	 sub_81B617C,.Lfe216-sub_81B617C
	.align	2, 0
	.type	 c2_815ABFC,function
	.thumb_func
c2_815ABFC:
	push	{lr}
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1850	@cond_branch
	mov	r0, #0xc
	mov	r1, #0x5
	mov	r2, #0x0
	bl	GoToBagMenu
	b	.L1851
.L1850:
	ldr	r0, .L1852
	ldr	r1, [r0]
	mov	r0, #0x4
	bl	sub_81C4F98
.L1851:
	pop	{r0}
	bx	r0
.L1853:
	.align	2, 0
.L1852:
	.word	gPyramidBagCursorData
.Lfe217:
	.size	 c2_815ABFC,.Lfe217-c2_815ABFC
	.align	2, 0
	.type	 sub_81B6280,function
	.thumb_func
sub_81B6280:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r0, .L1857
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1855	@cond_branch
	ldr	r0, .L1857+0x4
	ldrb	r1, [r0, #0x8]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1856	@cond_branch
	ldr	r0, .L1857+0x8
	ldr	r1, [r0]
	ldr	r0, .L1857+0xc
	str	r0, [r1, #0x4]
.L1856:
	ldr	r0, .L1857+0x10
	ldr	r1, .L1857+0x14
	ldr	r2, [r0]
	add	r0, r3, #0
	bl	_call_via_r2
.L1855:
	pop	{r0}
	bx	r0
.L1858:
	.align	2, 0
.L1857:
	.word	gPaletteFade
	.word	gUnknown_0203CEC8
	.word	gUnknown_0203CEC4
	.word	sub_81B9140
	.word	gUnknown_03006328
	.word	sub_81B6794
.Lfe218:
	.size	 sub_81B6280,.Lfe218-sub_81B6280
	.align	2, 0
	.type	 IsHPRecoveryItem,function
	.thumb_func
IsHPRecoveryItem:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xaf
	bne	.L1860	@cond_branch
	ldr	r0, .L1865
	ldr	r0, [r0]
	ldr	r1, .L1865+0x4
	add	r0, r0, r1
	b	.L1861
.L1866:
	.align	2, 0
.L1865:
	.word	gSaveBlock1Ptr
	.word	0x3214
.L1860:
	ldr	r1, .L1867
	sub	r0, r0, #0xd
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
.L1861:
	ldrb	r1, [r0, #0x4]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1862	@cond_branch
	mov	r0, #0x0
	b	.L1864
.L1868:
	.align	2, 0
.L1867:
	.word	gItemEffectTable
.L1862:
	mov	r0, #0x1
.L1864:
	pop	{r1}
	bx	r1
.Lfe219:
	.size	 IsHPRecoveryItem,.Lfe219-IsHPRecoveryItem
	.align	2, 0
	.type	 GetMedicineItemEffectMessage,function
	.thumb_func
GetMedicineItemEffectMessage:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	GetItemEffectType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x3
	cmp	r0, #0x12
	bls	.LCB17078
	b	.L1888	@long jump
.LCB17078:
	lsl	r0, r0, #0x2
	ldr	r1, .L1891
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1892:
	.align	2, 0
.L1891:
	.word	.L1889
	.align	2, 0
	.align	2, 0
.L1889:
	.word	.L1871
	.word	.L1872
	.word	.L1873
	.word	.L1874
	.word	.L1875
	.word	.L1876
	.word	.L1877
	.word	.L1888
	.word	.L1878
	.word	.L1880
	.word	.L1879
	.word	.L1883
	.word	.L1884
	.word	.L1882
	.word	.L1881
	.word	.L1888
	.word	.L1886
	.word	.L1886
	.word	.L1887
.L1871:
	ldr	r0, .L1893
	ldr	r1, .L1893+0x4
	bl	StringExpandPlaceholders
	b	.L1870
.L1894:
	.align	2, 0
.L1893:
	.word	gStringVar4
	.word	gText_PkmnCuredOfPoison
.L1872:
	ldr	r0, .L1895
	ldr	r1, .L1895+0x4
	bl	StringExpandPlaceholders
	b	.L1870
.L1896:
	.align	2, 0
.L1895:
	.word	gStringVar4
	.word	gText_PkmnWokeUp2
.L1873:
	ldr	r0, .L1897
	ldr	r1, .L1897+0x4
	bl	StringExpandPlaceholders
	b	.L1870
.L1898:
	.align	2, 0
.L1897:
	.word	gStringVar4
	.word	gText_PkmnBurnHealed
.L1874:
	ldr	r0, .L1899
	ldr	r1, .L1899+0x4
	bl	StringExpandPlaceholders
	b	.L1870
.L1900:
	.align	2, 0
.L1899:
	.word	gStringVar4
	.word	gText_PkmnThawedOut
.L1875:
	ldr	r0, .L1901
	ldr	r1, .L1901+0x4
	bl	StringExpandPlaceholders
	b	.L1870
.L1902:
	.align	2, 0
.L1901:
	.word	gStringVar4
	.word	gText_PkmnCuredOfParalysis
.L1876:
	ldr	r0, .L1903
	ldr	r1, .L1903+0x4
	bl	StringExpandPlaceholders
	b	.L1870
.L1904:
	.align	2, 0
.L1903:
	.word	gStringVar4
	.word	gText_PkmnSnappedOutOfConfusion
.L1877:
	ldr	r0, .L1905
	ldr	r1, .L1905+0x4
	bl	StringExpandPlaceholders
	b	.L1870
.L1906:
	.align	2, 0
.L1905:
	.word	gStringVar4
	.word	gText_PkmnGotOverInfatuation
.L1878:
	ldr	r0, .L1907
	ldr	r1, .L1907+0x4
	bl	StringExpandPlaceholders
	b	.L1870
.L1908:
	.align	2, 0
.L1907:
	.word	gStringVar4
	.word	gText_PkmnBecameHealthy
.L1879:
	ldr	r0, .L1909
	ldr	r1, .L1909+0x4
	b	.L1890
.L1910:
	.align	2, 0
.L1909:
	.word	gStringVar2
	.word	gText_HP3
.L1880:
	ldr	r0, .L1911
	ldr	r1, .L1911+0x4
	b	.L1890
.L1912:
	.align	2, 0
.L1911:
	.word	gStringVar2
	.word	gText_Attack3
.L1881:
	ldr	r0, .L1913
	ldr	r1, .L1913+0x4
	b	.L1890
.L1914:
	.align	2, 0
.L1913:
	.word	gStringVar2
	.word	gText_Defense3
.L1882:
	ldr	r0, .L1915
	ldr	r1, .L1915+0x4
	b	.L1890
.L1916:
	.align	2, 0
.L1915:
	.word	gStringVar2
	.word	gText_Speed2
.L1883:
	ldr	r0, .L1917
	ldr	r1, .L1917+0x4
	b	.L1890
.L1918:
	.align	2, 0
.L1917:
	.word	gStringVar2
	.word	gText_SpAtk3
.L1884:
	ldr	r0, .L1919
	ldr	r1, .L1919+0x4
.L1890:
	bl	StringCopy
	ldr	r0, .L1919+0x8
	ldr	r1, .L1919+0xc
	bl	StringExpandPlaceholders
	b	.L1870
.L1920:
	.align	2, 0
.L1919:
	.word	gStringVar2
	.word	gText_SpDef3
	.word	gStringVar4
	.word	gText_PkmnBaseVar2StatIncreased
.L1886:
	ldr	r0, .L1921
	ldr	r1, .L1921+0x4
	bl	StringExpandPlaceholders
	b	.L1870
.L1922:
	.align	2, 0
.L1921:
	.word	gStringVar4
	.word	gText_MovesPPIncreased
.L1887:
	ldr	r0, .L1923
	ldr	r1, .L1923+0x4
	bl	StringExpandPlaceholders
	b	.L1870
.L1924:
	.align	2, 0
.L1923:
	.word	gStringVar4
	.word	gText_PPWasRestored
.L1888:
	ldr	r0, .L1925
	ldr	r1, .L1925+0x4
	bl	StringExpandPlaceholders
.L1870:
	pop	{r0}
	bx	r0
.L1926:
	.align	2, 0
.L1925:
	.word	gStringVar4
	.word	gText_WontHaveEffect
.Lfe220:
	.size	 GetMedicineItemEffectMessage,.Lfe220-GetMedicineItemEffectMessage
	.align	2, 0
	.type	 UsingHPEVItemOnShedinja,function
	.thumb_func
UsingHPEVItemOnShedinja:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r0, r1, #0x10
	lsr	r0, r0, #0x10
	bl	GetItemEffectType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xd
	bne	.L1928	@cond_branch
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	ldr	r1, .L1930
	cmp	r0, r1
	bne	.L1928	@cond_branch
	mov	r0, #0x0
	b	.L1929
.L1931:
	.align	2, 0
.L1930:
	.word	0x12f
.L1928:
	mov	r0, #0x1
.L1929:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe221:
	.size	 UsingHPEVItemOnShedinja,.Lfe221-UsingHPEVItemOnShedinja
	.align	2, 0
	.type	 IsItemFlute,function
	.thumb_func
IsItemFlute:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x27
	beq	.L1934	@cond_branch
	cmp	r0, #0x29
	beq	.L1934	@cond_branch
	cmp	r0, #0x28
	bne	.L1933	@cond_branch
.L1934:
	mov	r0, #0x1
	b	.L1935
.L1933:
	mov	r0, #0x0
.L1935:
	pop	{r1}
	bx	r1
.Lfe222:
	.size	 IsItemFlute,.Lfe222-IsItemFlute
	.align	2, 0
	.type	 ExecuteTableBasedItemEffect__,function
	.thumb_func
ExecuteTableBasedItemEffect__:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldr	r0, .L1942
	ldr	r1, .L1942+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1937	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r3
	ldr	r1, .L1942+0x8
	add	r0, r0, r1
	add	r1, r5, #0
	add	r2, r3, #0
	b	.L1941
.L1943:
	.align	2, 0
.L1942:
	.word	gMain
	.word	0x439
	.word	gPlayerParty
.L1937:
	mov	r0, #0x64
	mov	r4, r3
	mul	r4, r4, r0
	ldr	r0, .L1944
	add	r4, r4, r0
	add	r0, r3, #0
	bl	sub_81B8F38
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
.L1941:
	add	r3, r6, #0
	bl	ExecuteTableBasedItemEffect
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L1945:
	.align	2, 0
.L1944:
	.word	gPlayerParty
.Lfe223:
	.size	 ExecuteTableBasedItemEffect__,.Lfe223-ExecuteTableBasedItemEffect__
	.align	2, 0
	.globl	ItemUseCB_Medicine
	.type	 ItemUseCB_Medicine,function
	.thumb_func
ItemUseCB_Medicine:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	str	r1, [sp, #0x4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	mov	r0, #0x0
	mov	sl, r0
	ldr	r0, .L1961
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L1961+0x4
	add	r5, r1, r0
	ldr	r0, .L1961+0x8
	ldrh	r6, [r0]
	add	r0, r5, #0
	add	r1, r6, #0
	bl	UsingHPEVItemOnShedinja
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1951	@cond_branch
	add	r0, r6, #0
	bl	IsHPRecoveryItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	cmp	r0, #0x1
	bne	.L1948	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x39
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	sl, r0
	add	r0, r5, #0
	mov	r1, #0x3a
	bl	GetMonData
	cmp	sl, r0
	bne	.L1948	@cond_branch
	mov	r1, #0x0
	mov	r8, r1
.L1948:
	ldr	r4, .L1961
	ldrb	r0, [r4, #0x9]
	add	r1, r6, #0
	mov	r2, #0x0
	bl	ExecuteTableBasedItemEffect__
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1952	@cond_branch
.L1951:
	ldr	r1, .L1961+0xc
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L1961+0x10
	b	.L1960
.L1962:
	.align	2, 0
.L1961:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gSpecialVar_ItemId
	.word	gUnknown_0203CEE8
	.word	gText_WontHaveEffect
.L1952:
	ldr	r1, .L1963
	mov	r0, #0x1
	strb	r0, [r1]
	add	r0, r6, #0
	bl	IsItemFlute
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1953	@cond_branch
	mov	r0, #0x1
	bl	PlaySE
	ldrb	r0, [r4, #0xb]
	cmp	r0, #0xe
	beq	.L1955	@cond_branch
	add	r0, r6, #0
	mov	r1, #0x1
	bl	RemoveBagItem
	b	.L1955
.L1964:
	.align	2, 0
.L1963:
	.word	gUnknown_0203CEE8
.L1953:
	mov	r0, #0x75
	bl	PlaySE
.L1955:
	ldr	r4, .L1965
	ldr	r7, .L1965+0x4
	mov	r0, #0x9
	ldrsb	r0, [r7, r0]
	lsl	r0, r0, #0x4
	ldr	r1, [r4]
	add	r1, r1, r0
	add	r0, r5, #0
	bl	party_menu_get_status_condition_and_update_object
	ldr	r2, .L1965+0x8
	mov	r0, #0x9
	ldrsb	r0, [r7, r0]
	ldr	r1, [r4]
	lsl	r0, r0, #0x4
	add	r3, r0, r1
	ldrb	r1, [r3, #0xc]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1d
	cmp	r0, #0
	bge	.L1956	@cond_branch
	add	r0, r5, #0
	add	r1, r3, #0
	mov	r2, #0x1
	bl	DisplayPartyPokemonLevelCheck
.L1956:
	mov	r2, r8
	cmp	r2, #0x1
	bne	.L1957	@cond_branch
	mov	r0, sl
	cmp	r0, #0
	bne	.L1958	@cond_branch
	ldrb	r0, [r7, #0x9]
	mov	r1, #0x1
	bl	sub_81B0FCC
.L1958:
	add	r0, r5, #0
	mov	r1, #0x39
	bl	GetMonData
	add	r3, r0, #0
	mov	r1, sl
	sub	r3, r3, r1
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	ldrb	r1, [r7, #0x9]
	ldr	r0, .L1965+0xc
	str	r0, [sp]
	mov	r0, r9
	mov	r2, #0x1
	bl	sub_81B1F18
	mov	r0, r9
	mov	r1, #0x0
	mov	r2, sl
	bl	sub_81B1FA8
	b	.L1946
.L1966:
	.align	2, 0
.L1965:
	.word	gUnknown_0203CEDC
	.word	gUnknown_0203CEC8
	.word	gSprites
	.word	sub_81B672C
.L1957:
	ldr	r1, .L1967
	add	r0, r5, #0
	bl	GetMonNickname
	add	r0, r6, #0
	bl	GetMedicineItemEffectMessage
	ldr	r0, .L1967+0x4
.L1960:
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r1, .L1967+0x8
	mov	r2, r9
	lsl	r0, r2, #0x2
	add	r0, r0, r9
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, [sp, #0x4]
	str	r1, [r0]
.L1946:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1968:
	.align	2, 0
.L1967:
	.word	gStringVar1
	.word	gStringVar4
	.word	gTasks
.Lfe224:
	.size	 ItemUseCB_Medicine,.Lfe224-ItemUseCB_Medicine
	.align	2, 0
	.type	 sub_81B672C,function
	.thumb_func
sub_81B672C:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L1970
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1970+0x4
	add	r0, r0, r1
	ldr	r1, .L1970+0x8
	bl	GetMonNickname
	ldr	r4, .L1970+0xc
	ldr	r1, .L1970+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x0
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	bl	HandleBattleLowHpMusicChange
	ldr	r1, .L1970+0x14
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1970+0x18
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1971:
	.align	2, 0
.L1970:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_PkmnHPRestoredByVar2
	.word	gTasks
	.word	sub_81B6794
.Lfe225:
	.size	 sub_81B672C,.Lfe225-sub_81B672C
	.align	2, 0
	.type	 sub_81B6794,function
	.thumb_func
sub_81B6794:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1973	@cond_branch
	ldr	r0, .L1975
	ldrb	r1, [r0]
	cmp	r1, #0
	bne	.L1974	@cond_branch
	ldr	r0, .L1975+0x4
	ldr	r0, [r0]
	str	r1, [r0, #0x4]
.L1974:
	add	r0, r4, #0
	bl	sub_81B12C0
.L1973:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1976:
	.align	2, 0
.L1975:
	.word	gUnknown_0203CEE8
	.word	gUnknown_0203CEC4
.Lfe226:
	.size	 sub_81B6794,.Lfe226-sub_81B6794
	.align	2, 0
	.globl	sub_81B67C8
	.type	 sub_81B67C8,function
	.thumb_func
sub_81B67C8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	str	r1, [sp]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	ldr	r4, .L1986
	mov	r1, #0x9
	ldrsb	r1, [r4, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L1986+0x4
	add	r5, r1, r0
	ldr	r0, .L1986+0x8
	ldrh	r6, [r0]
	add	r0, r6, #0
	bl	GetItemEffectType
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	add	r0, r5, #0
	mov	r1, #0x20
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x4]
	add	r0, r5, #0
	add	r1, r7, #0
	bl	ItemEffectToMonEv
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x8]
	ldrb	r0, [r4, #0x9]
	add	r1, r6, #0
	mov	r2, #0x0
	bl	ExecuteTableBasedItemEffect__
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x20
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	add	r0, r5, #0
	add	r1, r7, #0
	bl	ItemEffectToMonEv
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	cmp	r4, #0
	bne	.L1979	@cond_branch
	ldr	r0, [sp, #0x4]
	cmp	r0, r9
	bne	.L1978	@cond_branch
	ldr	r1, [sp, #0x8]
	cmp	r1, r8
	bne	.L1978	@cond_branch
.L1979:
	ldr	r1, .L1986+0xc
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L1986+0x10
	b	.L1985
.L1987:
	.align	2, 0
.L1986:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gSpecialVar_ItemId
	.word	gUnknown_0203CEE8
	.word	gText_WontHaveEffect
.L1978:
	ldr	r1, .L1988
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x1
	bl	PlaySE
	add	r0, r6, #0
	mov	r1, #0x1
	bl	RemoveBagItem
	ldr	r1, .L1988+0x4
	add	r0, r5, #0
	bl	GetMonNickname
	ldr	r1, .L1988+0x8
	add	r0, r7, #0
	bl	ItemEffectToStatString
	ldr	r2, [sp, #0x4]
	cmp	r2, r9
	beq	.L1981	@cond_branch
	ldr	r0, [sp, #0x8]
	cmp	r0, r8
	beq	.L1982	@cond_branch
	ldr	r0, .L1988+0xc
	ldr	r1, .L1988+0x10
	bl	StringExpandPlaceholders
	b	.L1984
.L1989:
	.align	2, 0
.L1988:
	.word	gUnknown_0203CEE8
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_PkmnFriendlyBaseVar2Fell
.L1982:
	ldr	r0, .L1990
	ldr	r1, .L1990+0x4
	bl	StringExpandPlaceholders
	b	.L1984
.L1991:
	.align	2, 0
.L1990:
	.word	gStringVar4
	.word	gText_PkmnFriendlyBaseVar2CantFall
.L1981:
	ldr	r0, .L1992
	ldr	r1, .L1992+0x4
	bl	StringExpandPlaceholders
.L1984:
	ldr	r0, .L1992
.L1985:
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r1, .L1992+0x8
	mov	r2, sl
	lsl	r0, r2, #0x2
	add	r0, r0, sl
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, [sp]
	str	r1, [r0]
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1993:
	.align	2, 0
.L1992:
	.word	gStringVar4
	.word	gText_PkmnAdoresBaseVar2Fell
	.word	gTasks
.Lfe227:
	.size	 sub_81B67C8,.Lfe227-sub_81B67C8
	.align	2, 0
	.type	 ItemEffectToMonEv,function
	.thumb_func
ItemEffectToMonEv:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r1, #0
	sub	r0, r0, #0xc
	cmp	r0, #0x5
	bhi	.L1995	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L2007
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2008:
	.align	2, 0
.L2007:
	.word	.L2003
	.align	2, 0
	.align	2, 0
.L2003:
	.word	.L1998
	.word	.L1996
	.word	.L2001
	.word	.L2002
	.word	.L2000
	.word	.L1999
.L1996:
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	ldr	r1, .L2009
	cmp	r0, r1
	beq	.L1995	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1a
	b	.L2006
.L2010:
	.align	2, 0
.L2009:
	.word	0x12f
.L1998:
	add	r0, r4, #0
	mov	r1, #0x1b
	b	.L2006
.L1999:
	add	r0, r4, #0
	mov	r1, #0x1c
	b	.L2006
.L2000:
	add	r0, r4, #0
	mov	r1, #0x1d
	b	.L2006
.L2001:
	add	r0, r4, #0
	mov	r1, #0x1e
	b	.L2006
.L2002:
	add	r0, r4, #0
	mov	r1, #0x1f
.L2006:
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L2005
.L1995:
	mov	r0, #0x0
.L2005:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe228:
	.size	 ItemEffectToMonEv,.Lfe228-ItemEffectToMonEv
	.align	2, 0
	.type	 ItemEffectToStatString,function
	.thumb_func
ItemEffectToStatString:
	push	{lr}
	add	r2, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0xc
	cmp	r0, #0x5
	bhi	.L2012	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L2022
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2023:
	.align	2, 0
.L2022:
	.word	.L2019
	.align	2, 0
	.align	2, 0
.L2019:
	.word	.L2014
	.word	.L2013
	.word	.L2017
	.word	.L2018
	.word	.L2016
	.word	.L2015
.L2013:
	ldr	r1, .L2024
	b	.L2021
.L2025:
	.align	2, 0
.L2024:
	.word	gText_HP3
.L2014:
	ldr	r1, .L2026
	b	.L2021
.L2027:
	.align	2, 0
.L2026:
	.word	gText_Attack3
.L2015:
	ldr	r1, .L2028
	b	.L2021
.L2029:
	.align	2, 0
.L2028:
	.word	gText_Defense3
.L2016:
	ldr	r1, .L2030
	b	.L2021
.L2031:
	.align	2, 0
.L2030:
	.word	gText_Speed2
.L2017:
	ldr	r1, .L2032
.L2021:
	add	r0, r2, #0
	bl	StringCopy
	b	.L2012
.L2033:
	.align	2, 0
.L2032:
	.word	gText_SpAtk3
.L2018:
	ldr	r1, .L2034
	add	r0, r2, #0
	bl	StringCopy
.L2012:
	pop	{r0}
	bx	r0
.L2035:
	.align	2, 0
.L2034:
	.word	gText_SpDef3
.Lfe229:
	.size	 ItemEffectToStatString,.Lfe229-ItemEffectToStatString
	.align	2, 0
	.type	 sub_81B6A10,function
	.thumb_func
sub_81B6A10:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r7, #0x0
	mov	r0, #0x1
	mov	sl, r0
	mov	r0, #0x3
	bl	sub_81B31B0
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r5, #0x0
	mov	r0, #0x64
	mov	r1, r4
	mul	r1, r1, r0
	mov	r8, r1
	ldr	r0, .L2043
	mov	r9, r0
.L2040:
	add	r1, r5, #0
	add	r1, r1, #0xd
	mov	r0, r8
	add	r0, r0, r9
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r0, #0xd
	mov	r2, r4
	mul	r2, r2, r0
	ldr	r0, .L2043+0x4
	add	r2, r2, r0
	lsl	r0, r5, #0x4
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	add	r0, r6, #0
	mov	r1, sl
	mov	r3, #0x8
	bl	AddTextPrinterParameterized
	cmp	r4, #0
	beq	.L2039	@cond_branch
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
.L2039:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L2040	@cond_branch
	add	r0, r6, #0
	add	r1, r7, #0
	mov	r2, #0x0
	bl	InitMenuInUpperLeftCornerPlaySoundWhenAPressed
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2044:
	.align	2, 0
.L2043:
	.word	gPlayerParty
	.word	gMoveNames
.Lfe230:
	.size	 sub_81B6A10,.Lfe230-sub_81B6A10
	.align	2, 0
	.type	 ether_effect_related_3,function
	.thumb_func
ether_effect_related_3:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	Menu_ProcessInput
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r1, r0
	beq	.L2046	@cond_branch
	add	r0, r0, #0x1
	cmp	r1, r0
	bne	.L2047	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_81B6BB4
	b	.L2046
.L2047:
	ldr	r0, .L2049
	ldr	r0, [r0]
	add	r0, r0, #0xd
	bl	sub_81B302C
	add	r0, r5, #0
	bl	ether_effect_related_2
.L2046:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2050:
	.align	2, 0
.L2049:
	.word	gUnknown_0203CEC4
.Lfe231:
	.size	 ether_effect_related_3,.Lfe231-ether_effect_related_3
	.align	2, 0
	.globl	dp05_ether
	.type	 dp05_ether,function
	.thumb_func
dp05_ether:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L2056
	ldrh	r0, [r0]
	cmp	r0, #0xaf
	bne	.L2052	@cond_branch
	ldr	r0, .L2056+0x4
	ldr	r0, [r0]
	ldr	r1, .L2056+0x8
	add	r0, r0, r1
	b	.L2053
.L2057:
	.align	2, 0
.L2056:
	.word	gSpecialVar_ItemId
	.word	gSaveBlock1Ptr
	.word	0x3214
.L2052:
	ldr	r1, .L2058
	sub	r0, r0, #0xd
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
.L2053:
	ldrb	r1, [r0, #0x4]
	mov	r0, #0x10
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L2054	@cond_branch
	ldr	r0, .L2058+0x4
	strh	r1, [r0, #0xe]
	add	r0, r4, #0
	bl	ether_effect_related
	b	.L2055
.L2059:
	.align	2, 0
.L2058:
	.word	gItemEffectTable
	.word	gUnknown_0203CEC8
.L2054:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x16
	bl	display_pokemon_menu_message
	ldr	r0, .L2060
	ldrb	r0, [r0, #0x9]
	bl	sub_81B6A10
	ldr	r1, .L2060+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2060+0x8
	str	r1, [r0]
.L2055:
	pop	{r4}
	pop	{r0}
	bx	r0
.L2061:
	.align	2, 0
.L2060:
	.word	gUnknown_0203CEC8
	.word	gTasks
	.word	ether_effect_related_3
.Lfe232:
	.size	 dp05_ether,.Lfe232-dp05_ether
	.align	2, 0
	.type	 ether_effect_related_2,function
	.thumb_func
ether_effect_related_2:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L2063
	ldr	r0, [r0]
	add	r0, r0, #0xc
	bl	sub_81B302C
	bl	Menu_GetCursorPos
	ldr	r1, .L2063+0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0xe]
	add	r0, r4, #0
	bl	ether_effect_related
	pop	{r4}
	pop	{r0}
	bx	r0
.L2064:
	.align	2, 0
.L2063:
	.word	gUnknown_0203CEC4
	.word	gUnknown_0203CEC8
.Lfe233:
	.size	 ether_effect_related_2,.Lfe233-ether_effect_related_2
	.align	2, 0
	.type	 sub_81B6BB4,function
	.thumb_func
sub_81B6BB4:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L2066
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r0, .L2066+0x4
	str	r0, [r1]
	ldr	r0, .L2066+0x8
	ldr	r0, [r0]
	mov	r1, #0x0
	str	r1, [r0, #0x4]
	add	r0, r0, #0xc
	bl	sub_81B302C
	mov	r0, #0x5
	bl	display_pokemon_menu_message
	pop	{r0}
	bx	r0
.L2067:
	.align	2, 0
.L2066:
	.word	gTasks
	.word	sub_81B1370
	.word	gUnknown_0203CEC4
.Lfe234:
	.size	 sub_81B6BB4,.Lfe234-sub_81B6BB4
	.align	2, 0
	.type	 ether_effect_related,function
	.thumb_func
ether_effect_related:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r4, #0x0
	ldr	r7, .L2072
	ldr	r0, .L2072+0x4
	ldrh	r5, [r0]
	mov	r0, #0xe
	neg	r0, r0
	add	r0, r0, r7
	mov	r8, r0
	ldrb	r0, [r0, #0x9]
	ldrb	r2, [r7]
	add	r1, r5, #0
	bl	ExecuteTableBasedItemEffect__
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2069	@cond_branch
	ldr	r0, .L2072+0x8
	strb	r4, [r0]
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L2072+0xc
	b	.L2071
.L2073:
	.align	2, 0
.L2072:
	.word	gUnknown_0203CEC8+0xe
	.word	gSpecialVar_ItemId
	.word	gUnknown_0203CEE8
	.word	gText_WontHaveEffect
.L2069:
	ldr	r1, .L2074
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r0, r8
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mov	r4, r1
	mul	r4, r4, r0
	ldr	r0, .L2074+0x4
	add	r4, r4, r0
	mov	r0, #0x1
	bl	PlaySE
	add	r0, r5, #0
	mov	r1, #0x1
	bl	RemoveBagItem
	mov	r0, #0x0
	ldrsh	r1, [r7, r0]
	add	r1, r1, #0xd
	add	r0, r4, #0
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L2074+0x8
	mov	r1, #0xd
	mul	r1, r1, r4
	ldr	r2, .L2074+0xc
	add	r1, r1, r2
	bl	StringCopy
	add	r0, r5, #0
	bl	GetMedicineItemEffectMessage
	ldr	r0, .L2074+0x10
.L2071:
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r1, .L2074+0x14
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2074+0x18
	str	r1, [r0]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2075:
	.align	2, 0
.L2074:
	.word	gUnknown_0203CEE8
	.word	gPlayerParty
	.word	gStringVar1
	.word	gMoveNames
	.word	gStringVar4
	.word	gTasks
	.word	sub_81B6794
.Lfe235:
	.size	 ether_effect_related,.Lfe235-ether_effect_related
	.align	2, 0
	.globl	dp05_pp_up
	.type	 dp05_pp_up,function
	.thumb_func
dp05_pp_up:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x17
	bl	display_pokemon_menu_message
	ldr	r0, .L2077
	ldrb	r0, [r0, #0x9]
	bl	sub_81B6A10
	ldr	r1, .L2077+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2077+0x8
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L2078:
	.align	2, 0
.L2077:
	.word	gUnknown_0203CEC8
	.word	gTasks
	.word	ether_effect_related_3
.Lfe236:
	.size	 dp05_pp_up,.Lfe236-dp05_pp_up
	.align	2, 0
	.globl	ItemIdToBattleMoveId
	.type	 ItemIdToBattleMoveId,function
	.thumb_func
ItemIdToBattleMoveId:
	lsl	r0, r0, #0x10
	ldr	r1, .L2080
	add	r0, r0, r1
	ldr	r1, .L2080+0x4
	lsr	r0, r0, #0xf
	add	r0, r0, r1
	ldrh	r0, [r0]
	bx	lr
.L2081:
	.align	2, 0
.L2080:
	.word	-0x1210000
	.word	gTMHMMoves
.Lfe237:
	.size	 ItemIdToBattleMoveId,.Lfe237-ItemIdToBattleMoveId
	.align	2, 0
	.globl	IsMoveHm
	.type	 IsMoveHm,function
	.thumb_func
IsMoveHm:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	mov	r1, #0x0
	ldr	r3, .L2090
.L2086:
	add	r0, r1, #0
	add	r0, r0, #0x32
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	ldrh	r0, [r0]
	cmp	r0, r2
	bne	.L2085	@cond_branch
	mov	r0, #0x1
	b	.L2089
.L2091:
	.align	2, 0
.L2090:
	.word	gTMHMMoves
.L2085:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x7
	bls	.L2086	@cond_branch
	mov	r0, #0x0
.L2089:
	pop	{r1}
	bx	r1
.Lfe238:
	.size	 IsMoveHm,.Lfe238-IsMoveHm
	.align	2, 0
	.globl	MonKnowsMove
	.type	 MonKnowsMove,function
	.thumb_func
MonKnowsMove:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	mov	r4, #0x0
.L2096:
	add	r1, r4, #0
	add	r1, r1, #0xd
	add	r0, r6, #0
	bl	GetMonData
	cmp	r0, r5
	bne	.L2095	@cond_branch
	mov	r0, #0x1
	b	.L2099
.L2095:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L2096	@cond_branch
	mov	r0, #0x0
.L2099:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe239:
	.size	 MonKnowsMove,.Lfe239-MonKnowsMove
	.align	2, 0
	.type	 sub_81B6D74,function
	.thumb_func
sub_81B6D74:
	push	{r4, lr}
	add	r1, r0, #0
	ldr	r4, .L2101
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	pop	{r4}
	pop	{r0}
	bx	r0
.L2102:
	.align	2, 0
.L2101:
	.word	gStringVar4
.Lfe240:
	.size	 sub_81B6D74,.Lfe240-sub_81B6D74
	.align	2, 0
	.type	 sub_81B6D98,function
	.thumb_func
sub_81B6D98:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	sub_81B6D74
	ldr	r1, .L2104
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2104+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L2105:
	.align	2, 0
.L2104:
	.word	gTasks
	.word	sub_81B6794
.Lfe241:
	.size	 sub_81B6D98,.Lfe241-sub_81B6D98
	.align	2, 0
	.globl	sub_81B6DC4
	.type	 sub_81B6DC4,function
	.thumb_func
sub_81B6DC4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r7, .L2116
	mov	r1, #0x9
	ldrsb	r1, [r7, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L2116+0x4
	add	r5, r1, r0
	mov	r0, #0xe
	add	r0, r0, r7
	mov	r8, r0
	ldr	r0, .L2116+0x8
	ldrh	r4, [r0]
	ldr	r1, .L2116+0xc
	add	r0, r5, #0
	bl	GetMonNickname
	add	r0, r4, #0
	bl	ItemIdToBattleMoveId
	strh	r0, [r7, #0xe]
	ldr	r0, .L2116+0x10
	mov	r1, #0xe
	ldrsh	r2, [r7, r1]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L2116+0x14
	add	r1, r1, r2
	bl	StringCopy
	mov	r0, #0x0
	mov	r1, r8
	strh	r0, [r1, #0x2]
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, #0x0
	bl	CanMonLearnTMTutor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L2108	@cond_branch
	cmp	r0, #0x2
	beq	.L2109	@cond_branch
	ldrh	r1, [r7, #0xe]
	add	r0, r5, #0
	bl	GiveMoveToMon
	lsl	r0, r0, #0x10
	ldr	r1, .L2116+0x18
	cmp	r0, r1
	beq	.L2112	@cond_branch
	ldr	r0, .L2116+0x1c
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2116+0x20
	str	r0, [r1]
	b	.L2106
.L2117:
	.align	2, 0
.L2116:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gSpecialVar_ItemId
	.word	gStringVar1
	.word	gStringVar2
	.word	gMoveNames
	.word	-0x10000
	.word	gTasks
	.word	sub_81B6EB4
.L2108:
	ldr	r1, .L2118
	b	.L2115
.L2119:
	.align	2, 0
.L2118:
	.word	gText_PkmnCantLearnMove
.L2109:
	ldr	r1, .L2120
.L2115:
	add	r0, r6, #0
	bl	sub_81B6D98
	b	.L2106
.L2121:
	.align	2, 0
.L2120:
	.word	gText_PkmnAlreadyKnows
.L2112:
	ldr	r0, .L2122
	bl	sub_81B6D74
	ldr	r1, .L2122+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2122+0x8
	str	r1, [r0]
.L2106:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2123:
	.align	2, 0
.L2122:
	.word	gText_PkmnNeedsToReplaceMove
	.word	gTasks
	.word	sub_81B6FF4
.Lfe242:
	.size	 sub_81B6DC4,.Lfe242-sub_81B6DC4
	.align	2, 0
	.type	 sub_81B6EB4,function
	.thumb_func
sub_81B6EB4:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r2, .L2127
	mov	r1, #0x9
	ldrsb	r1, [r2, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L2127+0x4
	add	r5, r1, r0
	add	r6, r2, #0
	add	r6, r6, #0xe
	ldr	r0, .L2127+0x8
	ldrh	r4, [r0]
	mov	r1, #0x2
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L2125	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x4
	bl	AdjustFriendship
	mov	r0, #0xa9
	lsl	r0, r0, #0x1
	cmp	r4, r0
	bhi	.L2125	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1
	bl	RemoveBagItem
.L2125:
	ldr	r1, .L2127+0xc
	add	r0, r5, #0
	bl	GetMonNickname
	ldr	r0, .L2127+0x10
	mov	r1, #0x0
	ldrsh	r2, [r6, r1]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L2127+0x14
	add	r1, r1, r2
	bl	StringCopy
	ldr	r4, .L2127+0x18
	ldr	r1, .L2127+0x1c
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r1, .L2127+0x20
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2127+0x24
	str	r1, [r0]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2128:
	.align	2, 0
.L2127:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gSpecialVar_ItemId
	.word	gStringVar1
	.word	gStringVar2
	.word	gMoveNames
	.word	gStringVar4
	.word	gText_PkmnLearnedMove3
	.word	gTasks
	.word	sub_81B6F60
.Lfe243:
	.size	 sub_81B6EB4,.Lfe243-sub_81B6EB4
	.align	2, 0
	.type	 sub_81B6F60,function
	.thumb_func
sub_81B6F60:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L2130	@cond_branch
	ldr	r0, .L2131
	bl	PlayFanfare
	ldr	r1, .L2131+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2131+0x8
	str	r1, [r0]
.L2130:
	pop	{r4}
	pop	{r0}
	bx	r0
.L2132:
	.align	2, 0
.L2131:
	.word	0x16f
	.word	gTasks
	.word	sub_81B6F98
.Lfe244:
	.size	 sub_81B6F60,.Lfe244-sub_81B6F60
	.align	2, 0
	.type	 sub_81B6F98,function
	.thumb_func
sub_81B6F98:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	IsFanfareTaskInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2134	@cond_branch
	ldr	r0, .L2139
	ldrh	r1, [r0, #0x2e]
	mov	r2, #0x1
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2135	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2134	@cond_branch
.L2135:
	ldr	r0, .L2139+0x4
	mov	r1, #0x10
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x1
	bne	.L2136	@cond_branch
	add	r0, r4, #0
	bl	sub_81B77AC
	b	.L2134
.L2140:
	.align	2, 0
.L2139:
	.word	gMain
	.word	gUnknown_0203CEC8
.L2136:
	cmp	r0, #0x2
	bne	.L2138	@cond_branch
	ldr	r0, .L2141
	strh	r2, [r0]
.L2138:
	add	r0, r5, #0
	bl	sub_81B12C0
.L2134:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2142:
	.align	2, 0
.L2141:
	.word	gSpecialVar_Result
.Lfe245:
	.size	 sub_81B6F98,.Lfe245-sub_81B6F98
	.align	2, 0
	.type	 sub_81B6FF4,function
	.thumb_func
sub_81B6FF4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L2144	@cond_branch
	bl	sub_81B334C
	ldr	r0, .L2145
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2145+0x4
	str	r0, [r1]
.L2144:
	pop	{r4}
	pop	{r0}
	bx	r0
.L2146:
	.align	2, 0
.L2145:
	.word	gTasks
	.word	sub_81B7028
.Lfe246:
	.size	 sub_81B6FF4,.Lfe246-sub_81B6FF4
	.align	2, 0
	.type	 sub_81B7028,function
	.thumb_func
sub_81B7028:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L2149	@cond_branch
	cmp	r1, #0
	bgt	.L2154	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L2150	@cond_branch
	b	.L2148
.L2154:
	cmp	r1, #0x1
	beq	.L2151	@cond_branch
	b	.L2148
.L2149:
	ldr	r0, .L2155
	mov	r1, #0x1
	bl	sub_81B1B5C
	ldr	r1, .L2155+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2155+0x8
	str	r1, [r0]
	b	.L2148
.L2156:
	.align	2, 0
.L2155:
	.word	gText_WhichMoveToForget
	.word	gTasks
	.word	sub_81B7088
.L2150:
	mov	r0, #0x5
	bl	PlaySE
.L2151:
	add	r0, r4, #0
	bl	sub_81B7230
.L2148:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe247:
	.size	 sub_81B7028,.Lfe247-sub_81B7028
	.align	2, 0
	.type	 sub_81B7088,function
	.thumb_func
sub_81B7088:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L2158	@cond_branch
	ldr	r0, .L2159
	ldr	r1, [r0]
	ldr	r0, .L2159+0x4
	str	r0, [r1, #0x4]
	add	r0, r4, #0
	bl	sub_81B12C0
.L2158:
	pop	{r4}
	pop	{r0}
	bx	r0
.L2160:
	.align	2, 0
.L2159:
	.word	gUnknown_0203CEC4
	.word	sub_81B70B8
.Lfe248:
	.size	 sub_81B7088,.Lfe248-sub_81B7088
	.align	2, 0
	.type	 sub_81B70B8,function
	.thumb_func
sub_81B70B8:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L2162
	ldr	r4, .L2162+0x4
	ldrb	r1, [r4, #0x9]
	ldr	r2, .L2162+0x8
	ldrb	r2, [r2]
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r3, .L2162+0xc
	ldrh	r4, [r4, #0xe]
	str	r4, [sp]
	bl	ShowSelectMovePokemonSummaryScreen
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L2163:
	.align	2, 0
.L2162:
	.word	gPlayerParty
	.word	gUnknown_0203CEC8
	.word	gPlayerPartyCount
	.word	sub_81B70F0
.Lfe249:
	.size	 sub_81B70B8,.Lfe249-sub_81B70B8
	.align	2, 0
	.type	 sub_81B70F0,function
	.thumb_func
sub_81B70F0:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x7f
	str	r0, [sp]
	ldr	r0, .L2165
	str	r0, [sp, #0x4]
	ldr	r0, .L2165+0x4
	ldr	r0, [r0]
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	InitPartyMenu
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L2166:
	.align	2, 0
.L2165:
	.word	sub_81B711C
	.word	gUnknown_0203CEC8
.Lfe250:
	.size	 sub_81B70F0,.Lfe250-sub_81B70F0
	.align	2, 0
	.type	 sub_81B711C,function
	.thumb_func
sub_81B711C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	ldr	r0, .L2171
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2168	@cond_branch
	bl	sub_81C1B94
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	beq	.L2169	@cond_branch
	add	r0, r4, #0
	bl	sub_81B7154
	b	.L2168
.L2172:
	.align	2, 0
.L2171:
	.word	gPaletteFade
.L2169:
	add	r0, r5, #0
	bl	sub_81B7230
.L2168:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe251:
	.size	 sub_81B711C,.Lfe251-sub_81B711C
	.align	2, 0
	.type	 sub_81B7154,function
	.thumb_func
sub_81B7154:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	ldr	r0, .L2174
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mov	r5, r1
	mul	r5, r5, r0
	ldr	r0, .L2174+0x4
	add	r5, r5, r0
	bl	sub_81C1B94
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r1, r1, #0xd
	add	r0, r5, #0
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r1, .L2174+0x8
	add	r0, r5, #0
	bl	GetMonNickname
	ldr	r0, .L2174+0xc
	mov	r1, #0xd
	mul	r1, r1, r4
	ldr	r2, .L2174+0x10
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2174+0x14
	bl	sub_81B6D74
	ldr	r1, .L2174+0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2174+0x1c
	str	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2175:
	.align	2, 0
.L2174:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar2
	.word	gMoveNames
	.word	gText_12PoofForgotMove
	.word	gTasks
	.word	sub_81B71D4
.Lfe252:
	.size	 sub_81B7154,.Lfe252-sub_81B7154
	.align	2, 0
	.type	 sub_81B71D4,function
	.thumb_func
sub_81B71D4:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L2177	@cond_branch
	ldr	r5, .L2178
	mov	r1, #0x9
	ldrsb	r1, [r5, r1]
	mov	r0, #0x64
	mov	r4, r1
	mul	r4, r4, r0
	ldr	r0, .L2178+0x4
	add	r4, r4, r0
	bl	sub_81C1B94
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	RemoveMonPPBonus
	ldrh	r5, [r5, #0xe]
	bl	sub_81C1B94
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	SetMonMoveSlot
	add	r0, r6, #0
	bl	sub_81B6EB4
.L2177:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2179:
	.align	2, 0
.L2178:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
.Lfe253:
	.size	 sub_81B71D4,.Lfe253-sub_81B71D4
	.align	2, 0
	.type	 sub_81B7230,function
	.thumb_func
sub_81B7230:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L2181
	ldr	r1, .L2181+0x4
	mov	r3, #0xe
	ldrsh	r2, [r1, r3]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L2181+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r4, .L2181+0xc
	ldr	r1, .L2181+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r1, .L2181+0x14
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2181+0x18
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2182:
	.align	2, 0
.L2181:
	.word	gStringVar2
	.word	gUnknown_0203CEC8
	.word	gMoveNames
	.word	gStringVar4
	.word	gText_StopLearningMove2
	.word	gTasks
	.word	sub_81B7294
.Lfe254:
	.size	 sub_81B7230,.Lfe254-sub_81B7230
	.align	2, 0
	.type	 sub_81B7294,function
	.thumb_func
sub_81B7294:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L2184	@cond_branch
	bl	sub_81B334C
	ldr	r0, .L2185
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2185+0x4
	str	r0, [r1]
.L2184:
	pop	{r4}
	pop	{r0}
	bx	r0
.L2186:
	.align	2, 0
.L2185:
	.word	gTasks
	.word	sub_81B72C8
.Lfe255:
	.size	 sub_81B7294,.Lfe255-sub_81B7294
	.align	2, 0
	.type	 sub_81B72C8,function
	.thumb_func
sub_81B72C8:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r7, .L2198
	mov	r1, #0x9
	ldrsb	r1, [r7, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L2198+0x4
	add	r4, r1, r0
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r5, r0, #0x18
	cmp	r5, #0
	beq	.L2189	@cond_branch
	cmp	r5, #0
	bgt	.L2197	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	beq	.L2193	@cond_branch
	b	.L2188
.L2199:
	.align	2, 0
.L2198:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
.L2197:
	cmp	r5, #0x1
	beq	.L2194	@cond_branch
	b	.L2188
.L2189:
	ldr	r1, .L2200
	add	r0, r4, #0
	bl	GetMonNickname
	ldr	r0, .L2200+0x4
	mov	r1, #0xe
	ldrsh	r2, [r7, r1]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L2200+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r4, .L2200+0xc
	ldr	r1, .L2200+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r3, #0x10
	ldrsh	r0, [r7, r3]
	cmp	r0, #0x1
	bne	.L2190	@cond_branch
	ldr	r0, .L2200+0x14
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2200+0x18
	str	r0, [r1]
	b	.L2188
.L2201:
	.align	2, 0
.L2200:
	.word	gStringVar1
	.word	gStringVar2
	.word	gMoveNames
	.word	gStringVar4
	.word	gText_MoveNotLearned
	.word	gTasks
	.word	sub_81B73E4
.L2190:
	cmp	r0, #0x2
	bne	.L2192	@cond_branch
	ldr	r0, .L2202
	strh	r5, [r0]
.L2192:
	ldr	r0, .L2202+0x4
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2202+0x8
	str	r0, [r1]
	b	.L2188
.L2203:
	.align	2, 0
.L2202:
	.word	gSpecialVar_Result
	.word	gTasks
	.word	sub_81B6794
.L2193:
	mov	r0, #0x5
	bl	PlaySE
.L2194:
	ldr	r1, .L2204
	add	r0, r4, #0
	bl	GetMonNickname
	ldr	r0, .L2204+0x4
	ldr	r1, .L2204+0x8
	mov	r3, #0xe
	ldrsh	r2, [r1, r3]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L2204+0xc
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2204+0x10
	bl	sub_81B6D74
	ldr	r1, .L2204+0x14
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2204+0x18
	str	r1, [r0]
.L2188:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2205:
	.align	2, 0
.L2204:
	.word	gStringVar1
	.word	gStringVar2
	.word	gUnknown_0203CEC8
	.word	gMoveNames
	.word	gText_PkmnNeedsToReplaceMove
	.word	gTasks
	.word	sub_81B6FF4
.Lfe256:
	.size	 sub_81B72C8,.Lfe256-sub_81B72C8
	.align	2, 0
	.type	 sub_81B73E4,function
	.thumb_func
sub_81B73E4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L2207	@cond_branch
	add	r0, r4, #0
	bl	sub_81B77AC
.L2207:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe257:
	.size	 sub_81B73E4,.Lfe257-sub_81B73E4
	.align	2, 0
	.globl	dp05_rare_candy
	.type	 dp05_rare_candy,function
	.thumb_func
dp05_rare_candy:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	sl, r1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L2214
	mov	r9, r0
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L2214+0x4
	add	r5, r1, r0
	ldr	r0, .L2214+0x8
	ldr	r6, [r0]
	mov	r1, #0x86
	lsl	r1, r1, #0x2
	add	r4, r6, r1
	ldr	r2, .L2214+0xc
	mov	r8, r2
	add	r0, r5, #0
	mov	r1, #0x38
	bl	GetMonData
	cmp	r0, #0x64
	beq	.L2209	@cond_branch
	add	r0, r5, #0
	add	r1, r4, #0
	bl	sub_81B79A0
	mov	r1, r9
	ldrb	r0, [r1, #0x9]
	mov	r2, r8
	ldrh	r1, [r2]
	mov	r2, #0x0
	bl	ExecuteTableBasedItemEffect__
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x89
	lsl	r0, r0, #0x2
	add	r1, r6, r0
	add	r0, r5, #0
	bl	sub_81B79A0
	b	.L2210
.L2215:
	.align	2, 0
.L2214:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gUnknown_0203CEC4
	.word	gSpecialVar_ItemId
.L2209:
	mov	r4, #0x1
.L2210:
	mov	r0, #0x5
	bl	PlaySE
	cmp	r4, #0
	beq	.L2211	@cond_branch
	ldr	r1, .L2216
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L2216+0x4
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r1, .L2216+0x8
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, sl
	b	.L2213
.L2217:
	.align	2, 0
.L2216:
	.word	gUnknown_0203CEE8
	.word	gText_WontHaveEffect
	.word	gTasks
.L2211:
	ldr	r1, .L2218
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
	bl	PlayFanfareByFanfareNum
	ldr	r0, .L2218+0x4
	ldrb	r0, [r0, #0x9]
	add	r1, r5, #0
	bl	sub_81B754C
	ldr	r0, .L2218+0x8
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	RemoveBagItem
	ldr	r1, .L2218+0xc
	add	r0, r5, #0
	bl	GetMonNickname
	ldr	r4, .L2218+0x10
	add	r0, r5, #0
	mov	r1, #0x38
	bl	GetMonData
	add	r1, r0, #0
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L2218+0x14
	ldr	r1, .L2218+0x18
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r1, .L2218+0x1c
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2218+0x20
.L2213:
	str	r1, [r0]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2219:
	.align	2, 0
.L2218:
	.word	gUnknown_0203CEE8
	.word	gUnknown_0203CEC8
	.word	gSpecialVar_ItemId
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_PkmnElevatedToLvVar2
	.word	gTasks
	.word	sub_81B75D4
.Lfe258:
	.size	 dp05_rare_candy,.Lfe258-dp05_rare_candy
	.align	2, 0
	.type	 sub_81B754C,function
	.thumb_func
sub_81B754C:
	push	{r4, r5, r6, r7, lr}
	add	r5, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r7, r0, #0
	ldr	r6, .L2222
	lsl	r4, r7, #0x4
	ldr	r1, [r6]
	add	r1, r1, r4
	add	r0, r5, #0
	bl	party_menu_get_status_condition_and_update_object
	ldr	r2, .L2222+0x4
	ldr	r0, [r6]
	add	r3, r4, r0
	ldrb	r1, [r3, #0xc]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1d
	cmp	r0, #0
	bge	.L2221	@cond_branch
	add	r0, r5, #0
	add	r1, r3, #0
	mov	r2, #0x1
	bl	DisplayPartyPokemonLevelCheck
.L2221:
	ldr	r1, [r6]
	add	r1, r1, r4
	add	r0, r5, #0
	mov	r2, #0x1
	bl	DisplayPartyPokemonHPCheck
	ldr	r1, [r6]
	add	r1, r1, r4
	add	r0, r5, #0
	mov	r2, #0x1
	bl	DisplayPartyPokemonMaxHPCheck
	ldr	r1, [r6]
	add	r1, r1, r4
	add	r0, r5, #0
	bl	DisplayPartyPokemonHPBarCheck
	ldr	r0, [r6]
	add	r0, r4, r0
	ldrb	r0, [r0, #0x9]
	add	r1, r5, #0
	bl	sub_81B5B38
	add	r0, r7, #0
	mov	r1, #0x1
	bl	sub_81B0FCC
	mov	r0, #0x0
	bl	schedule_bg_copy_tilemap_to_vram
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2223:
	.align	2, 0
.L2222:
	.word	gUnknown_0203CEDC
	.word	gSprites
.Lfe259:
	.size	 sub_81B754C,.Lfe259-sub_81B754C
	.align	2, 0
	.type	 sub_81B75D4,function
	.thumb_func
sub_81B75D4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x0
	bl	WaitFanfare
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2225	@cond_branch
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L2225	@cond_branch
	ldr	r0, .L2227
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2226	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2225	@cond_branch
.L2226:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_81B767C
	ldr	r0, .L2227+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2227+0x8
	str	r0, [r1]
.L2225:
	pop	{r4}
	pop	{r0}
	bx	r0
.L2228:
	.align	2, 0
.L2227:
	.word	gMain
	.word	gTasks
	.word	sub_81B7634
.Lfe260:
	.size	 sub_81B75D4,.Lfe260-sub_81B75D4
	.align	2, 0
	.type	 sub_81B7634,function
	.thumb_func
sub_81B7634:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L2232
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2231	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2230	@cond_branch
.L2231:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_81B76C8
	ldr	r0, .L2232+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2232+0x8
	str	r0, [r1]
.L2230:
	pop	{r4}
	pop	{r0}
	bx	r0
.L2233:
	.align	2, 0
.L2232:
	.word	gMain
	.word	gTasks
	.word	sub_81B7704
.Lfe261:
	.size	 sub_81B7634,.Lfe261-sub_81B7634
	.align	2, 0
	.type	 sub_81B767C,function
	.thumb_func
sub_81B767C:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L2235
	ldr	r5, [r0]
	mov	r0, #0x86
	lsl	r0, r0, #0x2
	add	r4, r5, r0
	bl	sub_81B3364
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x18]
	ldrh	r0, [r4, #0x18]
	mov	r1, #0x89
	lsl	r1, r1, #0x2
	add	r2, r5, r1
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0x3
	str	r1, [sp, #0x4]
	add	r1, r4, #0
	mov	r3, #0x1
	bl	DrawLevelUpWindowPg1
	ldrb	r0, [r4, #0x18]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2236:
	.align	2, 0
.L2235:
	.word	gUnknown_0203CEC4
.Lfe262:
	.size	 sub_81B767C,.Lfe262-sub_81B767C
	.align	2, 0
	.type	 sub_81B76C8,function
	.thumb_func
sub_81B76C8:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L2238
	ldr	r1, [r0]
	mov	r0, #0x86
	lsl	r0, r0, #0x2
	add	r4, r1, r0
	ldrh	r0, [r4, #0x18]
	mov	r2, #0x89
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	mov	r2, #0x3
	str	r2, [sp]
	mov	r2, #0x1
	mov	r3, #0x2
	bl	DrawLevelUpWindowPg2
	ldrb	r0, [r4, #0x18]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L2239:
	.align	2, 0
.L2238:
	.word	gUnknown_0203CEC4
.Lfe263:
	.size	 sub_81B76C8,.Lfe263-sub_81B76C8
	.align	2, 0
	.type	 sub_81B7704,function
	.thumb_func
sub_81B7704:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, #0x0
	bl	WaitFanfare
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2241	@cond_branch
	ldr	r0, .L2250
	ldrh	r1, [r0, #0x2e]
	mov	r6, #0x1
	add	r0, r6, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2242	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2241	@cond_branch
.L2242:
	bl	sub_81B3394
	ldr	r4, .L2250+0x4
	mov	r1, #0x9
	ldrsb	r1, [r4, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L2250+0x8
	add	r0, r0, r1
	mov	r1, #0x1
	bl	MonTryLearningNewMove
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	strh	r6, [r4, #0x10]
	ldr	r0, .L2250+0xc
	cmp	r1, r0
	beq	.L2246	@cond_branch
	cmp	r1, r0
	bgt	.L2249	@cond_branch
	cmp	r1, #0
	beq	.L2244	@cond_branch
	b	.L2247
.L2251:
	.align	2, 0
.L2250:
	.word	gMain
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	0xfffe
.L2249:
	ldr	r0, .L2252
	cmp	r1, r0
	beq	.L2245	@cond_branch
	b	.L2247
.L2253:
	.align	2, 0
.L2252:
	.word	0xffff
.L2244:
	add	r0, r5, #0
	bl	sub_81B7810
	b	.L2241
.L2245:
	add	r0, r5, #0
	bl	sub_81B787C
	b	.L2241
.L2246:
	ldr	r0, .L2254
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2254+0x4
	str	r0, [r1]
	b	.L2241
.L2255:
	.align	2, 0
.L2254:
	.word	gTasks
	.word	sub_81B77AC
.L2247:
	add	r0, r5, #0
	bl	sub_81B7910
.L2241:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe264:
	.size	 sub_81B7704,.Lfe264-sub_81B7704
	.align	2, 0
	.type	 sub_81B77AC,function
	.thumb_func
sub_81B77AC:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L2264
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L2264+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	bl	MonTryLearningNewMove
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, .L2264+0x8
	cmp	r1, r0
	beq	.L2256	@cond_branch
	cmp	r1, r0
	bgt	.L2263	@cond_branch
	cmp	r1, #0
	beq	.L2258	@cond_branch
	b	.L2261
.L2265:
	.align	2, 0
.L2264:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	0xfffe
.L2263:
	ldr	r0, .L2266
	cmp	r1, r0
	beq	.L2259	@cond_branch
	b	.L2261
.L2267:
	.align	2, 0
.L2266:
	.word	0xffff
.L2258:
	add	r0, r4, #0
	bl	sub_81B7810
	b	.L2256
.L2259:
	add	r0, r4, #0
	bl	sub_81B787C
	b	.L2256
.L2261:
	add	r0, r4, #0
	bl	sub_81B7910
.L2256:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe265:
	.size	 sub_81B77AC,.Lfe265-sub_81B77AC
	.align	2, 0
	.type	 sub_81B7810,function
	.thumb_func
sub_81B7810:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r6, .L2271
	mov	r1, #0x9
	ldrsb	r1, [r6, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L2271+0x4
	add	r7, r1, r0
	add	r0, r7, #0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetEvolutionTargetSpecies
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0
	beq	.L2269	@cond_branch
	bl	FreePartyPointers
	ldr	r0, .L2271+0x8
	ldr	r1, [r6]
	str	r1, [r0]
	ldrb	r3, [r6, #0x9]
	add	r0, r7, #0
	add	r1, r4, #0
	mov	r2, #0x1
	bl	BeginEvolutionScene
	add	r0, r5, #0
	bl	DestroyTask
	b	.L2270
.L2272:
	.align	2, 0
.L2271:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gCB2_AfterEvolution
.L2269:
	ldr	r0, .L2273
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2273+0x4
	str	r0, [r1]
.L2270:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2274:
	.align	2, 0
.L2273:
	.word	gTasks
	.word	sub_81B6794
.Lfe266:
	.size	 sub_81B7810,.Lfe266-sub_81B7810
	.align	2, 0
	.type	 sub_81B787C,function
	.thumb_func
sub_81B787C:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L2276
	mov	r8, r0
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L2276+0x4
	add	r0, r0, r1
	ldr	r1, .L2276+0x8
	bl	GetMonNickname
	ldr	r0, .L2276+0xc
	ldr	r6, .L2276+0x10
	ldrh	r2, [r6]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L2276+0x14
	add	r1, r1, r2
	bl	StringCopy
	ldr	r4, .L2276+0x18
	ldr	r1, .L2276+0x1c
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldrh	r0, [r6]
	mov	r1, r8
	strh	r0, [r1, #0xe]
	ldr	r1, .L2276+0x20
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2276+0x24
	str	r1, [r0]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2277:
	.align	2, 0
.L2276:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar2
	.word	gMoveToLearn
	.word	gMoveNames
	.word	gStringVar4
	.word	gText_PkmnNeedsToReplaceMove
	.word	gTasks
	.word	sub_81B6FF4
.Lfe267:
	.size	 sub_81B787C,.Lfe267-sub_81B787C
	.align	2, 0
	.type	 sub_81B7910,function
	.thumb_func
sub_81B7910:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r6, r0, #0
	add	r5, r1, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r0, .L2279
	mov	r8, r0
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L2279+0x4
	add	r0, r0, r1
	ldr	r1, .L2279+0x8
	bl	GetMonNickname
	ldr	r0, .L2279+0xc
	mov	r1, #0xd
	mul	r1, r1, r5
	ldr	r2, .L2279+0x10
	add	r1, r1, r2
	bl	StringCopy
	ldr	r4, .L2279+0x14
	ldr	r1, .L2279+0x18
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	mov	r0, r8
	strh	r5, [r0, #0xe]
	ldr	r1, .L2279+0x1c
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2279+0x20
	str	r1, [r0]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2280:
	.align	2, 0
.L2279:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar2
	.word	gMoveNames
	.word	gStringVar4
	.word	gText_PkmnLearnedMove3
	.word	gTasks
	.word	sub_81B6F60
.Lfe268:
	.size	 sub_81B7910,.Lfe268-sub_81B7910
	.align	2, 0
	.type	 sub_81B79A0,function
	.thumb_func
sub_81B79A0:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	mov	r1, #0x3a
	bl	GetMonData
	strh	r0, [r5]
	add	r0, r4, #0
	mov	r1, #0x3b
	bl	GetMonData
	strh	r0, [r5, #0x2]
	add	r0, r4, #0
	mov	r1, #0x3c
	bl	GetMonData
	strh	r0, [r5, #0x4]
	add	r0, r4, #0
	mov	r1, #0x3e
	bl	GetMonData
	strh	r0, [r5, #0x8]
	add	r0, r4, #0
	mov	r1, #0x3f
	bl	GetMonData
	strh	r0, [r5, #0xa]
	add	r0, r4, #0
	mov	r1, #0x3d
	bl	GetMonData
	strh	r0, [r5, #0x6]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe269:
	.size	 sub_81B79A0,.Lfe269-sub_81B79A0
	.align	2, 0
	.globl	sub_81B79E8
	.type	 sub_81B79E8,function
	.thumb_func
sub_81B79E8:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L2283
	ldr	r2, [r1]
	mov	r3, #0x86
	lsl	r3, r3, #0x2
	add	r1, r2, r3
	mov	r3, #0x0
	strh	r3, [r1]
	ldr	r4, .L2283+0x4
	add	r1, r2, r4
	strh	r3, [r1]
	ldr	r1, .L2283+0x8
	ldrb	r1, [r1, #0x9]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	mov	r3, #0x87
	lsl	r3, r3, #0x2
	add	r2, r2, r3
	strh	r1, [r2]
	bl	sub_81B7A28
	pop	{r4}
	pop	{r0}
	bx	r0
.L2284:
	.align	2, 0
.L2283:
	.word	gUnknown_0203CEC4
	.word	0x21a
	.word	gUnknown_0203CEC8
.Lfe270:
	.size	 sub_81B79E8,.Lfe270-sub_81B79E8
	.align	2, 0
	.type	 sub_81B7A28,function
	.thumb_func
sub_81B7A28:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r8, r4
	ldr	r6, .L2290
	mov	r1, #0x9
	ldrsb	r1, [r6, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L2290+0x4
	add	r5, r1, r0
	add	r0, r5, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L2289	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x39
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	ldrb	r0, [r6, #0x9]
	ldr	r1, .L2290+0x8
	ldrh	r1, [r1]
	mov	r2, #0x0
	bl	ExecuteTableBasedItemEffect__
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2287	@cond_branch
.L2289:
	ldr	r0, .L2290+0xc
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2290+0x10
	str	r0, [r1]
	b	.L2285
.L2291:
	.align	2, 0
.L2290:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gSpecialVar_ItemId
	.word	gTasks
	.word	task_sacred_ash_party_loop
.L2287:
	mov	r0, #0x1
	bl	PlaySE
	ldr	r4, .L2292
	mov	r0, #0x9
	ldrsb	r0, [r6, r0]
	lsl	r0, r0, #0x4
	ldr	r1, [r4]
	add	r1, r1, r0
	add	r0, r5, #0
	bl	party_menu_get_status_condition_and_update_object
	ldr	r2, .L2292+0x4
	mov	r0, #0x9
	ldrsb	r0, [r6, r0]
	ldr	r1, [r4]
	lsl	r0, r0, #0x4
	add	r3, r0, r1
	ldrb	r1, [r3, #0xc]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1d
	cmp	r0, #0
	bge	.L2288	@cond_branch
	add	r0, r5, #0
	add	r1, r3, #0
	mov	r2, #0x1
	bl	DisplayPartyPokemonLevelCheck
.L2288:
	ldr	r4, .L2292+0x8
	ldr	r0, [r4]
	mov	r1, #0x87
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	sub_81B0FCC
	ldrb	r0, [r6, #0x9]
	mov	r1, #0x1
	bl	sub_81B0FCC
	add	r0, r5, #0
	mov	r1, #0x39
	bl	GetMonData
	add	r3, r0, #0
	sub	r3, r3, r7
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	ldrb	r1, [r6, #0x9]
	ldr	r0, .L2292+0xc
	str	r0, [sp]
	mov	r0, r8
	mov	r2, #0x1
	bl	sub_81B1F18
	mov	r0, r8
	mov	r1, #0x0
	add	r2, r7, #0
	bl	sub_81B1FA8
	ldr	r0, [r4]
	mov	r2, #0x86
	lsl	r2, r2, #0x2
	add	r1, r0, r2
	mov	r2, #0x1
	strh	r2, [r1]
	ldr	r1, .L2292+0x10
	add	r0, r0, r1
	strh	r2, [r0]
.L2285:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2293:
	.align	2, 0
.L2292:
	.word	gUnknown_0203CEDC
	.word	gSprites
	.word	gUnknown_0203CEC4
	.word	sub_81B7C10
	.word	0x21a
.Lfe271:
	.size	 sub_81B7A28,.Lfe271-sub_81B7A28
	.align	2, 0
	.type	 task_sacred_ash_party_loop,function
	.thumb_func
task_sacred_ash_party_loop:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L2295	@cond_branch
	ldr	r5, .L2301
	ldr	r2, [r5]
	mov	r0, #0x86
	lsl	r0, r0, #0x2
	add	r1, r2, r0
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	ldr	r3, .L2301+0x4
	cmp	r0, #0x1
	bne	.L2296	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r1, #0x9
	ldrsb	r1, [r3, r1]
	mov	r6, #0x87
	lsl	r6, r6, #0x2
	add	r0, r2, r6
	strh	r1, [r0]
.L2296:
	ldrb	r0, [r3, #0x9]
	add	r0, r0, #0x1
	strb	r0, [r3, #0x9]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x6
	bne	.L2297	@cond_branch
	ldr	r0, [r5]
	ldr	r1, .L2301+0x8
	add	r0, r0, r1
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	cmp	r1, #0
	bne	.L2298	@cond_branch
	ldr	r0, .L2301+0xc
	strb	r1, [r0]
	ldr	r0, .L2301+0x10
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	b	.L2299
.L2302:
	.align	2, 0
.L2301:
	.word	gUnknown_0203CEC4
	.word	gUnknown_0203CEC8
	.word	0x21a
	.word	gUnknown_0203CEE8
	.word	gText_WontHaveEffect
.L2298:
	ldr	r1, .L2303
	mov	r0, #0x1
	strb	r0, [r1]
	ldr	r0, .L2303+0x4
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	RemoveBagItem
.L2299:
	ldr	r1, .L2303+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2303+0xc
	str	r1, [r0]
	ldr	r1, .L2303+0x10
	mov	r0, #0x0
	strb	r0, [r1, #0x9]
	b	.L2295
.L2304:
	.align	2, 0
.L2303:
	.word	gUnknown_0203CEE8
	.word	gSpecialVar_ItemId
	.word	gTasks
	.word	sub_81B6794
	.word	gUnknown_0203CEC8
.L2297:
	add	r0, r4, #0
	bl	sub_81B7A28
.L2295:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe272:
	.size	 task_sacred_ash_party_loop,.Lfe272-task_sacred_ash_party_loop
	.align	2, 0
	.type	 sub_81B7C10,function
	.thumb_func
sub_81B7C10:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L2306
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L2306+0x4
	add	r0, r0, r1
	ldr	r1, .L2306+0x8
	bl	GetMonNickname
	ldr	r4, .L2306+0xc
	ldr	r1, .L2306+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x0
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r1, .L2306+0x14
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2306+0x18
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2307:
	.align	2, 0
.L2306:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_PkmnHPRestoredByVar2
	.word	gTasks
	.word	task_sacred_ash_party_loop
.Lfe273:
	.size	 sub_81B7C10,.Lfe273-sub_81B7C10
	.align	2, 0
	.globl	sub_81B7C74
	.type	 sub_81B7C74,function
	.thumb_func
sub_81B7C74:
	push	{r4, r5, r6, lr}
	add	r6, r1, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r2, .L2311
	ldr	r1, .L2311+0x4
	ldr	r0, [r1]
	str	r0, [r2]
	ldrb	r0, [r1, #0x9]
	ldr	r4, .L2311+0x8
	ldrh	r1, [r4]
	mov	r2, #0x0
	bl	ExecuteTableBasedItemEffect__
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2309	@cond_branch
	ldr	r1, .L2311+0xc
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L2311+0x10
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r1, .L2311+0x14
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	str	r6, [r0]
	b	.L2310
.L2312:
	.align	2, 0
.L2311:
	.word	gCB2_AfterEvolution
	.word	gUnknown_0203CEC8
	.word	gSpecialVar_ItemId
	.word	gUnknown_0203CEE8
	.word	gText_WontHaveEffect
	.word	gTasks
.L2309:
	ldrh	r0, [r4]
	mov	r1, #0x1
	bl	RemoveBagItem
	bl	FreePartyPointers
.L2310:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe274:
	.size	 sub_81B7C74,.Lfe274-sub_81B7C74
	.align	2, 0
	.globl	GetItemEffectType
	.type	 GetItemEffectType,function
	.thumb_func
GetItemEffectType:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	add	r2, r1, #0
	sub	r2, r2, #0xd
	lsl	r0, r2, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xa5
	bls	.LCB21171
	b	.L2362	@long jump
.LCB21171:
	cmp	r1, #0xaf
	bne	.L2315	@cond_branch
	ldr	r0, .L2363
	ldr	r0, [r0]
	ldr	r1, .L2363+0x4
	add	r4, r0, r1
	b	.L2316
.L2364:
	.align	2, 0
.L2363:
	.word	gSaveBlock1Ptr
	.word	0x3214
.L2315:
	ldr	r1, .L2365
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r4, [r0]
.L2316:
	ldrb	r1, [r4]
	mov	r5, #0x3f
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2318	@cond_branch
	ldrb	r0, [r4, #0x1]
	cmp	r0, #0
	bne	.L2318	@cond_branch
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0
	bne	.L2318	@cond_branch
	ldrb	r3, [r4, #0x3]
	mov	r0, #0x80
	and	r0, r0, r3
	cmp	r0, #0
	beq	.L2317	@cond_branch
.L2318:
	mov	r0, #0x0
	b	.L2361
.L2366:
	.align	2, 0
.L2365:
	.word	gItemEffectTable
.L2317:
	mov	r2, #0x40
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2320	@cond_branch
	mov	r0, #0xa
	b	.L2361
.L2320:
	add	r0, r2, #0
	and	r0, r0, r3
	cmp	r0, #0
	beq	.L2319	@cond_branch
	mov	r0, #0x1
	b	.L2361
.L2319:
	add	r2, r5, #0
	and	r2, r2, r3
	cmp	r2, #0
	bne	.L2324	@cond_branch
	lsr	r0, r1, #0x7
	cmp	r0, #0
	beq	.L2323	@cond_branch
.L2324:
	cmp	r2, #0x20
	bne	.L2325	@cond_branch
	mov	r0, #0x4
	b	.L2361
.L2325:
	cmp	r2, #0x10
	bne	.L2327	@cond_branch
	mov	r0, #0x3
	b	.L2361
.L2327:
	cmp	r2, #0x8
	bne	.L2329	@cond_branch
	mov	r0, #0x5
	b	.L2361
.L2329:
	cmp	r2, #0x4
	bne	.L2331	@cond_branch
	mov	r0, #0x6
	b	.L2361
.L2331:
	cmp	r2, #0x2
	bne	.L2333	@cond_branch
	mov	r0, #0x7
	b	.L2361
.L2333:
	cmp	r2, #0x1
	bne	.L2335	@cond_branch
	mov	r0, #0x8
	b	.L2361
.L2335:
	lsr	r0, r1, #0x7
	cmp	r0, #0
	beq	.L2337	@cond_branch
	cmp	r2, #0
	bne	.L2337	@cond_branch
	mov	r0, #0x9
	b	.L2361
.L2337:
	mov	r0, #0xb
	b	.L2361
.L2323:
	ldrb	r1, [r4, #0x4]
	mov	r0, #0x44
	and	r0, r0, r1
	add	r2, r1, #0
	cmp	r0, #0
	beq	.L2339	@cond_branch
	mov	r0, #0x2
	b	.L2361
.L2339:
	mov	r5, #0x2
	add	r0, r5, #0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L2341	@cond_branch
	mov	r0, #0xc
	b	.L2361
.L2341:
	mov	r3, #0x1
	add	r0, r3, #0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L2343	@cond_branch
	mov	r0, #0xd
	b	.L2361
.L2343:
	ldrb	r1, [r4, #0x5]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2345	@cond_branch
	mov	r0, #0xe
	b	.L2361
.L2345:
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2347	@cond_branch
	mov	r0, #0xf
	b	.L2361
.L2347:
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2349	@cond_branch
	mov	r0, #0x10
	b	.L2361
.L2349:
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2351	@cond_branch
	mov	r0, #0x11
	b	.L2361
.L2351:
	mov	r0, #0x80
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L2353	@cond_branch
	mov	r0, #0x12
	b	.L2361
.L2353:
	mov	r0, #0x20
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L2355	@cond_branch
	mov	r0, #0x13
	b	.L2361
.L2355:
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2357	@cond_branch
	mov	r0, #0x14
	b	.L2361
.L2357:
	mov	r0, #0x18
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L2359	@cond_branch
.L2362:
	mov	r0, #0x16
	b	.L2361
.L2359:
	mov	r0, #0x15
.L2361:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe275:
	.size	 GetItemEffectType,.Lfe275-GetItemEffectType
	.align	2, 0
	.type	 sub_81B7E4C,function
	.thumb_func
sub_81B7E4C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L2377
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2367	@cond_branch
	ldr	r7, .L2377+0x4
	mov	r1, #0x9
	ldrsb	r1, [r7, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L2377+0x8
	add	r5, r1, r0
	mov	r0, #0xe
	add	r0, r0, r7
	mov	r8, r0
	ldr	r1, .L2377+0xc
	add	r0, r5, #0
	bl	GetMonNickname
	ldr	r4, .L2377+0x10
	ldrb	r0, [r4]
	bl	GetTutorMove
	strh	r0, [r7, #0xe]
	ldr	r0, .L2377+0x14
	mov	r1, #0xe
	ldrsh	r2, [r7, r1]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L2377+0x18
	add	r1, r1, r2
	bl	StringCopy
	mov	r0, #0x2
	mov	r1, r8
	strh	r0, [r1, #0x2]
	ldrb	r2, [r4]
	add	r0, r5, #0
	mov	r1, #0x0
	bl	CanMonLearnTMTutor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L2370	@cond_branch
	cmp	r0, #0x2
	beq	.L2371	@cond_branch
	ldrh	r1, [r7, #0xe]
	add	r0, r5, #0
	bl	GiveMoveToMon
	lsl	r0, r0, #0x10
	ldr	r1, .L2377+0x1c
	cmp	r0, r1
	beq	.L2369	@cond_branch
	add	r0, r6, #0
	bl	sub_81B6EB4
	b	.L2367
.L2378:
	.align	2, 0
.L2377:
	.word	gPaletteFade
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gStringVar1
	.word	gSpecialVar_0x8005
	.word	gStringVar2
	.word	gMoveNames
	.word	-0x10000
.L2370:
	ldr	r1, .L2379
	b	.L2376
.L2380:
	.align	2, 0
.L2379:
	.word	gText_PkmnCantLearnMove
.L2371:
	ldr	r1, .L2381
.L2376:
	add	r0, r6, #0
	bl	sub_81B6D98
	b	.L2367
.L2382:
	.align	2, 0
.L2381:
	.word	gText_PkmnAlreadyKnows
.L2369:
	ldr	r0, .L2383
	bl	sub_81B6D74
	ldr	r1, .L2383+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2383+0x8
	str	r1, [r0]
.L2367:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2384:
	.align	2, 0
.L2383:
	.word	gText_PkmnNeedsToReplaceMove
	.word	gTasks
	.word	sub_81B6FF4
.Lfe276:
	.size	 sub_81B7E4C,.Lfe276-sub_81B7E4C
	.align	2, 0
	.globl	CB2_PartyMenuFromStartMenu
	.type	 CB2_PartyMenuFromStartMenu,function
	.thumb_func
CB2_PartyMenuFromStartMenu:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L2386
	str	r0, [sp, #0x4]
	ldr	r0, .L2386+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	InitPartyMenu
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L2387:
	.align	2, 0
.L2386:
	.word	sub_81B1370
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe277:
	.size	 CB2_PartyMenuFromStartMenu,.Lfe277-CB2_PartyMenuFromStartMenu
	.align	2, 0
	.globl	sub_81B7F60
	.type	 sub_81B7F60,function
	.thumb_func
sub_81B7F60:
	push	{lr}
	add	sp, sp, #-0xc
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	ldr	r1, .L2391
	cmp	r0, #0
	bne	.L2389	@cond_branch
	ldr	r1, .L2391+0x4
.L2389:
	mov	r0, #0x6
	str	r0, [sp]
	ldr	r0, .L2391+0x8
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x5
	mov	r3, #0x0
	bl	InitPartyMenu
	ldr	r1, .L2391+0xc
	ldr	r0, .L2391+0x10
	ldrh	r0, [r0]
	strh	r0, [r1, #0xc]
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L2392:
	.align	2, 0
.L2391:
	.word	sub_81C4F84
	.word	c2_815ABFC
	.word	sub_81B1370
	.word	gUnknown_0203CEC8
	.word	gSpecialVar_ItemId
.Lfe278:
	.size	 sub_81B7F60,.Lfe278-sub_81B7F60
	.align	2, 0
	.type	 sub_81B7FAC,function
	.thumb_func
sub_81B7FAC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	ldr	r5, .L2398
	ldr	r0, .L2398+0x4
	mov	r9, r0
	ldrb	r0, [r0, #0x9]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	mov	r1, #0x64
	mov	r8, r1
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r7, .L2398+0x8
	add	r0, r0, r7
	mov	r1, #0xc
	bl	GetMonData
	strh	r0, [r5]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L2394	@cond_branch
	add	r0, r4, #0
	bl	sub_81B8044
	b	.L2395
.L2399:
	.align	2, 0
.L2398:
	.word	gUnknown_0203CEFC
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
.L2394:
	ldrh	r0, [r5]
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2396	@cond_branch
	add	r0, r4, #0
	bl	sub_81B83B8
	b	.L2395
.L2396:
	mov	r1, r9
	mov	r0, #0x9
	ldrsb	r0, [r1, r0]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r7
	ldrh	r1, [r5]
	mov	r2, #0x1
	bl	sub_81B1D1C
	ldr	r1, .L2400
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2400+0x4
	str	r1, [r0]
.L2395:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2401:
	.align	2, 0
.L2400:
	.word	gTasks
	.word	sub_81B82A0
.Lfe279:
	.size	 sub_81B7FAC,.Lfe279-sub_81B7FAC
	.align	2, 0
	.type	 sub_81B8044,function
	.thumb_func
sub_81B8044:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r5, .L2405
	ldrh	r0, [r5, #0xc]
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2403	@cond_branch
	ldrh	r0, [r5, #0xc]
	bl	sub_81B83F0
	ldr	r0, .L2405+0x4
	ldr	r1, [r0]
	ldr	r0, .L2405+0x8
	str	r0, [r1, #0x4]
	add	r0, r4, #0
	bl	sub_81B12C0
	b	.L2404
.L2406:
	.align	2, 0
.L2405:
	.word	gUnknown_0203CEC8
	.word	gUnknown_0203CEC4
	.word	sub_81B814C
.L2403:
	add	r0, r4, #0
	bl	sub_81B8088
.L2404:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe280:
	.size	 sub_81B8044,.Lfe280-sub_81B8044
	.align	2, 0
	.type	 sub_81B8088,function
	.thumb_func
sub_81B8088:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L2409
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2408	@cond_branch
	ldr	r4, .L2409+0x4
	ldrh	r5, [r4, #0xc]
	mov	r0, #0x9
	ldrsb	r0, [r4, r0]
	mov	r1, #0x64
	mov	r8, r1
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r6, .L2409+0x8
	add	r0, r0, r6
	add	r1, r5, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	sub_81B1C84
	mov	r0, #0x9
	ldrsb	r0, [r4, r0]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	add	r1, r5, #0
	bl	sub_81B1DB8
	add	r0, r5, #0
	bl	sub_81B83F0
	ldr	r1, .L2409+0xc
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2409+0x10
	str	r1, [r0]
.L2408:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2410:
	.align	2, 0
.L2409:
	.word	gPaletteFade
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gTasks
	.word	sub_81B8104
.Lfe281:
	.size	 sub_81B8088,.Lfe281-sub_81B8088
	.align	2, 0
	.type	 sub_81B8104,function
	.thumb_func
sub_81B8104:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L2413
	ldrb	r4, [r0, #0x9]
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L2412	@cond_branch
	lsl	r2, r4, #0x18
	asr	r2, r2, #0x18
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r1, .L2413+0x4
	add	r0, r0, r1
	ldr	r1, .L2413+0x8
	lsl	r2, r2, #0x4
	ldr	r1, [r1]
	add	r1, r1, r2
	bl	sub_81B5C94
	add	r0, r5, #0
	bl	sub_81B12C0
.L2412:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2414:
	.align	2, 0
.L2413:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gUnknown_0203CEDC
.Lfe282:
	.size	 sub_81B8104,.Lfe282-sub_81B8104
	.align	2, 0
	.type	 sub_81B814C,function
	.thumb_func
sub_81B814C:
	push	{r4, r5, r6, lr}
	ldr	r4, .L2416
	mov	r0, #0x9
	ldrsb	r0, [r4, r0]
	mov	r6, #0x64
	mul	r0, r0, r6
	ldr	r5, .L2416+0x4
	add	r0, r0, r5
	ldrh	r1, [r4, #0xc]
	bl	sub_81B1DB8
	mov	r0, #0x9
	ldrsb	r0, [r4, r0]
	mul	r0, r0, r6
	add	r0, r0, r5
	mov	r1, #0x40
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L2416+0x8
	lsl	r2, r0, #0x3
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L2416+0xc
	add	r2, r2, r0
	ldr	r1, [r1]
	add	r1, r1, r2
	ldr	r2, .L2416+0x10
	mov	r0, #0x4
	mov	r3, #0x3
	bl	DoEasyChatScreen
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2417:
	.align	2, 0
.L2416:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gSaveBlock1Ptr
	.word	0x2be0
	.word	sub_81B81A8
.Lfe283:
	.size	 sub_81B814C,.Lfe283-sub_81B814C
	.align	2, 0
	.type	 sub_81B81A8,function
	.thumb_func
sub_81B81A8:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	ldr	r6, .L2421
	mov	r1, #0x9
	ldrsb	r1, [r6, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L2421+0x4
	add	r5, r1, r0
	add	r0, r5, #0
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	ldr	r0, .L2421+0x8
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L2419	@cond_branch
	add	r0, r5, #0
	bl	TakeMailFromMon
	ldr	r4, .L2421+0xc
	add	r0, r5, #0
	mov	r1, #0xc
	add	r2, r4, #0
	bl	SetMonData
	ldrh	r0, [r4]
	mov	r1, #0x1
	bl	RemoveBagItem
	add	r0, r7, #0
	bl	sub_81B841C
	ldr	r0, [r6]
	bl	SetMainCallback2
	b	.L2420
.L2422:
	.align	2, 0
.L2421:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gSpecialVar_Result
	.word	gUnknown_0203CEFC
.L2419:
	ldrb	r0, [r6, #0x8]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	ldrb	r2, [r6, #0xb]
	mov	r1, #0x7f
	str	r1, [sp]
	ldr	r1, .L2423
	str	r1, [sp, #0x4]
	ldr	r1, [r6]
	str	r1, [sp, #0x8]
	mov	r1, #0xff
	mov	r3, #0x1
	bl	InitPartyMenu
.L2420:
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2424:
	.align	2, 0
.L2423:
	.word	sub_81B8230
.Lfe284:
	.size	 sub_81B81A8,.Lfe284-sub_81B81A8
	.align	2, 0
	.type	 sub_81B8230,function
	.thumb_func
sub_81B8230:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L2429
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2426	@cond_branch
	ldr	r1, .L2429+0x4
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L2427	@cond_branch
	ldr	r0, .L2429+0x8
	ldrh	r0, [r0, #0xc]
	ldrh	r1, [r1]
	mov	r2, #0x0
	bl	sub_81B1D68
	b	.L2428
.L2430:
	.align	2, 0
.L2429:
	.word	gPaletteFade
	.word	gUnknown_0203CEFC
	.word	gUnknown_0203CEC8
.L2427:
	ldr	r2, .L2431
	mov	r1, #0x9
	ldrsb	r1, [r2, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L2431+0x4
	add	r0, r0, r1
	ldrh	r1, [r2, #0xc]
	mov	r2, #0x0
	mov	r3, #0x1
	bl	sub_81B1C84
.L2428:
	ldr	r0, .L2431+0x8
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2431+0xc
	str	r0, [r1]
.L2426:
	pop	{r4}
	pop	{r0}
	bx	r0
.L2432:
	.align	2, 0
.L2431:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gTasks
	.word	sub_81B8104
.Lfe285:
	.size	 sub_81B8230,.Lfe285-sub_81B8230
	.align	2, 0
	.type	 sub_81B82A0,function
	.thumb_func
sub_81B82A0:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_81B1BD4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L2434	@cond_branch
	bl	sub_81B334C
	ldr	r0, .L2435
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2435+0x4
	str	r0, [r1]
.L2434:
	pop	{r4}
	pop	{r0}
	bx	r0
.L2436:
	.align	2, 0
.L2435:
	.word	gTasks
	.word	sub_81B82D4
.Lfe286:
	.size	 sub_81B82A0,.Lfe286-sub_81B82A0
	.align	2, 0
	.type	 sub_81B82D4,function
	.thumb_func
sub_81B82D4:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L2439	@cond_branch
	cmp	r1, #0
	bgt	.L2448	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L2444	@cond_branch
	b	.L2438
.L2448:
	cmp	r1, #0x1
	beq	.L2445	@cond_branch
	b	.L2438
.L2439:
	ldr	r7, .L2450
	ldrh	r4, [r7, #0xc]
	add	r0, r4, #0
	bl	sub_81B83F0
	ldr	r6, .L2450+0x4
	ldrh	r0, [r6]
	mov	r1, #0x1
	bl	AddBagItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L2440	@cond_branch
	add	r0, r4, #0
	bl	sub_81B841C
	ldrh	r0, [r6]
	bl	pokemon_item_not_removed
	ldr	r0, .L2450+0x8
	mov	r1, #0x0
	bl	sub_81B1B5C
	b	.L2449
.L2451:
	.align	2, 0
.L2450:
	.word	gUnknown_0203CEC8
	.word	gUnknown_0203CEFC
	.word	gStringVar4
.L2440:
	add	r0, r4, #0
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2442	@cond_branch
	ldr	r0, .L2452
	ldr	r1, [r0]
	ldr	r0, .L2452+0x4
	str	r0, [r1, #0x4]
	add	r0, r5, #0
	bl	sub_81B12C0
	b	.L2438
.L2453:
	.align	2, 0
.L2452:
	.word	gUnknown_0203CEC4
	.word	sub_81B814C
.L2442:
	mov	r1, #0x9
	ldrsb	r1, [r7, r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L2454
	add	r0, r0, r1
	add	r1, r4, #0
	bl	sub_81B1DB8
	ldrh	r1, [r6]
	add	r0, r4, #0
	mov	r2, #0x1
	bl	sub_81B1D68
.L2449:
	ldr	r1, .L2454+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2454+0x8
	str	r1, [r0]
	b	.L2438
.L2455:
	.align	2, 0
.L2454:
	.word	gPlayerParty
	.word	gTasks
	.word	sub_81B8104
.L2444:
	mov	r0, #0x5
	bl	PlaySE
.L2445:
	ldr	r0, .L2456
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2456+0x4
	str	r0, [r1]
.L2438:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2457:
	.align	2, 0
.L2456:
	.word	gTasks
	.word	sub_81B8104
.Lfe287:
	.size	 sub_81B82D4,.Lfe287-sub_81B82D4
	.align	2, 0
	.type	 sub_81B83B8,function
	.thumb_func
sub_81B83B8:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L2459
	mov	r1, #0x1
	bl	sub_81B1B5C
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r1, .L2459+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L2459+0x8
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L2460:
	.align	2, 0
.L2459:
	.word	gText_RemoveMailBeforeItem
	.word	gTasks
	.word	sub_81B8104
.Lfe288:
	.size	 sub_81B83B8,.Lfe288-sub_81B83B8
	.align	2, 0
	.type	 sub_81B83F0,function
	.thumb_func
sub_81B83F0:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, .L2464
	ldrb	r0, [r0, #0xb]
	cmp	r0, #0x6
	bne	.L2462	@cond_branch
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	RemovePCItem
	b	.L2463
.L2465:
	.align	2, 0
.L2464:
	.word	gUnknown_0203CEC8
.L2462:
	add	r0, r1, #0
	mov	r1, #0x1
	bl	RemoveBagItem
.L2463:
	pop	{r0}
	bx	r0
.Lfe289:
	.size	 sub_81B83F0,.Lfe289-sub_81B83F0
	.align	2, 0
	.type	 sub_81B841C,function
	.thumb_func
sub_81B841C:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, .L2472
	ldrb	r0, [r0, #0xb]
	cmp	r0, #0x5
	beq	.L2467	@cond_branch
	add	r0, r1, #0
	mov	r1, #0x1
	bl	AddPCItem
	b	.L2471
.L2473:
	.align	2, 0
.L2472:
	.word	gUnknown_0203CEC8
.L2467:
	add	r0, r1, #0
	mov	r1, #0x1
	bl	AddBagItem
.L2471:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe290:
	.size	 sub_81B841C,.Lfe290-sub_81B841C
	.align	2, 0
	.globl	sub_81B8448
	.type	 sub_81B8448,function
	.thumb_func
sub_81B8448:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x6
	str	r0, [sp]
	ldr	r0, .L2475
	str	r0, [sp, #0x4]
	ldr	r0, .L2475+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x7
	mov	r3, #0x0
	bl	InitPartyMenu
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L2476:
	.align	2, 0
.L2475:
	.word	sub_81B1370
	.word	Mailbox_ReturnToMailListAfterDeposit
.Lfe291:
	.size	 sub_81B8448,.Lfe291-sub_81B8448
	.align	2, 0
	.type	 sub_81B8474,function
	.thumb_func
sub_81B8474:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L2480
	mov	r1, #0x9
	ldrsb	r1, [r0, r1]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L2480+0x4
	add	r5, r1, r0
	ldr	r1, .L2480+0x8
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r2, .L2480+0xc
	ldr	r0, .L2480+0x10
	ldrh	r1, [r0]
	add	r1, r1, #0x6
	ldrh	r0, [r0, #0x2]
	add	r1, r1, r0
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2480+0x14
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	add	r0, r5, #0
	mov	r1, #0xc
	bl	GetMonData
	cmp	r0, #0
	beq	.L2478	@cond_branch
	ldr	r0, .L2480+0x18
	mov	r1, #0x1
	bl	sub_81B1B5C
	b	.L2479
.L2481:
	.align	2, 0
.L2480:
	.word	gUnknown_0203CEC8
	.word	gPlayerParty
	.word	gUnknown_0203CEE8
	.word	gSaveBlock1Ptr
	.word	playerPCItemPageInfo
	.word	0x2be0
	.word	gText_PkmnHoldingItemCantHoldMail
.L2478:
	add	r0, r5, #0
	add	r1, r4, #0
	bl	GiveMailToMon2
	add	r0, r4, #0
	bl	ClearMailStruct
	ldr	r0, .L2482
	mov	r1, #0x1
	bl	sub_81B1B5C
.L2479:
	mov	r0, #0x2
	bl	schedule_bg_copy_tilemap_to_vram
	ldr	r0, .L2482+0x4
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2482+0x8
	str	r0, [r1]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2483:
	.align	2, 0
.L2482:
	.word	gText_MailTransferredFromMailbox
	.word	gTasks
	.word	sub_81B8104
.Lfe292:
	.size	 sub_81B8474,.Lfe292-sub_81B8474
	.align	2, 0
	.globl	InitChooseHalfPartyForBattle
	.type	 InitChooseHalfPartyForBattle,function
	.thumb_func
InitChooseHalfPartyForBattle:
	push	{lr}
	add	sp, sp, #-0xc
	bl	sub_81B8558
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L2485
	str	r0, [sp, #0x4]
	ldr	r0, .L2485+0x4
	ldr	r0, [r0, #0x8]
	str	r0, [sp, #0x8]
	mov	r0, #0x4
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	InitPartyMenu
	ldr	r1, .L2485+0x8
	ldr	r0, .L2485+0xc
	str	r0, [r1, #0x4]
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L2486:
	.align	2, 0
.L2485:
	.word	sub_81B1370
	.word	gMain
	.word	gUnknown_0203CEC8
	.word	sub_81B879C
.Lfe293:
	.size	 InitChooseHalfPartyForBattle,.Lfe293-InitChooseHalfPartyForBattle
	.align	2, 0
	.globl	sub_81B8558
	.type	 sub_81B8558,function
	.thumb_func
sub_81B8558:
	push	{lr}
	ldr	r0, .L2488
	mov	r1, #0x0
	mov	r2, #0x4
	bl	memset
	pop	{r0}
	bx	r0
.L2489:
	.align	2, 0
.L2488:
	.word	gSelectedOrderFromParty
.Lfe294:
	.size	 sub_81B8558,.Lfe294-sub_81B8558
	.align	2, 0
	.type	 sub_81B856C,function
	.thumb_func
sub_81B856C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	asr	r4, r0, #0x18
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L2494
	add	r0, r0, r1
	bl	GetBattleEntryEligibility
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L2491	@cond_branch
	mov	r0, #0x2
	b	.L2493
.L2495:
	.align	2, 0
.L2494:
	.word	gPlayerParty
.L2491:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_81B8770
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L2492	@cond_branch
	mov	r0, #0x0
	b	.L2493
.L2492:
	mov	r0, #0x1
.L2493:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe295:
	.size	 sub_81B856C,.Lfe295-sub_81B856C
	.align	2, 0
	.type	 GetBattleEntryEligibility,function
	.thumb_func
GetBattleEntryEligibility:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r6, #0x0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	bne	.L2512	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x38
	bl	GetMonData
	add	r4, r0, #0
	bl	sub_81B8888
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bhi	.L2512	@cond_branch
	ldr	r0, .L2513
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L2513+0x4
	cmp	r1, r0
	bne	.L2497	@cond_branch
	add	r0, r5, #0
	mov	r1, #0xc
	bl	GetMonData
	cmp	r0, #0
	bne	.L2512	@cond_branch
.L2497:
	ldr	r0, .L2513+0x8
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x8
	beq	.L2505	@cond_branch
	cmp	r0, #0x9
	bne	.L2503	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	bne	.L2505	@cond_branch
.L2512:
	mov	r0, #0x0
	b	.L2511
.L2514:
	.align	2, 0
.L2513:
	.word	gSaveBlock1Ptr
	.word	0x191a
	.word	0x40cf
.L2503:
	add	r0, r5, #0
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r3, .L2515
	lsl	r1, r6, #0x1
	add	r0, r1, r3
	ldrh	r0, [r0]
	ldr	r2, .L2515+0x4
	cmp	r0, r2
	beq	.L2505	@cond_branch
.L2507:
	add	r0, r1, r3
	ldrh	r0, [r0]
	cmp	r0, r4
	beq	.L2512	@cond_branch
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsl	r1, r6, #0x1
	add	r0, r1, r3
	ldrh	r0, [r0]
	cmp	r0, r2
	bne	.L2507	@cond_branch
.L2505:
	mov	r0, #0x1
.L2511:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L2516:
	.align	2, 0
.L2515:
	.word	gFrontierBannedSpecies
	.word	0xffff
.Lfe296:
	.size	 GetBattleEntryEligibility,.Lfe296-GetBattleEntryEligibility
	.align	2, 0
	.type	 sub_81B865C,function
	.thumb_func
sub_81B865C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	bl	sub_81B885C
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r1, r2, #0
	ldr	r3, .L2537
	add	r0, r2, r3
	sub	r0, r0, #0x1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L2518	@cond_branch
	cmp	r2, #0x1
	bne	.L2519	@cond_branch
	mov	r0, #0xe
	b	.L2533
.L2538:
	.align	2, 0
.L2537:
	.word	gSelectedOrderFromParty
.L2519:
	ldr	r0, .L2539
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x11
	b	.L2533
.L2540:
	.align	2, 0
.L2539:
	.word	gStringVar1
.L2518:
	ldr	r0, .L2541
	bl	VarGet
	lsl	r0, r0, #0x18
	mov	r1, #0xf8
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L2520	@cond_branch
	b	.L2522
.L2542:
	.align	2, 0
.L2541:
	.word	0x40cf
.L2534:
	mov	r0, #0x12
	b	.L2533
.L2535:
	mov	r0, #0x13
	b	.L2533
.L2520:
	bl	sub_81B8830
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r5, #0x0
	b	.L2536
.L2524:
	ldr	r3, .L2543
	add	r4, r3, r5
	ldrb	r0, [r4]
	mov	r1, #0x64
	mul	r0, r0, r1
	sub	r0, r0, #0x64
	ldr	r3, .L2543+0x4
	add	r0, r3, r0
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	sl, r0
	ldrb	r0, [r4]
	mov	r1, #0x64
	mul	r0, r0, r1
	sub	r0, r0, #0x64
	ldr	r3, .L2543+0x4
	add	r0, r3, r0
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	add	r1, r5, #0x1
	lsl	r0, r1, #0x18
	lsr	r4, r0, #0x18
	mov	r9, r1
	cmp	r4, r8
	bcs	.L2523	@cond_branch
	mov	r7, #0x64
.L2528:
	ldr	r0, .L2543
	add	r5, r0, r4
	ldrb	r0, [r5]
	mul	r0, r0, r7
	sub	r0, r0, #0x64
	ldr	r1, .L2543+0x4
	add	r0, r1, r0
	mov	r1, #0xb
	bl	GetMonData
	cmp	sl, r0
	beq	.L2534	@cond_branch
	cmp	r6, #0
	beq	.L2527	@cond_branch
	ldrb	r0, [r5]
	mul	r0, r0, r7
	sub	r0, r0, #0x64
	ldr	r3, .L2543+0x4
	add	r0, r3, r0
	mov	r1, #0xc
	bl	GetMonData
	cmp	r6, r0
	beq	.L2535	@cond_branch
.L2527:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r8
	bcc	.L2528	@cond_branch
.L2523:
	mov	r1, r9
	lsl	r0, r1, #0x18
	lsr	r5, r0, #0x18
	mov	r0, r8
.L2536:
	sub	r0, r0, #0x1
	cmp	r5, r0
	blt	.L2524	@cond_branch
.L2522:
	mov	r0, #0xff
.L2533:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L2544:
	.align	2, 0
.L2543:
	.word	gSelectedOrderFromParty
	.word	gPlayerParty
.Lfe297:
	.size	 sub_81B865C,.Lfe297-sub_81B865C
	.align	2, 0
	.type	 sub_81B8770,function
	.thumb_func
sub_81B8770:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r1, #0x0
	ldr	r3, .L2553
.L2549:
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, r2
	bne	.L2548	@cond_branch
	mov	r0, #0x1
	b	.L2552
.L2554:
	.align	2, 0
.L2553:
	.word	gSelectedOrderFromParty
.L2548:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x3
	bls	.L2549	@cond_branch
	mov	r0, #0x0
.L2552:
	pop	{r1}
	bx	r1
.Lfe298:
	.size	 sub_81B8770,.Lfe298-sub_81B8770
	.align	2, 0
	.type	 sub_81B879C,function
	.thumb_func
sub_81B879C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	sub_81B865C
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xff
	beq	.L2556	@cond_branch
	mov	r0, #0x20
	bl	PlaySE
	add	r0, r4, #0
	bl	display_pokemon_menu_message
	ldr	r0, .L2558
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2558+0x4
	str	r0, [r1]
	b	.L2557
.L2559:
	.align	2, 0
.L2558:
	.word	gTasks
	.word	sub_81B87E8
.L2556:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	sub_81B12C0
.L2557:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe299:
	.size	 sub_81B879C,.Lfe299-sub_81B879C
	.align	2, 0
	.type	 sub_81B87E8,function
	.thumb_func
sub_81B87E8:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L2563
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2562	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2561	@cond_branch
.L2562:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	bl	display_pokemon_menu_message
	ldr	r0, .L2563+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2563+0x8
	str	r0, [r1]
.L2561:
	pop	{r4}
	pop	{r0}
	bx	r0
.L2564:
	.align	2, 0
.L2563:
	.word	gMain
	.word	gTasks
	.word	sub_81B1370
.Lfe300:
	.size	 sub_81B87E8,.Lfe300-sub_81B87E8
	.align	2, 0
	.type	 sub_81B8830,function
	.thumb_func
sub_81B8830:
	push	{lr}
	ldr	r0, .L2572
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x8
	beq	.L2568	@cond_branch
	cmp	r0, #0x9
	bne	.L2569	@cond_branch
	mov	r0, #0x3
	b	.L2571
.L2573:
	.align	2, 0
.L2572:
	.word	0x40cf
.L2568:
	mov	r0, #0x2
	b	.L2571
.L2569:
	ldr	r0, .L2574
	ldrb	r0, [r0]
.L2571:
	pop	{r1}
	bx	r1
.L2575:
	.align	2, 0
.L2574:
	.word	gSpecialVar_0x8005
.Lfe301:
	.size	 sub_81B8830,.Lfe301-sub_81B8830
	.align	2, 0
	.type	 sub_81B885C,function
	.thumb_func
sub_81B885C:
	push	{lr}
	ldr	r0, .L2583
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x8
	beq	.L2579	@cond_branch
	cmp	r0, #0x9
	bne	.L2580	@cond_branch
	mov	r0, #0x1
	b	.L2582
.L2584:
	.align	2, 0
.L2583:
	.word	0x40cf
.L2579:
	mov	r0, #0x2
	b	.L2582
.L2580:
	ldr	r0, .L2585
	ldrb	r0, [r0]
.L2582:
	pop	{r1}
	bx	r1
.L2586:
	.align	2, 0
.L2585:
	.word	gSpecialVar_0x8005
.Lfe302:
	.size	 sub_81B885C,.Lfe302-sub_81B885C
	.align	2, 0
	.type	 sub_81B8888,function
	.thumb_func
sub_81B8888:
	push	{lr}
	ldr	r0, .L2596
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x8
	beq	.L2590	@cond_branch
	cmp	r0, #0x9
	bne	.L2591	@cond_branch
.L2595:
	mov	r0, #0x64
	b	.L2594
.L2597:
	.align	2, 0
.L2596:
	.word	0x40cf
.L2590:
	mov	r0, #0x1e
	b	.L2594
.L2591:
	ldr	r0, .L2598
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L2595	@cond_branch
	mov	r0, #0x32
.L2594:
	pop	{r1}
	bx	r1
.L2599:
	.align	2, 0
.L2598:
	.word	gSpecialVar_0x8004
.Lfe303:
	.size	 sub_81B8888,.Lfe303-sub_81B8888
	.align	2, 0
	.type	 sub_81B88BC,function
	.thumb_func
sub_81B88BC:
	push	{lr}
	ldr	r0, .L2606
	bl	VarGet
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	mov	r2, #0xf8
	lsl	r2, r2, #0x18
	add	r0, r0, r2
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L2601	@cond_branch
	ldr	r0, .L2606+0x4
	b	.L2605
.L2607:
	.align	2, 0
.L2606:
	.word	0x40cf
	.word	gText_CancelBattle
.L2601:
	cmp	r1, #0x1
	bne	.L2603	@cond_branch
	ldr	r0, .L2608
	ldrh	r0, [r0]
	cmp	r0, #0x2
	bne	.L2603	@cond_branch
	ldr	r0, .L2608+0x4
	b	.L2605
.L2609:
	.align	2, 0
.L2608:
	.word	gSpecialVar_0x8005
	.word	gText_ReturnToWaitingRoom
.L2603:
	ldr	r0, .L2610
.L2605:
	pop	{r1}
	bx	r1
.L2611:
	.align	2, 0
.L2610:
	.word	gText_CancelChallenge
.Lfe304:
	.size	 sub_81B88BC,.Lfe304-sub_81B88BC
	.align	2, 0
	.globl	sub_81B8904
	.type	 sub_81B8904,function
	.thumb_func
sub_81B8904:
	push	{lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, #0x0
	str	r2, [sp]
	ldr	r2, .L2613
	str	r2, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	InitPartyMenu
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L2614:
	.align	2, 0
.L2613:
	.word	sub_81B1370
.Lfe305:
	.size	 sub_81B8904,.Lfe305-sub_81B8904
	.align	2, 0
	.globl	sub_81B892C
	.type	 sub_81B892C,function
	.thumb_func
sub_81B892C:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x4
	str	r0, [sp]
	ldr	r0, .L2616
	str	r0, [sp, #0x4]
	ldr	r0, .L2616+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0xc
	mov	r3, #0x0
	bl	InitPartyMenu
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L2617:
	.align	2, 0
.L2616:
	.word	sub_81B1370
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe306:
	.size	 sub_81B892C,.Lfe306-sub_81B892C
	.align	2, 0
	.globl	sub_81B8958
	.type	 sub_81B8958,function
	.thumb_func
sub_81B8958:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x1
	str	r0, [sp]
	ldr	r0, .L2619
	str	r0, [sp, #0x4]
	ldr	r0, .L2619+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0xb
	mov	r1, #0x0
	mov	r2, #0xd
	mov	r3, #0x0
	bl	InitPartyMenu
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L2620:
	.align	2, 0
.L2619:
	.word	sub_81B1370
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe307:
	.size	 sub_81B8958,.Lfe307-sub_81B8958
	.align	2, 0
	.type	 sub_81B8984,function
	.thumb_func
sub_81B8984:
	push	{lr}
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L2622	@cond_branch
	mov	r0, #0x0
	b	.L2624
.L2622:
	bl	IsMultiBattle
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L2623	@cond_branch
	mov	r0, #0x1
	b	.L2624
.L2623:
	mov	r0, #0x2
.L2624:
	pop	{r1}
	bx	r1
.Lfe308:
	.size	 sub_81B8984,.Lfe308-sub_81B8984
	.align	2, 0
	.globl	OpenPartyMenuInBattle
	.type	 OpenPartyMenuInBattle,function
	.thumb_func
OpenPartyMenuInBattle:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	sub_81B8984
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L2626
	str	r0, [sp, #0x4]
	ldr	r0, .L2626+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r2, r4, #0
	mov	r3, #0x0
	bl	InitPartyMenu
	bl	nullsub_35
	bl	pokemon_change_order
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L2627:
	.align	2, 0
.L2626:
	.word	sub_81B1370
	.word	SetCB2ToReshowScreenAfterMenu
.Lfe309:
	.size	 OpenPartyMenuInBattle,.Lfe309-OpenPartyMenuInBattle
	.align	2, 0
	.globl	sub_81B89F0
	.type	 sub_81B89F0,function
	.thumb_func
sub_81B89F0:
	push	{lr}
	add	sp, sp, #-0xc
	bl	sub_81B8984
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x5
	str	r0, [sp]
	ldr	r0, .L2629
	str	r0, [sp, #0x4]
	ldr	r0, .L2629+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x3
	mov	r3, #0x0
	bl	InitPartyMenu
	bl	nullsub_35
	bl	pokemon_change_order
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L2630:
	.align	2, 0
.L2629:
	.word	sub_81B1370
	.word	c2_815ABFC
.Lfe310:
	.size	 sub_81B89F0,.Lfe310-sub_81B89F0
	.align	2, 0
	.type	 sub_81B8A2C,function
	.thumb_func
sub_81B8A2C:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L2636
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L2632	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	bne	.L2632	@cond_branch
	ldr	r0, .L2636+0x4
	ldrb	r0, [r0, #0xb]
	cmp	r0, #0x1
	bne	.L2633	@cond_branch
	mov	r0, #0x3
	b	.L2635
.L2637:
	.align	2, 0
.L2636:
	.word	gPlayerParty+0x64
	.word	gUnknown_0203CEC8
.L2633:
	ldr	r0, .L2638
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0xb
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2632	@cond_branch
	mov	r0, #0x2
	b	.L2635
.L2639:
	.align	2, 0
.L2638:
	.word	gBattleTypeFlags
.L2632:
	mov	r0, #0x7
.L2635:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe311:
	.size	 sub_81B8A2C,.Lfe311-sub_81B8A2C
	.align	2, 0
	.type	 sub_81B8A7C,function
	.thumb_func
sub_81B8A7C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	IsMultiBattle
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L2641	@cond_branch
	cmp	r5, #0x1
	beq	.L2642	@cond_branch
	cmp	r5, #0x4
	beq	.L2642	@cond_branch
	cmp	r5, #0x5
	bne	.L2641	@cond_branch
.L2642:
	ldr	r4, .L2659
	bl	GetTrainerPartnerName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, .L2659+0x4
	ldr	r1, .L2659+0x8
	b	.L2656
.L2660:
	.align	2, 0
.L2659:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_CantSwitchWithAlly
.L2641:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L2661
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	bne	.L2643	@cond_branch
	ldr	r1, .L2661+0x4
	add	r0, r4, #0
	bl	GetMonNickname
	ldr	r0, .L2661+0x8
	ldr	r1, .L2661+0xc
	b	.L2656
.L2662:
	.align	2, 0
.L2661:
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_PkmnHasNoEnergy
.L2643:
	mov	r4, #0x0
	b	.L2657
.L2647:
	add	r0, r4, #0
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L2646	@cond_branch
	add	r0, r5, #0
	bl	sub_81B8F38
	lsl	r0, r0, #0x18
	ldr	r2, .L2663
	lsl	r1, r4, #0x1
	add	r1, r1, r2
	lsr	r0, r0, #0x18
	ldrh	r1, [r1]
	cmp	r0, r1
	beq	.L2655	@cond_branch
.L2646:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L2657:
	ldr	r0, .L2663+0x4
	ldrb	r0, [r0]
	cmp	r4, r0
	bcc	.L2647	@cond_branch
	mov	r7, #0x64
	mov	r0, r5
	mul	r0, r0, r7
	ldr	r1, .L2663+0x8
	mov	r8, r1
	add	r6, r0, r1
	add	r0, r6, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	beq	.L2650	@cond_branch
	ldr	r0, .L2663+0xc
	ldr	r1, .L2663+0x10
	b	.L2656
.L2664:
	.align	2, 0
.L2663:
	.word	gBattlerPartyIndexes
	.word	gBattlersCount
	.word	gPlayerParty
	.word	gStringVar4
	.word	gText_EggCantBattle
.L2650:
	add	r0, r5, #0
	bl	sub_81B8F38
	ldr	r1, .L2665
	ldr	r1, [r1]
	add	r1, r1, #0x8b
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L2651	@cond_branch
	ldr	r1, .L2665+0x4
	add	r0, r6, #0
	bl	GetMonNickname
	ldr	r0, .L2665+0x8
	ldr	r1, .L2665+0xc
	b	.L2656
.L2666:
	.align	2, 0
.L2665:
	.word	gBattleStruct
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_PkmnAlreadySelected
.L2651:
	ldr	r0, .L2667
	ldrb	r0, [r0, #0xb]
	cmp	r0, #0x4
	bne	.L2652	@cond_branch
	bl	SetMonPreventsSwitchingString
	b	.L2658
.L2668:
	.align	2, 0
.L2667:
	.word	gUnknown_0203CEC8
.L2652:
	cmp	r0, #0x2
	beq	.L2653	@cond_branch
	add	r0, r5, #0
	bl	sub_81B8F38
	ldr	r1, .L2669
	strb	r0, [r1]
	ldr	r1, .L2669+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	ldr	r1, .L2669+0x8
	ldr	r0, .L2669+0xc
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	pokemon_order_func
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	sub_81B8FB0
	mov	r0, r4
	mul	r0, r0, r7
	add	r0, r0, r8
	add	r1, r6, #0
	bl	sub_81B1288
	mov	r0, #0x1
	b	.L2654
.L2670:
	.align	2, 0
.L2669:
	.word	gUnknown_0203CEE9
	.word	gUnknown_0203CEE8
	.word	gBattlerPartyIndexes
	.word	gBattlerInMenuId
.L2655:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L2671
	add	r0, r0, r1
	ldr	r1, .L2671+0x4
	bl	GetMonNickname
	ldr	r0, .L2671+0x8
	ldr	r1, .L2671+0xc
	b	.L2656
.L2672:
	.align	2, 0
.L2671:
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_PkmnAlreadyInBattle
.L2653:
	ldr	r0, .L2673
	ldrb	r0, [r0]
	ldr	r1, .L2673+0x4
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	pokemon_order_func
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r7
	add	r0, r0, r8
	ldr	r1, .L2673+0x8
	bl	GetMonNickname
	ldr	r0, .L2673+0xc
	ldr	r1, .L2673+0x10
.L2656:
	bl	StringExpandPlaceholders
.L2658:
	mov	r0, #0x0
.L2654:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L2674:
	.align	2, 0
.L2673:
	.word	gBattlerInMenuId
	.word	gBattlerPartyIndexes
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_PkmnCantSwitchOut
.Lfe312:
	.size	 sub_81B8A7C,.Lfe312-sub_81B8A7C
	.align	2, 0
	.globl	sub_81B8C68
	.type	 sub_81B8C68,function
	.thumb_func
sub_81B8C68:
	push	{r4, lr}
	ldr	r4, .L2676
	bl	sub_806D7EC
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_81B8C88
	pop	{r4}
	pop	{r0}
	bx	r0
.L2677:
	.align	2, 0
.L2676:
	.word	gUnknown_0203CF00
.Lfe313:
	.size	 sub_81B8C68,.Lfe313-sub_81B8C68
	.align	2, 0
	.type	 sub_81B8C88,function
	.thumb_func
sub_81B8C88:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	bl	IsMultiBattle
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L2679	@cond_branch
	cmp	r4, #0
	beq	.L2680	@cond_branch
	mov	r0, #0x30
	strb	r0, [r6]
	mov	r0, #0x45
	strb	r0, [r6, #0x1]
	mov	r0, #0x12
	strb	r0, [r6, #0x2]
	b	.L2678
.L2680:
	mov	r0, #0x3
	strb	r0, [r6]
	mov	r0, #0x12
	strb	r0, [r6, #0x1]
	mov	r0, #0x45
	strb	r0, [r6, #0x2]
	b	.L2678
.L2679:
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L2683	@cond_branch
	mov	r5, #0x1
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	mov	r2, sp
	ldr	r1, .L2702
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x17
	add	r0, r0, r1
	ldrh	r0, [r0]
	strb	r0, [r2]
	mov	r4, #0x0
	mov	r1, sp
.L2687:
	ldrb	r0, [r1]
	cmp	r4, r0
	beq	.L2686	@cond_branch
	mov	r2, sp
	add	r0, r2, r5
	strb	r4, [r0]
	add	r5, r5, #0x1
.L2686:
	add	r4, r4, #0x1
	cmp	r4, #0x5
	ble	.L2687	@cond_branch
	b	.L2682
.L2703:
	.align	2, 0
.L2702:
	.word	gBattlerPartyIndexes
.L2683:
	mov	r5, #0x2
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	mov	r1, sp
	ldr	r4, .L2704
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x17
	add	r0, r0, r4
	ldrh	r0, [r0]
	strb	r0, [r1]
	mov	r0, #0x2
	bl	GetBattlerAtPosition
	mov	r1, sp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x17
	add	r0, r0, r4
	ldrh	r0, [r0]
	strb	r0, [r1, #0x1]
	mov	r4, #0x0
.L2694:
	ldrb	r0, [r1]
	cmp	r4, r0
	beq	.L2693	@cond_branch
	ldrb	r0, [r1, #0x1]
	cmp	r4, r0
	beq	.L2693	@cond_branch
	mov	r2, sp
	add	r0, r2, r5
	strb	r4, [r0]
	add	r5, r5, #0x1
.L2693:
	add	r4, r4, #0x1
	cmp	r4, #0x5
	ble	.L2694	@cond_branch
.L2682:
	mov	r4, #0x0
	mov	r3, sp
.L2700:
	add	r0, r6, r4
	ldrb	r1, [r3]
	lsl	r1, r1, #0x4
	ldrb	r2, [r3, #0x1]
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r3, r3, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x2
	ble	.L2700	@cond_branch
.L2678:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2705:
	.align	2, 0
.L2704:
	.word	gBattlerPartyIndexes
.Lfe314:
	.size	 sub_81B8C88,.Lfe314-sub_81B8C88
	.align	2, 0
	.globl	sub_81B8D64
	.type	 sub_81B8D64,function
	.thumb_func
sub_81B8D64:
	push	{lr}
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L2707
	lsl	r3, r2, #0x1
	add	r3, r3, r2
	add	r3, r3, #0x60
	ldr	r0, [r0]
	add	r0, r0, r3
	bl	sub_81B8D88
	pop	{r0}
	bx	r0
.L2708:
	.align	2, 0
.L2707:
	.word	gBattleStruct
.Lfe315:
	.size	 sub_81B8D64,.Lfe315-sub_81B8D64
	.align	2, 0
	.type	 sub_81B8D88,function
	.thumb_func
sub_81B8D88:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	add	r5, r0, #0
	add	r0, r2, #0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L2710	@cond_branch
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x2
	b	.L2735
.L2710:
	mov	r0, #0x1
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x3
.L2735:
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	bl	IsMultiBattle
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L2712	@cond_branch
	cmp	r7, #0
	beq	.L2713	@cond_branch
	mov	r0, #0x30
	strb	r0, [r5]
	mov	r0, #0x45
	strb	r0, [r5, #0x1]
	mov	r0, #0x12
	strb	r0, [r5, #0x2]
	b	.L2709
.L2713:
	mov	r0, #0x3
	strb	r0, [r5]
	mov	r0, #0x12
	strb	r0, [r5, #0x1]
	mov	r0, #0x45
	strb	r0, [r5, #0x2]
	b	.L2709
.L2712:
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L2716	@cond_branch
	mov	r3, #0x1
	mov	r2, sp
	ldr	r1, .L2736
	lsl	r0, r4, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	strb	r0, [r2]
	mov	r4, #0x0
	mov	r1, sp
.L2720:
	ldrb	r0, [r1]
	cmp	r4, r0
	beq	.L2719	@cond_branch
	mov	r2, sp
	add	r0, r2, r3
	strb	r4, [r0]
	add	r3, r3, #0x1
.L2719:
	add	r4, r4, #0x1
	cmp	r4, #0x5
	ble	.L2720	@cond_branch
	b	.L2715
.L2737:
	.align	2, 0
.L2736:
	.word	gBattlerPartyIndexes
.L2716:
	mov	r3, #0x2
	mov	r1, sp
	ldr	r2, .L2738
	lsl	r0, r4, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	strb	r0, [r1]
	lsl	r0, r6, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	strb	r0, [r1, #0x1]
	mov	r4, #0x0
.L2727:
	ldrb	r0, [r1]
	cmp	r4, r0
	beq	.L2726	@cond_branch
	ldrb	r0, [r1, #0x1]
	cmp	r4, r0
	beq	.L2726	@cond_branch
	mov	r2, sp
	add	r0, r2, r3
	strb	r4, [r0]
	add	r3, r3, #0x1
.L2726:
	add	r4, r4, #0x1
	cmp	r4, #0x5
	ble	.L2727	@cond_branch
.L2715:
	mov	r4, #0x0
	mov	r3, sp
.L2733:
	add	r0, r5, r4
	ldrb	r1, [r3]
	lsl	r1, r1, #0x4
	ldrb	r2, [r3, #0x1]
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r3, r3, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x2
	ble	.L2733	@cond_branch
.L2709:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2739:
	.align	2, 0
.L2738:
	.word	gBattlerPartyIndexes
.Lfe316:
	.size	 sub_81B8D88,.Lfe316-sub_81B8D88
	.align	2, 0
	.globl	sub_81B8E80
	.type	 sub_81B8E80,function
	.thumb_func
sub_81B8E80:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	mov	r7, #0x0
	bl	IsMultiBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2741	@cond_branch
	ldr	r0, .L2754
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	add	r1, r1, #0x60
	ldr	r0, [r0]
	add	r4, r0, r1
	mov	r2, #0x0
	add	r6, r6, sp
	mov	ip, r6
	mov	r6, #0xf
	mov	r3, sp
.L2745:
	add	r1, r4, r2
	ldrb	r0, [r1]
	lsr	r0, r0, #0x4
	strb	r0, [r3]
	add	r3, r3, #0x1
	ldrb	r1, [r1]
	add	r0, r6, #0
	and	r0, r0, r1
	strb	r0, [r3]
	add	r3, r3, #0x1
	add	r2, r2, #0x1
	cmp	r2, #0x2
	ble	.L2745	@cond_branch
	mov	r0, ip
	ldrb	r3, [r0]
	mov	r2, #0x0
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, r5
	bne	.L2749	@cond_branch
	mov	r0, sp
	ldrb	r7, [r0]
	strb	r3, [r0]
	b	.L2748
.L2755:
	.align	2, 0
.L2754:
	.word	gBattleStruct
.L2749:
	add	r2, r2, #0x1
	cmp	r2, #0x5
	bgt	.L2748	@cond_branch
	mov	r0, sp
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, r5
	bne	.L2749	@cond_branch
	add	r7, r0, #0
	strb	r3, [r1]
.L2748:
	cmp	r2, #0x6
	beq	.L2741	@cond_branch
	mov	r0, ip
	strb	r7, [r0]
	mov	r0, sp
	ldrb	r0, [r0]
	lsl	r0, r0, #0x4
	mov	r1, sp
	ldrb	r1, [r1, #0x1]
	orr	r0, r0, r1
	strb	r0, [r4]
	mov	r0, sp
	ldrb	r0, [r0, #0x2]
	lsl	r0, r0, #0x4
	mov	r1, sp
	ldrb	r1, [r1, #0x3]
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	mov	r0, sp
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x4
	mov	r1, sp
	ldrb	r1, [r1, #0x5]
	orr	r0, r0, r1
	strb	r0, [r4, #0x2]
.L2741:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe317:
	.size	 sub_81B8E80,.Lfe317-sub_81B8E80
	.align	2, 0
	.type	 sub_81B8F38,function
	.thumb_func
sub_81B8F38:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r1, #0x1
	and	r1, r1, r2
	lsr	r2, r0, #0x19
	cmp	r1, #0
	beq	.L2757	@cond_branch
	ldr	r0, .L2759
	add	r0, r2, r0
	ldrb	r0, [r0]
	mov	r1, #0xf
	and	r1, r1, r0
	b	.L2758
.L2760:
	.align	2, 0
.L2759:
	.word	gUnknown_0203CF00
.L2757:
	ldr	r0, .L2761
	add	r0, r2, r0
	ldrb	r0, [r0]
	lsr	r1, r0, #0x4
.L2758:
	add	r0, r1, #0
	pop	{r1}
	bx	r1
.L2762:
	.align	2, 0
.L2761:
	.word	gUnknown_0203CF00
.Lfe318:
	.size	 sub_81B8F38,.Lfe318-sub_81B8F38
	.align	2, 0
	.type	 sub_81B8F6C,function
	.thumb_func
sub_81B8F6C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	mov	r1, #0x1
	and	r1, r1, r3
	lsr	r3, r0, #0x19
	cmp	r1, #0
	beq	.L2764	@cond_branch
	ldr	r0, .L2766
	add	r0, r3, r0
	ldrb	r2, [r0]
	mov	r1, #0xf0
	and	r1, r1, r2
	orr	r1, r1, r4
	strb	r1, [r0]
	b	.L2765
.L2767:
	.align	2, 0
.L2766:
	.word	gUnknown_0203CF00
.L2764:
	ldr	r2, .L2768
	add	r2, r3, r2
	ldrb	r1, [r2]
	mov	r0, #0xf
	and	r0, r0, r1
	lsl	r1, r4, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
.L2765:
	pop	{r4}
	pop	{r0}
	bx	r0
.L2769:
	.align	2, 0
.L2768:
	.word	gUnknown_0203CF00
.Lfe319:
	.size	 sub_81B8F6C,.Lfe319-sub_81B8F6C
	.align	2, 0
	.globl	sub_81B8FB0
	.type	 sub_81B8FB0,function
	.thumb_func
sub_81B8FB0:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	add	r0, r5, #0
	bl	sub_81B8F38
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r6, #0
	bl	sub_81B8F38
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	sub_81B8F6C
	add	r0, r6, #0
	add	r1, r4, #0
	bl	sub_81B8F6C
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe320:
	.size	 sub_81B8FB0,.Lfe320-sub_81B8FB0
	.align	2, 0
	.globl	pokemon_order_func
	.type	 pokemon_order_func,function
	.thumb_func
pokemon_order_func:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r3, #0x0
	mov	r2, #0x0
	ldr	r5, .L2782
.L2775:
	add	r0, r3, r5
	ldrb	r1, [r0]
	lsr	r0, r1, #0x4
	cmp	r0, r4
	beq	.L2781	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, r4
	bne	.L2774	@cond_branch
.L2781:
	add	r0, r2, #0
	b	.L2780
.L2783:
	.align	2, 0
.L2782:
	.word	gUnknown_0203CF00
.L2774:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x2
	bls	.L2775	@cond_branch
	mov	r0, #0x0
.L2780:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe321:
	.size	 pokemon_order_func,.Lfe321-pokemon_order_func
	.align	2, 0
	.type	 pokemon_change_order,function
	.thumb_func
pokemon_change_order:
	push	{r4, r5, r6, lr}
	mov	r4, #0x96
	lsl	r4, r4, #0x2
	add	r0, r4, #0
	bl	Alloc
	add	r5, r0, #0
	ldr	r1, .L2790
	add	r2, r4, #0
	bl	memcpy
	mov	r4, #0x0
	mov	r6, #0x64
.L2788:
	add	r0, r4, #0
	bl	pokemon_order_func
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r6
	ldr	r1, .L2790
	add	r0, r0, r1
	mov	r1, r4
	mul	r1, r1, r6
	add	r1, r1, r5
	mov	r2, #0x64
	bl	memcpy
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L2788	@cond_branch
	add	r0, r5, #0
	bl	Free
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2791:
	.align	2, 0
.L2790:
	.word	gPlayerParty
.Lfe322:
	.size	 pokemon_change_order,.Lfe322-pokemon_change_order
	.align	2, 0
	.type	 sub_81B9080,function
	.thumb_func
sub_81B9080:
	push	{r4, r5, r6, lr}
	mov	r4, #0x96
	lsl	r4, r4, #0x2
	add	r0, r4, #0
	bl	Alloc
	add	r5, r0, #0
	ldr	r1, .L2798
	add	r2, r4, #0
	bl	memcpy
	mov	r4, #0x0
	mov	r6, #0x64
.L2796:
	add	r0, r4, #0
	bl	sub_81B8F38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r6
	ldr	r1, .L2798
	add	r0, r0, r1
	mov	r1, r4
	mul	r1, r1, r6
	add	r1, r1, r5
	mov	r2, #0x64
	bl	memcpy
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L2796	@cond_branch
	add	r0, r5, #0
	bl	Free
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2799:
	.align	2, 0
.L2798:
	.word	gPlayerParty
.Lfe323:
	.size	 sub_81B9080,.Lfe323-sub_81B9080
	.align	2, 0
	.type	 sub_81B90D0,function
	.thumb_func
sub_81B90D0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r6, #0x1
	mov	r7, #0x64
	ldr	r0, .L2807
	mov	r8, r0
.L2804:
	add	r0, r6, #0
	bl	sub_81B8F38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r7
	mov	r1, r8
	add	r5, r0, r1
	add	r0, r5, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L2803	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	beq	.L2803	@cond_branch
	mov	r0, #0x0
	bl	sub_81B8F38
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	add	r1, r6, #0
	bl	sub_81B8FB0
	mov	r0, r4
	mul	r0, r0, r7
	add	r0, r0, r8
	add	r1, r5, #0
	bl	sub_81B1288
	b	.L2802
.L2808:
	.align	2, 0
.L2807:
	.word	gPlayerParty
.L2803:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x5
	bls	.L2804	@cond_branch
.L2802:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe324:
	.size	 sub_81B90D0,.Lfe324-sub_81B90D0
	.align	2, 0
	.type	 sub_81B9140,function
	.thumb_func
sub_81B9140:
	push	{lr}
	ldr	r0, .L2810
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L2811:
	.align	2, 0
.L2810:
	.word	SetCB2ToReshowScreenAfterMenu
.Lfe325:
	.size	 sub_81B9140,.Lfe325-sub_81B9140
	.align	2, 0
	.globl	sub_81B9150
	.type	 sub_81B9150,function
	.thumb_func
sub_81B9150:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x7f
	str	r0, [sp]
	ldr	r0, .L2813
	str	r0, [sp, #0x4]
	ldr	r0, .L2813+0x4
	ldr	r0, [r0, #0x8]
	str	r0, [sp, #0x8]
	mov	r0, #0x5
	mov	r1, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	InitPartyMenu
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L2814:
	.align	2, 0
.L2813:
	.word	sub_81B917C
	.word	gMain
.Lfe326:
	.size	 sub_81B9150,.Lfe326-sub_81B9150
	.align	2, 0
	.type	 sub_81B917C,function
	.thumb_func
sub_81B917C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L2816
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	strh	r1, [r4, #0x8]
	bl	sub_81B9294
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	mov	r0, #0x2
	mov	r2, #0x0
	bl	ChangeBgX
	ldr	r0, .L2816+0x4
	str	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L2817:
	.align	2, 0
.L2816:
	.word	gTasks
	.word	sub_81B91B4
.Lfe327:
	.size	 sub_81B917C,.Lfe327-sub_81B917C
	.align	2, 0
	.type	 sub_81B91B4,function
	.thumb_func
sub_81B91B4:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r6, r5, #0x2
	add	r0, r6, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L2827
	add	r4, r0, r1
	ldr	r0, .L2827+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2819	@cond_branch
	ldrh	r0, [r4]
	sub	r0, r0, #0x8
	strh	r0, [r4]
	add	r0, r5, #0
	bl	sub_81B9294
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L2819	@cond_branch
	mov	r4, #0x3
	ldr	r7, .L2827+0x8
.L2824:
	sub	r0, r4, #0x3
	lsl	r0, r0, #0x5
	add	r0, r0, r7
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L2823	@cond_branch
	ldr	r0, .L2827+0xc
	ldr	r1, [r0]
	lsl	r0, r4, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x9]
	mov	r1, #0x0
	bl	AnimateSelectedPartyIcon
.L2823:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L2824	@cond_branch
	mov	r0, #0x78
	bl	PlaySE
	ldr	r0, .L2827+0x10
	add	r1, r6, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L2827+0x14
	str	r0, [r1]
.L2819:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2828:
	.align	2, 0
.L2827:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	gUnknown_02022FF8
	.word	gUnknown_0203CEDC
	.word	gTasks
	.word	sub_81B9240
.Lfe328:
	.size	 sub_81B91B4,.Lfe328-sub_81B91B4
	.align	2, 0
	.type	 sub_81B9240,function
	.thumb_func
sub_81B9240:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r1, .L2831
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	strh	r1, [r0]
	lsl	r1, r1, #0x10
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	cmp	r1, r0
	bne	.L2830	@cond_branch
	add	r0, r2, #0
	bl	sub_81B12C0
.L2830:
	pop	{r0}
	bx	r0
.L2832:
	.align	2, 0
.L2831:
	.word	gTasks+0x8
.Lfe329:
	.size	 sub_81B9240,.Lfe329-sub_81B9240
	.align	2, 0
	.type	 sub_81B9270,function
	.thumb_func
sub_81B9270:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r3, r1, #0x10
	cmp	r1, #0
	blt	.L2834	@cond_branch
	ldr	r1, .L2835
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	strh	r3, [r0, #0x24]
.L2834:
	pop	{r0}
	bx	r0
.L2836:
	.align	2, 0
.L2835:
	.word	gSprites
.Lfe330:
	.size	 sub_81B9270,.Lfe330-sub_81B9270
	.align	2, 0
	.type	 sub_81B9294,function
	.thumb_func
sub_81B9294:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L2844
	add	r5, r1, r0
	mov	r6, #0x3
	ldr	r7, .L2844+0x4
.L2841:
	ldr	r0, .L2844+0x8
	sub	r1, r6, #0x3
	lsl	r1, r1, #0x5
	add	r1, r1, r0
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L2840	@cond_branch
	ldr	r0, [r7]
	lsl	r4, r6, #0x4
	add	r0, r4, r0
	ldrb	r0, [r0, #0x9]
	ldrh	r1, [r5]
	sub	r1, r1, #0x8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	sub_81B9270
	ldr	r0, [r7]
	add	r0, r4, r0
	ldrb	r0, [r0, #0xa]
	ldrh	r1, [r5]
	sub	r1, r1, #0x8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	sub_81B9270
	ldr	r0, [r7]
	add	r0, r4, r0
	ldrb	r0, [r0, #0xb]
	ldrh	r1, [r5]
	sub	r1, r1, #0x8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	sub_81B9270
	ldr	r0, [r7]
	add	r4, r4, r0
	ldrb	r0, [r4, #0xc]
	ldrh	r1, [r5]
	sub	r1, r1, #0x8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	sub_81B9270
.L2840:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x5
	bls	.L2841	@cond_branch
	mov	r1, #0x80
	lsl	r1, r1, #0x4
	mov	r0, #0x2
	mov	r2, #0x1
	bl	ChangeBgX
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2845:
	.align	2, 0
.L2844:
	.word	gTasks+0x8
	.word	gUnknown_0203CEDC
	.word	gUnknown_02022FF8
.Lfe331:
	.size	 sub_81B9294,.Lfe331-sub_81B9294
	.align	2, 0
	.globl	sub_81B9328
	.type	 sub_81B9328,function
	.thumb_func
sub_81B9328:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0xf
	str	r0, [sp]
	ldr	r0, .L2847
	str	r0, [sp, #0x4]
	ldr	r0, .L2847+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x6
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	InitPartyMenu
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L2848:
	.align	2, 0
.L2847:
	.word	sub_81B1370
	.word	sub_81B9390
.Lfe332:
	.size	 sub_81B9328,.Lfe332-sub_81B9328
	.align	2, 0
	.type	 sub_81B9354,function
	.thumb_func
sub_81B9354:
	push	{lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L2850
	ldr	r1, .L2850+0x4
	str	r1, [r2]
	mov	r1, #0x0
	str	r1, [sp]
	ldr	r1, .L2850+0x8
	str	r1, [sp, #0x4]
	ldr	r1, .L2850+0xc
	str	r1, [sp, #0x8]
	mov	r1, #0x0
	mov	r2, #0xb
	mov	r3, #0x0
	bl	InitPartyMenu
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L2851:
	.align	2, 0
.L2850:
	.word	gFieldCallback2
	.word	hm_add_c3_without_phase_2
	.word	sub_81B1370
	.word	CB2_ReturnToField
.Lfe333:
	.size	 sub_81B9354,.Lfe333-sub_81B9354
	.align	2, 0
	.type	 sub_81B9390,function
	.thumb_func
sub_81B9390:
	push	{r4, lr}
	ldr	r4, .L2854
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
	cmp	r0, #0x5
	bls	.L2853	@cond_branch
	mov	r0, #0xff
	strh	r0, [r4]
.L2853:
	ldr	r0, .L2854+0x4
	ldr	r1, .L2854+0x8
	str	r1, [r0]
	ldr	r0, .L2854+0xc
	bl	SetMainCallback2
	pop	{r4}
	pop	{r0}
	bx	r0
.L2855:
	.align	2, 0
.L2854:
	.word	gSpecialVar_0x8004
	.word	gFieldCallback2
	.word	hm_add_c3_without_phase_2
	.word	CB2_ReturnToField
.Lfe334:
	.size	 sub_81B9390,.Lfe334-sub_81B9390
	.align	2, 0
	.globl	hm_add_c3_without_phase_2
	.type	 hm_add_c3_without_phase_2,function
	.thumb_func
hm_add_c3_without_phase_2:
	push	{lr}
	bl	pal_fill_black
	ldr	r0, .L2857
	mov	r1, #0xa
	bl	CreateTask
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.L2858:
	.align	2, 0
.L2857:
	.word	task_hm_without_phase_2
.Lfe335:
	.size	 hm_add_c3_without_phase_2,.Lfe335-hm_add_c3_without_phase_2
	.align	2, 0
	.type	 task_hm_without_phase_2,function
	.thumb_func
task_hm_without_phase_2:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2860	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	bl	ScriptContext2_Disable
	bl	EnableBothScriptContexts
.L2860:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe336:
	.size	 task_hm_without_phase_2,.Lfe336-task_hm_without_phase_2
	.align	2, 0
	.globl	sub_81B9404
	.type	 sub_81B9404,function
	.thumb_func
sub_81B9404:
	push	{lr}
	bl	ScriptContext2_Enable
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r0, .L2862
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L2863:
	.align	2, 0
.L2862:
	.word	sub_81B9424
.Lfe337:
	.size	 sub_81B9404,.Lfe337-sub_81B9404
	.align	2, 0
	.type	 sub_81B9424,function
	.thumb_func
sub_81B9424:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L2866
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L2865	@cond_branch
	bl	CleanupOverworldWindowsAndTilemaps
	str	r4, [sp]
	ldr	r0, .L2866+0x4
	str	r0, [sp, #0x4]
	ldr	r0, .L2866+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0xb
	mov	r3, #0x0
	bl	InitPartyMenu
	add	r0, r5, #0
	bl	DestroyTask
.L2865:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2867:
	.align	2, 0
.L2866:
	.word	gPaletteFade
	.word	sub_81B1370
	.word	sub_81B9470
.Lfe338:
	.size	 sub_81B9424,.Lfe338-sub_81B9424
	.align	2, 0
	.type	 sub_81B9470,function
	.thumb_func
sub_81B9470:
	push	{lr}
	bl	GetCursorSelectionMonId
	ldr	r2, .L2870
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	bls	.L2869	@cond_branch
	mov	r0, #0xff
	strb	r0, [r2]
.L2869:
	ldr	r1, .L2870+0x4
	ldrb	r0, [r2]
	strh	r0, [r1]
	ldr	r1, .L2870+0x8
	ldr	r0, .L2870+0xc
	str	r0, [r1]
	ldr	r0, .L2870+0x10
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L2871:
	.align	2, 0
.L2870:
	.word	gContestMonPartyIndex
	.word	gSpecialVar_0x8004
	.word	gFieldCallback2
	.word	hm_add_c3_without_phase_2
	.word	CB2_ReturnToField
.Lfe339:
	.size	 sub_81B9470,.Lfe339-sub_81B9470
	.align	2, 0
	.globl	sub_81B94B0
	.type	 sub_81B94B0,function
	.thumb_func
sub_81B94B0:
	push	{lr}
	bl	ScriptContext2_Enable
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r0, .L2873
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L2874:
	.align	2, 0
.L2873:
	.word	sub_81B94D0
.Lfe340:
	.size	 sub_81B94B0,.Lfe340-sub_81B94B0
	.align	2, 0
	.type	 sub_81B94D0,function
	.thumb_func
sub_81B94D0:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L2877
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L2876	@cond_branch
	bl	CleanupOverworldWindowsAndTilemaps
	str	r4, [sp]
	ldr	r0, .L2877+0x4
	str	r0, [sp, #0x4]
	ldr	r0, .L2877+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0xb
	mov	r3, #0x0
	bl	InitPartyMenu
	add	r0, r5, #0
	bl	DestroyTask
.L2876:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2878:
	.align	2, 0
.L2877:
	.word	gPaletteFade
	.word	sub_81B1370
	.word	sub_81B9390
.Lfe341:
	.size	 sub_81B94D0,.Lfe341-sub_81B94D0
	.align	2, 0
	.globl	sub_81B951C
	.type	 sub_81B951C,function
	.thumb_func
sub_81B951C:
	push	{lr}
	bl	ScriptContext2_Enable
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r0, .L2880
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L2881:
	.align	2, 0
.L2880:
	.word	sub_81B953C
.Lfe342:
	.size	 sub_81B951C,.Lfe342-sub_81B951C
	.align	2, 0
	.type	 sub_81B953C,function
	.thumb_func
sub_81B953C:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L2884
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L2883	@cond_branch
	bl	CleanupOverworldWindowsAndTilemaps
	str	r4, [sp]
	ldr	r0, .L2884+0x4
	str	r0, [sp, #0x4]
	ldr	r0, .L2884+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x7
	mov	r1, #0x0
	mov	r2, #0xb
	mov	r3, #0x0
	bl	InitPartyMenu
	add	r0, r5, #0
	bl	DestroyTask
.L2883:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2885:
	.align	2, 0
.L2884:
	.word	gPaletteFade
	.word	sub_81B1370
	.word	sub_81B9588
.Lfe343:
	.size	 sub_81B953C,.Lfe343-sub_81B953C
	.align	2, 0
	.type	 sub_81B9588,function
	.thumb_func
sub_81B9588:
	push	{r4, r5, lr}
	ldr	r5, .L2889
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5]
	cmp	r0, #0x5
	bls	.L2887	@cond_branch
	mov	r0, #0xff
	strh	r0, [r5]
	b	.L2888
.L2890:
	.align	2, 0
.L2889:
	.word	gSpecialVar_0x8004
.L2887:
	ldr	r4, .L2891
	ldrh	r1, [r5]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L2891+0x4
	add	r0, r0, r1
	bl	GetNumberOfRelearnableMoves
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
.L2888:
	ldr	r0, .L2891+0x8
	ldr	r1, .L2891+0xc
	str	r1, [r0]
	ldr	r0, .L2891+0x10
	bl	SetMainCallback2
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2892:
	.align	2, 0
.L2891:
	.word	gSpecialVar_0x8005
	.word	gPlayerParty
	.word	gFieldCallback2
	.word	hm_add_c3_without_phase_2
	.word	CB2_ReturnToField
.Lfe344:
	.size	 sub_81B9588,.Lfe344-sub_81B9588
	.align	2, 0
	.globl	sub_81B95E0
	.type	 sub_81B95E0,function
	.thumb_func
sub_81B95E0:
	push	{r4, r5, lr}
	ldr	r1, .L2900
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r4, #0x0
	add	r5, r1, #0
	b	.L2894
.L2901:
	.align	2, 0
.L2900:
	.word	gSpecialVar_Result
.L2896:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L2894:
	cmp	r4, #0x2
	bhi	.L2895	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L2902
	add	r0, r0, r1
	mov	r1, #0xc
	bl	GetMonData
	cmp	r0, #0
	beq	.L2896	@cond_branch
	mov	r0, #0x1
	strh	r0, [r5]
.L2895:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2903:
	.align	2, 0
.L2902:
	.word	gPlayerParty
.Lfe345:
	.size	 sub_81B95E0,.Lfe345-sub_81B95E0
	.align	2, 0
	.globl	sub_81B9620
	.type	 sub_81B9620,function
	.thumb_func
sub_81B9620:
	push	{lr}
	bl	ScriptContext2_Enable
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r0, .L2905
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L2906:
	.align	2, 0
.L2905:
	.word	sub_81B9640
.Lfe346:
	.size	 sub_81B9620,.Lfe346-sub_81B9620
	.align	2, 0
	.type	 sub_81B9640,function
	.thumb_func
sub_81B9640:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L2909
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L2908	@cond_branch
	bl	CleanupOverworldWindowsAndTilemaps
	str	r4, [sp]
	ldr	r0, .L2909+0x4
	str	r0, [sp, #0x4]
	ldr	r0, .L2909+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0xc
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	InitPartyMenu
	add	r0, r5, #0
	bl	DestroyTask
.L2908:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2910:
	.align	2, 0
.L2909:
	.word	gPaletteFade
	.word	sub_81B1370
	.word	sub_81B9390
.Lfe347:
	.size	 sub_81B9640,.Lfe347-sub_81B9640
	.align	2, 0
	.globl	sub_81B968C
	.type	 sub_81B968C,function
	.thumb_func
sub_81B968C:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r1, .L2912
	ldr	r0, .L2912+0x4
	ldrb	r2, [r0]
	ldr	r0, .L2912+0x8
	ldrb	r3, [r0]
	sub	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, .L2912+0xc
	str	r0, [sp]
	mov	r0, #0x3
	bl	ShowPokemonSummaryScreen
	ldr	r1, .L2912+0x10
	ldr	r0, .L2912+0x14
	str	r0, [r1]
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L2913:
	.align	2, 0
.L2912:
	.word	gPlayerParty
	.word	gSpecialVar_0x8004
	.word	gPlayerPartyCount
	.word	CB2_ReturnToField
	.word	gFieldCallback
	.word	FieldCallback_ReturnToEventScript2
.Lfe348:
	.size	 sub_81B968C,.Lfe348-sub_81B968C
	.align	2, 0
	.globl	sub_81B96D0
	.type	 sub_81B96D0,function
	.thumb_func
sub_81B96D0:
	push	{r4, r5, lr}
	ldr	r1, .L2921
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r4, #0x0
	add	r5, r1, #0
.L2918:
	ldr	r0, .L2921+0x4
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L2921+0x8
	add	r0, r0, r1
	add	r1, r4, #0
	add	r1, r1, #0xd
	bl	GetMonData
	cmp	r0, #0
	beq	.L2917	@cond_branch
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L2917:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L2918	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2922:
	.align	2, 0
.L2921:
	.word	gSpecialVar_Result
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
.Lfe349:
	.size	 sub_81B96D0,.Lfe349-sub_81B96D0
	.align	2, 0
	.globl	sub_81B9718
	.type	 sub_81B9718,function
	.thumb_func
sub_81B9718:
	push	{r4, r5, lr}
	ldr	r0, .L2924
	ldrh	r1, [r0]
	mov	r0, #0x64
	mov	r5, r1
	mul	r5, r5, r0
	ldr	r0, .L2924+0x4
	add	r5, r5, r0
	ldr	r0, .L2924+0x8
	ldrh	r1, [r0]
	add	r1, r1, #0xd
	add	r0, r5, #0
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r1, .L2924+0xc
	add	r0, r5, #0
	bl	GetMonNickname
	ldr	r0, .L2924+0x10
	mov	r1, #0xd
	mul	r1, r1, r4
	ldr	r2, .L2924+0x14
	add	r1, r1, r2
	bl	StringCopy
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2925:
	.align	2, 0
.L2924:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gSpecialVar_0x8005
	.word	gStringVar1
	.word	gStringVar2
	.word	gMoveNames
.Lfe350:
	.size	 sub_81B9718,.Lfe350-sub_81B9718
	.align	2, 0
	.globl	sub_81B9770
	.type	 sub_81B9770,function
	.thumb_func
sub_81B9770:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r0, .L2932
	mov	r8, r0
	ldrh	r0, [r0]
	mov	r6, #0x64
	mul	r0, r0, r6
	ldr	r5, .L2932+0x4
	add	r0, r0, r5
	ldr	r4, .L2932+0x8
	ldrb	r2, [r4]
	mov	r1, #0x0
	bl	SetMonMoveSlot
	mov	r1, r8
	ldrh	r0, [r1]
	mul	r0, r0, r6
	add	r0, r0, r5
	ldrb	r1, [r4]
	bl	RemoveMonPPBonus
	ldrh	r4, [r4]
	cmp	r4, #0x2
	bhi	.L2928	@cond_branch
.L2930:
	ldr	r0, .L2932
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L2932+0x4
	add	r0, r0, r1
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	add	r4, r4, #0x1
	lsl	r2, r4, #0x18
	lsr	r2, r2, #0x18
	bl	sub_81B97DC
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	cmp	r4, #0x2
	bls	.L2930	@cond_branch
.L2928:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2933:
	.align	2, 0
.L2932:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gSpecialVar_0x8005
.Lfe351:
	.size	 sub_81B9770,.Lfe351-sub_81B9770
	.align	2, 0
	.type	 sub_81B97DC,function
	.thumb_func
sub_81B97DC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x20
	mov	r8, r0
	add	r5, r1, #0
	add	r4, r2, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	add	r0, r0, #0xd
	str	r0, [sp, #0x8]
	mov	r0, r8
	ldr	r1, [sp, #0x8]
	bl	GetMonData
	mov	r1, sp
	add	r1, r1, #0x2
	str	r1, [sp, #0x14]
	strh	r0, [r1]
	add	r3, r4, #0
	add	r3, r3, #0xd
	str	r3, [sp, #0xc]
	mov	r0, r8
	add	r1, r3, #0
	bl	GetMonData
	mov	r1, sp
	strh	r0, [r1]
	add	r7, r5, #0
	add	r7, r7, #0x11
	str	r7, [sp, #0x10]
	mov	r0, r8
	add	r1, r7, #0
	bl	GetMonData
	mov	r1, sp
	add	r1, r1, #0x5
	str	r1, [sp, #0x18]
	strb	r0, [r1]
	add	r3, r4, #0
	add	r3, r3, #0x11
	str	r3, [sp, #0x1c]
	mov	r0, r8
	add	r1, r3, #0
	bl	GetMonData
	add	r7, sp, #0x4
	mov	sl, r7
	strb	r0, [r7]
	mov	r0, r8
	mov	r1, #0x15
	bl	GetMonData
	mov	r6, sp
	add	r6, r6, #0x6
	strb	r0, [r6]
	ldr	r1, .L2935
	add	r0, r5, r1
	ldrb	r0, [r0]
	mov	r9, r0
	ldrb	r0, [r6]
	add	r2, r0, #0
	mov	r3, r9
	and	r2, r2, r3
	lsl	r5, r5, #0x1
	asr	r2, r2, r5
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r1, r4, r1
	ldrb	r3, [r1]
	add	r1, r0, #0
	and	r1, r1, r3
	lsl	r4, r4, #0x1
	asr	r1, r1, r4
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r7, r9
	bic	r0, r0, r7
	strb	r0, [r6]
	ldrb	r0, [r6]
	bic	r0, r0, r3
	strb	r0, [r6]
	lsl	r2, r2, r4
	lsl	r1, r1, r5
	add	r2, r2, r1
	ldrb	r0, [r6]
	orr	r0, r0, r2
	strb	r0, [r6]
	mov	r0, r8
	ldr	r1, [sp, #0x8]
	mov	r2, sp
	bl	SetMonData
	mov	r0, r8
	ldr	r1, [sp, #0xc]
	ldr	r2, [sp, #0x14]
	bl	SetMonData
	mov	r0, r8
	ldr	r1, [sp, #0x10]
	mov	r2, sl
	bl	SetMonData
	mov	r0, r8
	ldr	r1, [sp, #0x1c]
	ldr	r2, [sp, #0x18]
	bl	SetMonData
	mov	r0, r8
	mov	r1, #0x15
	add	r2, r6, #0
	bl	SetMonData
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2936:
	.align	2, 0
.L2935:
	.word	gPPUpGetMask
.Lfe352:
	.size	 sub_81B97DC,.Lfe352-sub_81B97DC
	.align	2, 0
	.globl	sub_81B98DC
	.type	 sub_81B98DC,function
	.thumb_func
sub_81B98DC:
	push	{lr}
	ldr	r0, .L2940
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L2940+0x4
	add	r0, r0, r1
	mov	r1, #0x2d
	bl	GetMonData
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L2938	@cond_branch
	ldr	r1, .L2940+0x8
	mov	r0, #0x1
	strh	r0, [r1]
	b	.L2939
.L2941:
	.align	2, 0
.L2940:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gSpecialVar_Result
.L2938:
	ldr	r0, .L2942
	strh	r1, [r0]
.L2939:
	pop	{r0}
	bx	r0
.L2943:
	.align	2, 0
.L2942:
	.word	gSpecialVar_Result
.Lfe353:
	.size	 sub_81B98DC,.Lfe353-sub_81B98DC
	.align	2, 0
	.globl	sub_81B9918
	.type	 sub_81B9918,function
	.thumb_func
sub_81B9918:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r1, .L2959
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2959+0x4
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L2959+0x8
	add	r0, r0, r1
	ldr	r1, .L2959+0xc
	ldrh	r1, [r1]
	add	r1, r1, #0xd
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	cmp	r0, #0x39
	bne	.L2944	@cond_branch
	mov	r6, #0x0
	b	.L2946
.L2960:
	.align	2, 0
.L2959:
	.word	gSpecialVar_Result
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gSpecialVar_0x8005
.L2949:
	ldr	r0, .L2961
	ldrh	r0, [r0]
	cmp	r6, r0
	beq	.L2948	@cond_branch
	mov	r4, #0x0
	mov	r0, #0x64
	mov	r5, r6
	mul	r5, r5, r0
	ldr	r7, .L2961+0x4
.L2954:
	add	r1, r4, #0
	add	r1, r1, #0xd
	add	r0, r5, r7
	bl	GetMonData
	cmp	r0, #0x39
	beq	.L2944	@cond_branch
	add	r4, r4, #0x1
	cmp	r4, #0x3
	bls	.L2954	@cond_branch
.L2948:
	add	r6, r6, #0x1
.L2946:
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r6, r0
	bcc	.L2949	@cond_branch
	mov	r0, r8
	bl	AnyStorageMonWithMove
	cmp	r0, #0x1
	beq	.L2944	@cond_branch
	ldr	r1, .L2961+0x8
	mov	r0, #0x1
	strh	r0, [r1]
.L2944:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2962:
	.align	2, 0
.L2961:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gSpecialVar_Result
.Lfe354:
	.size	 sub_81B9918,.Lfe354-sub_81B9918
	.comm	gUnknown_03006328, 4	@ 4
.text
	.align	2, 0


@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	sPokemonAnglerSpecies
	.section ewram_data,"aw"
	.align	1, 0
	.type	 sPokemonAnglerSpecies,object
	.size	 sPokemonAnglerSpecies,2
sPokemonAnglerSpecies:
	.short	0x0
	.globl	sPokemonAnglerAttemptCounters
	.align	1, 0
	.type	 sPokemonAnglerAttemptCounters,object
	.size	 sPokemonAnglerAttemptCounters,2
sPokemonAnglerAttemptCounters:
	.short	0x0
	.globl	sFindThatGamerCoinsSpent
	.align	1, 0
	.type	 sFindThatGamerCoinsSpent,object
	.size	 sFindThatGamerCoinsSpent,2
sFindThatGamerCoinsSpent:
	.short	0x0
	.globl	sFindThatGamerWhichGame
	.type	 sFindThatGamerWhichGame,object
	.size	 sFindThatGamerWhichGame,1
sFindThatGamerWhichGame:
	.byte	0x0
	.globl	sRecordMixingPartnersWithoutShowsToShare
	.align	2, 0
	.type	 sRecordMixingPartnersWithoutShowsToShare,object
	.size	 sRecordMixingPartnersWithoutShowsToShare,1
sRecordMixingPartnersWithoutShowsToShare:
	.byte	0x0
	.globl	sTVShowState
	.align	2, 0
	.type	 sTVShowState,object
	.size	 sTVShowState,1
sTVShowState:
	.byte	0x0
	.globl	sTVSecretBaseSecretsRandomValues
	.type	 sTVSecretBaseSecretsRandomValues,object
	.size	 sTVSecretBaseSecretsRandomValues,3
sTVSecretBaseSecretsRandomValues:
	.space	3
	.section .rodata
	.align	2, 0
	.type	 sPokeOutbreakSpeciesList,object
sPokeOutbreakSpeciesList:
	.short	0x12a
	.short	0x75
	.short	0x6a
	.short	0x49
	.space	2
	.byte	0x3
	.byte	0x11
	.short	0x12b
	.short	0x6a
	.short	0x4a
	.short	0x10b
	.short	0x49
	.byte	0xf
	.byte	0x1d
	.short	0x12a
	.short	0x6a
	.short	0x4a
	.short	0x10b
	.short	0x49
	.byte	0xd
	.byte	0x20
	.short	0x12a
	.short	0xca
	.short	0xda
	.short	0x4c
	.short	0x49
	.byte	0x19
	.byte	0x23
	.short	0x13b
	.short	0x2d
	.short	0x21
	.short	0x27
	.short	0xd5
	.byte	0x8
	.byte	0x1f
	.size	 sPokeOutbreakSpeciesList,60
	.align	1, 0
	.type	 sGoldSymbolFlags,object
sGoldSymbolFlags:
	.short	0x8c5
	.short	0x8c7
	.short	0x8c9
	.short	0x8cb
	.short	0x8cd
	.short	0x8cf
	.short	0x8d1
	.size	 sGoldSymbolFlags,14
	.align	1, 0
	.type	 sSilverSymbolFlags,object
sSilverSymbolFlags:
	.short	0x8c4
	.short	0x8c6
	.short	0x8c8
	.short	0x8ca
	.short	0x8cc
	.short	0x8ce
	.short	0x8d0
	.size	 sSilverSymbolFlags,14
	.align	1, 0
	.type	 sNumberOneVarsAndThresholds,object
sNumberOneVarsAndThresholds:
	.short	0x40e6
	.short	0x64
	.short	0x40eb
	.short	0x32
	.short	0x40e7
	.short	0x64
	.short	0x40e8
	.short	0x14
	.short	0x40e9
	.short	0x14
	.short	0x40ea
	.short	0x14
	.short	0x40f1
	.short	0x1e
	.size	 sNumberOneVarsAndThresholds,28
	.align	2, 0
	.type	 sPokeNewsTextGroup_Upcoming,object
sPokeNewsTextGroup_Upcoming:
	.word	0x0
	.word	gPokeNewsTextSlateport_Upcoming
	.word	gPokeNewsTextGameCorner_Upcoming
	.word	gPokeNewsTextLilycove_Upcoming
	.word	gPokeNewsTextBlendMaster_Upcoming
	.size	 sPokeNewsTextGroup_Upcoming,20
	.align	2, 0
	.type	 sPokeNewsTextGroup_Ongoing,object
sPokeNewsTextGroup_Ongoing:
	.word	0x0
	.word	gPokeNewsTextSlateport_Ongoing
	.word	gPokeNewsTextGameCorner_Ongoing
	.word	gPokeNewsTextLilycove_Ongoing
	.word	gPokeNewsTextBlendMaster_Ongoing
	.size	 sPokeNewsTextGroup_Ongoing,20
	.align	2, 0
	.type	 sPokeNewsTextGroup_Ending,object
sPokeNewsTextGroup_Ending:
	.word	0x0
	.word	gPokeNewsTextSlateport_Ending
	.word	gPokeNewsTextGameCorner_Ending
	.word	gPokeNewsTextLilycove_Ending
	.word	gPokeNewsTextBlendMaster_Ending
	.size	 sPokeNewsTextGroup_Ending,20
	.globl	gTVStringVarPtrs
	.align	2, 0
	.type	 gTVStringVarPtrs,object
	.size	 gTVStringVarPtrs,12
gTVStringVarPtrs:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.align	2, 0
	.type	 sTVFanClubTextGroup,object
sTVFanClubTextGroup:
	.word	gTVFanClubText00
	.word	gTVFanClubText01
	.word	gTVFanClubText02
	.word	gTVFanClubText03
	.word	gTVFanClubText04
	.word	gTVFanClubText05
	.word	gTVFanClubText06
	.word	gTVFanClubText07
	.size	 sTVFanClubTextGroup,32
	.align	2, 0
	.type	 sTVRecentHappeninssTextGroup,object
sTVRecentHappeninssTextGroup:
	.word	gTVRecentHappeningsText00
	.word	gTVRecentHappeningsText01
	.word	gTVRecentHappeningsText02
	.word	gTVRecentHappeningsText03
	.word	gTVRecentHappeningsText04
	.word	gTVRecentHappeningsText05
	.size	 sTVRecentHappeninssTextGroup,24
	.align	2, 0
	.type	 sTVFanClubOpinionsTextGroup,object
sTVFanClubOpinionsTextGroup:
	.word	gTVFanClubOpinionsText00
	.word	gTVFanClubOpinionsText01
	.word	gTVFanClubOpinionsText02
	.word	gTVFanClubOpinionsText03
	.word	gTVFanClubOpinionsText04
	.size	 sTVFanClubOpinionsTextGroup,20
	.align	2, 0
	.type	 sTVMassOutbreakTextGroup,object
sTVMassOutbreakTextGroup:
	.word	gTVMassOutbreakText00
	.size	 sTVMassOutbreakTextGroup,4
	.align	2, 0
	.type	 sTVPokemonTodaySuccessfulTextGroup,object
sTVPokemonTodaySuccessfulTextGroup:
	.word	gTVPokemonTodaySuccessfulText00
	.word	gTVPokemonTodaySuccessfulText01
	.word	gTVPokemonTodaySuccessfulText02
	.word	gTVPokemonTodaySuccessfulText03
	.word	gTVPokemonTodaySuccessfulText04
	.word	gTVPokemonTodaySuccessfulText05
	.word	gTVPokemonTodaySuccessfulText06
	.word	gTVPokemonTodaySuccessfulText07
	.word	gTVPokemonTodaySuccessfulText08
	.word	gTVPokemonTodaySuccessfulText09
	.word	gTVPokemonTodaySuccessfulText10
	.word	gTVPokemonTodaySuccessfulText11
	.size	 sTVPokemonTodaySuccessfulTextGroup,48
	.align	2, 0
	.type	 sTVTodaysSmartShopperTextGroup,object
sTVTodaysSmartShopperTextGroup:
	.word	gTVTodaysSmartShopperText00
	.word	gTVTodaysSmartShopperText01
	.word	gTVTodaysSmartShopperText02
	.word	gTVTodaysSmartShopperText03
	.word	gTVTodaysSmartShopperText04
	.word	gTVTodaysSmartShopperText05
	.word	gTVTodaysSmartShopperText06
	.word	gTVTodaysSmartShopperText07
	.word	gTVTodaysSmartShopperText08
	.word	gTVTodaysSmartShopperText09
	.word	gTVTodaysSmartShopperText10
	.word	gTVTodaysSmartShopperText11
	.word	gTVTodaysSmartShopperText12
	.size	 sTVTodaysSmartShopperTextGroup,52
	.align	2, 0
	.type	 sTVBravoTrainerTextGroup,object
sTVBravoTrainerTextGroup:
	.word	gTVBravoTrainerText00
	.word	gTVBravoTrainerText01
	.word	gTVBravoTrainerText02
	.word	gTVBravoTrainerText03
	.word	gTVBravoTrainerText04
	.word	gTVBravoTrainerText05
	.word	gTVBravoTrainerText06
	.word	gTVBravoTrainerText07
	.word	gTVBravoTrainerText08
	.size	 sTVBravoTrainerTextGroup,36
	.align	2, 0
	.type	 sTV3CheersForPokeblocksTextGroup,object
sTV3CheersForPokeblocksTextGroup:
	.word	gTV3CheersForPokeblocksText00
	.word	gTV3CheersForPokeblocksText01
	.word	gTV3CheersForPokeblocksText02
	.word	gTV3CheersForPokeblocksText03
	.word	gTV3CheersForPokeblocksText04
	.word	gTV3CheersForPokeblocksText05
	.size	 sTV3CheersForPokeblocksTextGroup,24
	.align	2, 0
	.type	 sTVBravoTrainerBattleTowerTextGroup,object
sTVBravoTrainerBattleTowerTextGroup:
	.word	gTVBravoTrainerBattleTowerText00
	.word	gTVBravoTrainerBattleTowerText01
	.word	gTVBravoTrainerBattleTowerText02
	.word	gTVBravoTrainerBattleTowerText03
	.word	gTVBravoTrainerBattleTowerText04
	.word	gTVBravoTrainerBattleTowerText05
	.word	gTVBravoTrainerBattleTowerText06
	.word	gTVBravoTrainerBattleTowerText07
	.word	gTVBravoTrainerBattleTowerText08
	.word	gTVBravoTrainerBattleTowerText09
	.word	gTVBravoTrainerBattleTowerText10
	.word	gTVBravoTrainerBattleTowerText11
	.word	gTVBravoTrainerBattleTowerText12
	.word	gTVBravoTrainerBattleTowerText13
	.word	gTVBravoTrainerBattleTowerText14
	.size	 sTVBravoTrainerBattleTowerTextGroup,60
	.align	2, 0
	.type	 sTVContestLiveUpdatesTextGroup,object
sTVContestLiveUpdatesTextGroup:
	.word	gTVContestLiveUpdatesText00
	.word	gTVContestLiveUpdatesText01
	.word	gTVContestLiveUpdatesText02
	.word	gTVContestLiveUpdatesText03
	.word	gTVContestLiveUpdatesText04
	.word	gTVContestLiveUpdatesText05
	.word	gTVContestLiveUpdatesText06
	.word	gTVContestLiveUpdatesText07
	.word	gTVContestLiveUpdatesText08
	.word	gTVContestLiveUpdatesText09
	.word	gTVContestLiveUpdatesText10
	.word	gTVContestLiveUpdatesText11
	.word	gTVContestLiveUpdatesText12
	.word	gTVContestLiveUpdatesText13
	.word	gTVContestLiveUpdatesText14
	.word	gTVContestLiveUpdatesText15
	.word	gTVContestLiveUpdatesText16
	.word	gTVContestLiveUpdatesText17
	.word	gTVContestLiveUpdatesText18
	.word	gTVContestLiveUpdatesText19
	.word	gTVContestLiveUpdatesText20
	.word	gTVContestLiveUpdatesText21
	.word	gTVContestLiveUpdatesText22
	.word	gTVContestLiveUpdatesText23
	.word	gTVContestLiveUpdatesText24
	.word	gTVContestLiveUpdatesText25
	.word	gTVContestLiveUpdatesText26
	.word	gTVContestLiveUpdatesText27
	.word	gTVContestLiveUpdatesText28
	.word	gTVContestLiveUpdatesText29
	.word	gTVContestLiveUpdatesText30
	.word	gTVContestLiveUpdatesText31
	.word	gTVContestLiveUpdatesText32
	.size	 sTVContestLiveUpdatesTextGroup,132
	.align	2, 0
	.type	 sTVPokemonBattleUpdateTextGroup,object
sTVPokemonBattleUpdateTextGroup:
	.word	gTVPokemonBattleUpdateText00
	.word	gTVPokemonBattleUpdateText01
	.word	gTVPokemonBattleUpdateText02
	.word	gTVPokemonBattleUpdateText03
	.word	gTVPokemonBattleUpdateText04
	.word	gTVPokemonBattleUpdateText05
	.word	gTVPokemonBattleUpdateText06
	.word	gTVPokemonBattleUpdateText07
	.size	 sTVPokemonBattleUpdateTextGroup,32
	.align	2, 0
	.type	 sTVTrainerFanClubSpecialTextGroup,object
sTVTrainerFanClubSpecialTextGroup:
	.word	gTVTrainerFanClubSpecialText00
	.word	gTVTrainerFanClubSpecialText01
	.word	gTVTrainerFanClubSpecialText02
	.word	gTVTrainerFanClubSpecialText03
	.word	gTVTrainerFanClubSpecialText04
	.word	gTVTrainerFanClubSpecialText05
	.size	 sTVTrainerFanClubSpecialTextGroup,24
	.align	2, 0
	.type	 sTVNameRaterTextGroup,object
sTVNameRaterTextGroup:
	.word	gTVNameRaterText00
	.word	gTVNameRaterText01
	.word	gTVNameRaterText02
	.word	gTVNameRaterText03
	.word	gTVNameRaterText04
	.word	gTVNameRaterText05
	.word	gTVNameRaterText06
	.word	gTVNameRaterText07
	.word	gTVNameRaterText08
	.word	gTVNameRaterText09
	.word	gTVNameRaterText10
	.word	gTVNameRaterText11
	.word	gTVNameRaterText12
	.word	gTVNameRaterText13
	.word	gTVNameRaterText14
	.word	gTVNameRaterText15
	.word	gTVNameRaterText16
	.word	gTVNameRaterText17
	.word	gTVNameRaterText18
	.size	 sTVNameRaterTextGroup,76
	.align	2, 0
	.type	 sTVPokemonContestLiveUpdates2TextGroup,object
sTVPokemonContestLiveUpdates2TextGroup:
	.word	gTVPokemonContestLiveUpdates2Text00
	.word	gTVPokemonContestLiveUpdates2Text01
	.word	gTVPokemonContestLiveUpdates2Text02
	.word	gTVPokemonContestLiveUpdates2Text03
	.size	 sTVPokemonContestLiveUpdates2TextGroup,16
	.align	2, 0
	.type	 sTVPokemonTodayFailedTextGroup,object
sTVPokemonTodayFailedTextGroup:
	.word	gTVPokemonTodayFailedText00
	.word	gTVPokemonTodayFailedText01
	.word	gTVPokemonTodayFailedText02
	.word	gTVPokemonTodayFailedText03
	.word	gTVPokemonTodayFailedText04
	.word	gTVPokemonTodayFailedText05
	.word	gTVPokemonTodayFailedText06
	.size	 sTVPokemonTodayFailedTextGroup,28
	.align	2, 0
	.type	 sTVPokemonAnslerTextGroup,object
sTVPokemonAnslerTextGroup:
	.word	gTVPokemonAnglerText00
	.word	gTVPokemonAnglerText01
	.size	 sTVPokemonAnslerTextGroup,8
	.align	2, 0
	.type	 sTVWorldOfMastersTextGroup,object
sTVWorldOfMastersTextGroup:
	.word	gTVWorldOfMastersText00
	.word	gTVWorldOfMastersText01
	.word	gTVWorldOfMastersText02
	.size	 sTVWorldOfMastersTextGroup,12
	.align	2, 0
	.type	 sTVTodaysRivalTrainerTextGroup,object
sTVTodaysRivalTrainerTextGroup:
	.word	gTVTodaysRivalTrainerText00
	.word	gTVTodaysRivalTrainerText01
	.word	gTVTodaysRivalTrainerText02
	.word	gTVTodaysRivalTrainerText03
	.word	gTVTodaysRivalTrainerText04
	.word	gTVTodaysRivalTrainerText05
	.word	gTVTodaysRivalTrainerText06
	.word	gTVTodaysRivalTrainerText07
	.word	gTVTodaysRivalTrainerText08
	.word	gTVTodaysRivalTrainerText09
	.word	gTVTodaysRivalTrainerText10
	.size	 sTVTodaysRivalTrainerTextGroup,44
	.align	2, 0
	.type	 sTVDewfordTrendWatcherNetworkTextGroup,object
sTVDewfordTrendWatcherNetworkTextGroup:
	.word	gTVDewfordTrendWatcherNetworkText00
	.word	gTVDewfordTrendWatcherNetworkText01
	.word	gTVDewfordTrendWatcherNetworkText02
	.word	gTVDewfordTrendWatcherNetworkText03
	.word	gTVDewfordTrendWatcherNetworkText04
	.word	gTVDewfordTrendWatcherNetworkText05
	.word	gTVDewfordTrendWatcherNetworkText06
	.size	 sTVDewfordTrendWatcherNetworkTextGroup,28
	.align	2, 0
	.type	 sTVHoennTreasureInvestisatorsTextGroup,object
sTVHoennTreasureInvestisatorsTextGroup:
	.word	gTVHoennTreasureInvestigatorsText00
	.word	gTVHoennTreasureInvestigatorsText01
	.word	gTVHoennTreasureInvestigatorsText02
	.size	 sTVHoennTreasureInvestisatorsTextGroup,12
	.align	2, 0
	.type	 sTVFindThatGamerTextGroup,object
sTVFindThatGamerTextGroup:
	.word	gTVFindThatGamerText00
	.word	gTVFindThatGamerText01
	.word	gTVFindThatGamerText02
	.word	gTVFindThatGamerText03
	.size	 sTVFindThatGamerTextGroup,16
	.align	2, 0
	.type	 sTVBreakinsNewsTextGroup,object
sTVBreakinsNewsTextGroup:
	.word	gTVBreakingNewsText00
	.word	gTVBreakingNewsText01
	.word	gTVBreakingNewsText02
	.word	gTVBreakingNewsText03
	.word	gTVBreakingNewsText04
	.word	gTVBreakingNewsText05
	.word	gTVBreakingNewsText06
	.word	gTVBreakingNewsText07
	.word	gTVBreakingNewsText08
	.word	gTVBreakingNewsText09
	.word	gTVBreakingNewsText10
	.word	gTVBreakingNewsText11
	.word	gTVBreakingNewsText12
	.size	 sTVBreakinsNewsTextGroup,52
	.align	2, 0
	.type	 sTVSecretBaseVisitTextGroup,object
sTVSecretBaseVisitTextGroup:
	.word	gTVSecretBaseVisitText00
	.word	gTVSecretBaseVisitText01
	.word	gTVSecretBaseVisitText02
	.word	gTVSecretBaseVisitText03
	.word	gTVSecretBaseVisitText04
	.word	gTVSecretBaseVisitText05
	.word	gTVSecretBaseVisitText06
	.word	gTVSecretBaseVisitText07
	.word	gTVSecretBaseVisitText08
	.word	gTVSecretBaseVisitText09
	.word	gTVSecretBaseVisitText10
	.word	gTVSecretBaseVisitText11
	.word	gTVSecretBaseVisitText12
	.word	gTVSecretBaseVisitText13
	.size	 sTVSecretBaseVisitTextGroup,56
	.align	2, 0
	.type	 sTVPokemonLotteryWinnerFlashReportTextGroup,object
sTVPokemonLotteryWinnerFlashReportTextGroup:
	.word	gTVPokemonLotteryWinnerFlashReportText00
	.size	 sTVPokemonLotteryWinnerFlashReportTextGroup,4
	.align	2, 0
	.type	 sTVThePokemonBattleSeminarTextGroup,object
sTVThePokemonBattleSeminarTextGroup:
	.word	gTVThePokemonBattleSeminarText00
	.word	gTVThePokemonBattleSeminarText01
	.word	gTVThePokemonBattleSeminarText02
	.word	gTVThePokemonBattleSeminarText03
	.word	gTVThePokemonBattleSeminarText04
	.word	gTVThePokemonBattleSeminarText05
	.word	gTVThePokemonBattleSeminarText06
	.size	 sTVThePokemonBattleSeminarTextGroup,28
	.align	2, 0
	.type	 sTVTrainerFanClubTextGroup,object
sTVTrainerFanClubTextGroup:
	.word	gTVTrainerFanClubText00
	.word	gTVTrainerFanClubText01
	.word	gTVTrainerFanClubText02
	.word	gTVTrainerFanClubText03
	.word	gTVTrainerFanClubText04
	.word	gTVTrainerFanClubText05
	.word	gTVTrainerFanClubText06
	.word	gTVTrainerFanClubText07
	.word	gTVTrainerFanClubText08
	.word	gTVTrainerFanClubText09
	.word	gTVTrainerFanClubText10
	.word	gTVTrainerFanClubText11
	.size	 sTVTrainerFanClubTextGroup,48
	.align	2, 0
	.type	 sTVCutiesTextGroup,object
sTVCutiesTextGroup:
	.word	gTVCutiesText00
	.word	gTVCutiesText01
	.word	gTVCutiesText02
	.word	gTVCutiesText03
	.word	gTVCutiesText04
	.word	gTVCutiesText05
	.word	gTVCutiesText06
	.word	gTVCutiesText07
	.word	gTVCutiesText08
	.word	gTVCutiesText09
	.word	gTVCutiesText10
	.word	gTVCutiesText11
	.word	gTVCutiesText12
	.word	gTVCutiesText13
	.word	gTVCutiesText14
	.word	gTVCutiesText15
	.size	 sTVCutiesTextGroup,64
	.align	2, 0
	.type	 sTVPokemonNewsBattleFrontierTextGroup,object
sTVPokemonNewsBattleFrontierTextGroup:
	.word	gTVPokemonNewsBattleFrontierText00
	.word	gTVPokemonNewsBattleFrontierText01
	.word	gTVPokemonNewsBattleFrontierText02
	.word	gTVPokemonNewsBattleFrontierText03
	.word	gTVPokemonNewsBattleFrontierText04
	.word	gTVPokemonNewsBattleFrontierText05
	.word	gTVPokemonNewsBattleFrontierText06
	.word	gTVPokemonNewsBattleFrontierText07
	.word	gTVPokemonNewsBattleFrontierText08
	.word	gTVPokemonNewsBattleFrontierText09
	.word	gTVPokemonNewsBattleFrontierText10
	.word	gTVPokemonNewsBattleFrontierText11
	.word	gTVPokemonNewsBattleFrontierText12
	.word	gTVPokemonNewsBattleFrontierText13
	.word	gTVPokemonNewsBattleFrontierText14
	.word	gTVPokemonNewsBattleFrontierText15
	.word	gTVPokemonNewsBattleFrontierText16
	.word	gTVPokemonNewsBattleFrontierText17
	.word	gTVPokemonNewsBattleFrontierText18
	.size	 sTVPokemonNewsBattleFrontierTextGroup,76
	.align	2, 0
	.type	 sTVWhatsNo1InHoennTodayTextGroup,object
sTVWhatsNo1InHoennTodayTextGroup:
	.word	gTVWhatsNo1InHoennTodayText00
	.word	gTVWhatsNo1InHoennTodayText01
	.word	gTVWhatsNo1InHoennTodayText02
	.word	gTVWhatsNo1InHoennTodayText03
	.word	gTVWhatsNo1InHoennTodayText04
	.word	gTVWhatsNo1InHoennTodayText05
	.word	gTVWhatsNo1InHoennTodayText06
	.word	gTVWhatsNo1InHoennTodayText07
	.word	gTVWhatsNo1InHoennTodayText08
	.size	 sTVWhatsNo1InHoennTodayTextGroup,36
	.align	2, 0
	.type	 sTVSecretBaseSecretsTextGroup,object
sTVSecretBaseSecretsTextGroup:
	.word	gTVSecretBaseSecretsText00
	.word	gTVSecretBaseSecretsText01
	.word	gTVSecretBaseSecretsText02
	.word	gTVSecretBaseSecretsText03
	.word	gTVSecretBaseSecretsText04
	.word	gTVSecretBaseSecretsText05
	.word	gTVSecretBaseSecretsText06
	.word	gTVSecretBaseSecretsText07
	.word	gTVSecretBaseSecretsText08
	.word	gTVSecretBaseSecretsText09
	.word	gTVSecretBaseSecretsText10
	.word	gTVSecretBaseSecretsText11
	.word	gTVSecretBaseSecretsText12
	.word	gTVSecretBaseSecretsText13
	.word	gTVSecretBaseSecretsText14
	.word	gTVSecretBaseSecretsText15
	.word	gTVSecretBaseSecretsText16
	.word	gTVSecretBaseSecretsText17
	.word	gTVSecretBaseSecretsText18
	.word	gTVSecretBaseSecretsText19
	.word	gTVSecretBaseSecretsText20
	.word	gTVSecretBaseSecretsText21
	.word	gTVSecretBaseSecretsText22
	.word	gTVSecretBaseSecretsText23
	.word	gTVSecretBaseSecretsText24
	.word	gTVSecretBaseSecretsText25
	.word	gTVSecretBaseSecretsText26
	.word	gTVSecretBaseSecretsText27
	.word	gTVSecretBaseSecretsText28
	.word	gTVSecretBaseSecretsText29
	.word	gTVSecretBaseSecretsText30
	.word	gTVSecretBaseSecretsText31
	.word	gTVSecretBaseSecretsText32
	.word	gTVSecretBaseSecretsText33
	.word	gTVSecretBaseSecretsText34
	.word	gTVSecretBaseSecretsText35
	.word	gTVSecretBaseSecretsText36
	.word	gTVSecretBaseSecretsText37
	.word	gTVSecretBaseSecretsText38
	.word	gTVSecretBaseSecretsText39
	.word	gTVSecretBaseSecretsText40
	.word	gTVSecretBaseSecretsText41
	.word	gTVSecretBaseSecretsText42
	.size	 sTVSecretBaseSecretsTextGroup,172
	.align	2, 0
	.type	 sTVSafariFanClubTextGroup,object
sTVSafariFanClubTextGroup:
	.word	gTVSafariFanClubText00
	.word	gTVSafariFanClubText01
	.word	gTVSafariFanClubText02
	.word	gTVSafariFanClubText03
	.word	gTVSafariFanClubText04
	.word	gTVSafariFanClubText05
	.word	gTVSafariFanClubText06
	.word	gTVSafariFanClubText07
	.word	gTVSafariFanClubText08
	.word	gTVSafariFanClubText09
	.word	gTVSafariFanClubText10
	.size	 sTVSafariFanClubTextGroup,44
	.align	2, 0
	.type	 sTVInSearchOfTrainersTextGroup,object
sTVInSearchOfTrainersTextGroup:
	.word	gTVInSearchOfTrainersText00
	.word	gTVInSearchOfTrainersText01
	.word	gTVInSearchOfTrainersText02
	.word	gTVInSearchOfTrainersText03
	.word	gTVInSearchOfTrainersText04
	.word	gTVInSearchOfTrainersText05
	.word	gTVInSearchOfTrainersText06
	.word	gTVInSearchOfTrainersText07
	.word	gTVInSearchOfTrainersText08
	.size	 sTVInSearchOfTrainersTextGroup,36
	.globl	sTVSecretBaseSecretsStateLookup
	.type	 sTVSecretBaseSecretsStateLookup,object
sTVSecretBaseSecretsStateLookup:
	.byte	0xa
	.byte	0xb
	.byte	0xc
	.byte	0xd
	.byte	0xe
	.byte	0xf
	.byte	0x10
	.byte	0x11
	.byte	0x12
	.byte	0x13
	.byte	0x14
	.byte	0x17
	.byte	0x18
	.byte	0x19
	.byte	0x1a
	.byte	0x1b
	.byte	0x1c
	.byte	0x1d
	.byte	0x1e
	.byte	0x1f
	.byte	0x20
	.byte	0x21
	.byte	0x22
	.byte	0x23
	.byte	0x24
	.byte	0x25
	.byte	0x26
	.byte	0x27
	.byte	0x28
	.byte	0x29
	.byte	0x2a
	.byte	0x2b
	.size	 sTVSecretBaseSecretsStateLookup,32
.text
	.align	2, 0
	.globl	ClearTVShowData
	.type	 ClearTVShowData,function
	.thumb_func
ClearTVShowData:
	push	{r4, r5, r6, r7, lr}
	mov	r3, #0x0
	ldr	r6, .L13
	mov	r5, #0x0
	ldr	r7, .L13+0x4
.L6:
	ldr	r0, [r6]
	lsl	r1, r3, #0x3
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldr	r2, .L13+0x8
	add	r0, r0, r2
	strb	r5, [r0]
	ldr	r0, [r6]
	add	r0, r0, r1
	add	r2, r2, #0x1
	add	r0, r0, r2
	strb	r5, [r0]
	mov	r2, #0x0
	add	r4, r3, #0x1
	add	r3, r1, #0
.L10:
	ldr	r0, [r6]
	add	r1, r2, r3
	add	r0, r0, r7
	add	r0, r0, r1
	strb	r5, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x21
	bls	.L10	@cond_branch
	lsl	r0, r4, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x18
	bls	.L6	@cond_branch
	bl	ClearPokemonNews
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L14:
	.align	2, 0
.L13:
	.word	gSaveBlock1Ptr
	.word	0x27ce
	.word	0x27cc
.Lfe1:
	.size	 ClearTVShowData,.Lfe1-ClearTVShowData
	.align	2, 0
	.globl	special_0x44
	.type	 special_0x44,function
	.thumb_func
special_0x44:
	push	{r4, r5, r6, r7, lr}
	mov	r4, #0x5
	ldr	r1, .L35
	ldr	r0, [r1]
	mov	r2, #0xa2
	lsl	r2, r2, #0x6
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L17	@cond_branch
	add	r3, r1, #0
	sub	r2, r2, #0xb4
.L18:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x17
	bhi	.L17	@cond_branch
	ldr	r0, [r3]
	lsl	r1, r4, #0x3
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L18	@cond_branch
.L17:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r4, #0
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r7, r5, #0
	ldr	r6, .L35
.L22:
	ldr	r1, [r6]
	lsl	r0, r5, #0x3
	add	r0, r0, r5
	lsl	r4, r0, #0x2
	add	r1, r1, r4
	ldr	r0, .L35+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	bl	GetTVChannelByShowType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	beq	.L25	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, r4
	ldr	r1, .L35+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	b	.L34
.L36:
	.align	2, 0
.L35:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	0x27cd
.L25:
	ldr	r2, .L37
	add	r0, r4, r2
	ldr	r1, [r6]
	add	r1, r1, r0
	ldrh	r0, [r1, #0x16]
	cmp	r0, #0
	bne	.L27	@cond_branch
	ldrb	r0, [r1, #0x1]
.L34:
	cmp	r0, #0x1
	bne	.L27	@cond_branch
	add	r0, r5, #0
	b	.L33
.L38:
	.align	2, 0
.L37:
	.word	0x27cc
.L27:
	cmp	r5, #0
	bne	.L29	@cond_branch
	mov	r5, #0x17
	b	.L24
.L29:
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L24:
	cmp	r5, r7
	bne	.L22	@cond_branch
	mov	r0, #0xff
.L33:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 special_0x44,.Lfe2-special_0x44
	.align	2, 0
	.globl	FindAnyTVShowOnTheAir
	.type	 FindAnyTVShowOnTheAir,function
	.thumb_func
FindAnyTVShowOnTheAir:
	push	{lr}
	bl	special_0x44
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xff
	bne	.L40	@cond_branch
	mov	r0, #0xff
	b	.L42
.L40:
	ldr	r0, .L43
	ldr	r2, [r0]
	ldr	r3, .L43+0x4
	add	r0, r2, r3
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L41	@cond_branch
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r2, r0
	ldr	r2, .L43+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0x29
	bne	.L41	@cond_branch
	bl	FindFirstActiveTVShowThatIsNotAMassOutbreak
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L42
.L44:
	.align	2, 0
.L43:
	.word	gSaveBlock1Ptr
	.word	0x2b90
	.word	0x27cc
.L41:
	add	r0, r1, #0
.L42:
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 FindAnyTVShowOnTheAir,.Lfe3-FindAnyTVShowOnTheAir
	.align	2, 0
	.globl	UpdateTVScreensOnMap
	.type	 UpdateTVScreensOnMap,function
	.thumb_func
UpdateTVScreensOnMap:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, .L56
	bl	FlagSet
	bl	CheckForBigMovieOrEmergencyNewsOnTV
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L55	@cond_branch
	cmp	r0, #0x2
	beq	.L46	@cond_branch
	ldr	r0, .L56+0x4
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x4]
	cmp	r0, #0xd
	bne	.L50	@cond_branch
.L55:
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x3
	bl	SetTVMetatilesOnMap
	b	.L46
.L57:
	.align	2, 0
.L56:
	.word	0x891
	.word	gSaveBlock1Ptr
.L50:
	ldr	r0, .L58
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L46	@cond_branch
	bl	FindAnyTVShowOnTheAir
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	bne	.L53	@cond_branch
	bl	FindAnyTVNewsOnTheAir
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	bne	.L53	@cond_branch
	bl	IsTVShowInSearchOfTrainersAiring
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L46	@cond_branch
.L53:
	ldr	r0, .L58+0x4
	bl	FlagClear
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x3
	bl	SetTVMetatilesOnMap
.L46:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L59:
	.align	2, 0
.L58:
	.word	0x892
	.word	0x891
.Lfe4:
	.size	 UpdateTVScreensOnMap,.Lfe4-UpdateTVScreensOnMap
	.align	2, 0
	.globl	SetTVMetatilesOnMap
	.type	 SetTVMetatilesOnMap,function
	.thumb_func
SetTVMetatilesOnMap:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r9, r0
	mov	sl, r1
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r5, #0x0
	cmp	r5, sl
	bge	.L62	@cond_branch
	mov	r1, #0xc0
	lsl	r1, r1, #0x4
	add	r0, r1, #0
	mov	r8, r2
	mov	r1, r8
	orr	r1, r1, r0
	mov	r8, r1
.L64:
	mov	r4, #0x0
	add	r7, r5, #0x1
	cmp	r4, r9
	bge	.L63	@cond_branch
	mov	r0, r8
	lsl	r6, r0, #0x10
.L68:
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridGetMetatileBehaviorAt
	cmp	r0, #0x86
	bne	.L67	@cond_branch
	add	r0, r4, #0
	add	r1, r5, #0
	lsr	r2, r6, #0x10
	bl	MapGridSetMetatileIdAt
.L67:
	add	r4, r4, #0x1
	cmp	r4, r9
	blt	.L68	@cond_branch
.L63:
	add	r5, r7, #0
	cmp	r5, sl
	blt	.L64	@cond_branch
.L62:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 SetTVMetatilesOnMap,.Lfe5-SetTVMetatilesOnMap
	.align	2, 0
	.globl	TurnOffTVScreen
	.type	 TurnOffTVScreen,function
	.thumb_func
TurnOffTVScreen:
	push	{lr}
	ldr	r1, .L73
	ldr	r0, [r1]
	ldr	r1, [r1, #0x4]
	mov	r2, #0x2
	bl	SetTVMetatilesOnMap
	bl	DrawWholeMapView
	pop	{r0}
	bx	r0
.L74:
	.align	2, 0
.L73:
	.word	gBackupMapLayout
.Lfe6:
	.size	 TurnOffTVScreen,.Lfe6-TurnOffTVScreen
	.align	2, 0
	.globl	TurnOnTVScreen
	.type	 TurnOnTVScreen,function
	.thumb_func
TurnOnTVScreen:
	push	{lr}
	ldr	r1, .L76
	ldr	r0, [r1]
	ldr	r1, [r1, #0x4]
	mov	r2, #0x3
	bl	SetTVMetatilesOnMap
	bl	DrawWholeMapView
	pop	{r0}
	bx	r0
.L77:
	.align	2, 0
.L76:
	.word	gBackupMapLayout
.Lfe7:
	.size	 TurnOnTVScreen,.Lfe7-TurnOnTVScreen
	.align	2, 0
	.globl	special_0x45
	.type	 special_0x45,function
	.thumb_func
special_0x45:
	ldr	r0, .L79
	ldr	r1, [r0]
	ldr	r0, .L79+0x4
	ldrh	r2, [r0]
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L79+0x8
	add	r1, r1, r0
	ldrb	r0, [r1]
	bx	lr
.L80:
	.align	2, 0
.L79:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
.Lfe8:
	.size	 special_0x45,.Lfe8-special_0x45
	.align	2, 0
	.globl	FindFirstActiveTVShowThatIsNotAMassOutbreak
	.type	 FindFirstActiveTVShowThatIsNotAMassOutbreak,function
	.thumb_func
FindFirstActiveTVShowThatIsNotAMassOutbreak:
	push	{r4, lr}
	mov	r2, #0x0
	ldr	r0, .L89
	ldr	r3, [r0]
.L85:
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r3, r0
	ldr	r4, .L89+0x4
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L84	@cond_branch
	cmp	r0, #0x29
	beq	.L84	@cond_branch
	add	r4, r4, #0x1
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L84	@cond_branch
	add	r0, r2, #0
	b	.L88
.L90:
	.align	2, 0
.L89:
	.word	gSaveBlock1Ptr
	.word	0x27cc
.L84:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x17
	bls	.L85	@cond_branch
	mov	r0, #0xff
.L88:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 FindFirstActiveTVShowThatIsNotAMassOutbreak,.Lfe9-FindFirstActiveTVShowThatIsNotAMassOutbreak
	.align	2, 0
	.globl	special_0x4a
	.type	 special_0x4a,function
	.thumb_func
special_0x4a:
	push	{lr}
	ldr	r3, .L95
	ldr	r2, .L95+0x4
	ldrh	r1, [r2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L95+0x8
	add	r0, r0, r1
	ldr	r3, [r3]
	add	r0, r3, r0
	ldrb	r0, [r0]
	cmp	r0, #0x29
	bne	.L92	@cond_branch
	ldr	r1, .L95+0xc
	add	r0, r3, r1
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L92	@cond_branch
	bl	FindFirstActiveTVShowThatIsNotAMassOutbreak
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L94
.L96:
	.align	2, 0
.L95:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	0x2b90
.L92:
	ldrb	r0, [r2]
.L94:
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 special_0x4a,.Lfe10-special_0x4a
	.align	2, 0
	.globl	ResetGabbyAndTy
	.type	 ResetGabbyAndTy,function
	.thumb_func
ResetGabbyAndTy:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	ldr	r3, .L98
	ldr	r2, [r3]
	ldr	r1, .L98+0x4
	add	r0, r2, r1
	mov	r4, #0x0
	mov	sl, r4
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r4, .L98+0x8
	add	r0, r2, r4
	strh	r1, [r0]
	add	r4, r4, #0x2
	add	r0, r2, r4
	strh	r1, [r0]
	ldr	r0, .L98+0xc
	add	r1, r2, r0
	ldr	r0, .L98+0x10
	strh	r0, [r1]
	add	r4, r4, #0x6
	add	r2, r2, r4
	ldrb	r1, [r2]
	mov	r0, #0x2
	neg	r0, r0
	mov	r9, r0
	and	r0, r0, r1
	strb	r0, [r2]
	ldr	r1, [r3]
	add	r1, r1, r4
	ldrb	r2, [r1]
	mov	r0, #0x3
	neg	r0, r0
	mov	r8, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r1, [r3]
	add	r1, r1, r4
	ldrb	r2, [r1]
	mov	r6, #0x5
	neg	r6, r6
	add	r0, r6, #0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r1, [r3]
	add	r1, r1, r4
	ldrb	r2, [r1]
	mov	r5, #0x9
	neg	r5, r5
	add	r0, r5, #0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r1, [r3]
	add	r1, r1, r4
	ldrb	r2, [r1]
	mov	r0, #0x11
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r1, [r3]
	add	r1, r1, r4
	ldrb	r2, [r1]
	mov	r0, #0x1f
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r3]
	ldr	r2, .L98+0x14
	add	r0, r0, r2
	ldrb	r1, [r0]
	mov	r4, r9
	and	r4, r4, r1
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r0, r0, r2
	ldrb	r1, [r0]
	mov	r4, r8
	and	r4, r4, r1
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r0, r0, r2
	ldrb	r1, [r0]
	and	r6, r6, r1
	strb	r6, [r0]
	ldr	r0, [r3]
	add	r0, r0, r2
	ldrb	r1, [r0]
	and	r5, r5, r1
	strb	r5, [r0]
	ldr	r1, [r3]
	add	r1, r1, r2
	ldrb	r2, [r1]
	mov	r0, #0xf
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r3]
	ldr	r1, .L98+0x18
	add	r0, r0, r1
	mov	r4, sl
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r1, r1, #0x1
	add	r0, r0, r1
	strb	r4, [r0]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L99:
	.align	2, 0
.L98:
	.word	gSaveBlock1Ptr
	.word	0x2ba4
	.word	0x2ba6
	.word	0x2baa
	.word	0xffff
	.word	0x2baf
	.word	0x2bac
.Lfe11:
	.size	 ResetGabbyAndTy,.Lfe11-ResetGabbyAndTy
	.align	2, 0
	.globl	GabbyAndTyBeforeInterview
	.type	 GabbyAndTyBeforeInterview,function
	.thumb_func
GabbyAndTyBeforeInterview:
	push	{r4, lr}
	ldr	r3, .L119
	ldr	r2, [r3]
	ldr	r0, .L119+0x4
	mov	ip, r0
	ldrh	r1, [r0, #0x6]
	ldr	r4, .L119+0x8
	add	r0, r2, r4
	strh	r1, [r0]
	mov	r0, ip
	ldrh	r1, [r0, #0x26]
	add	r4, r4, #0x2
	add	r0, r2, r4
	strh	r1, [r0]
	mov	r0, ip
	ldrh	r1, [r0, #0x22]
	add	r4, r4, #0x2
	add	r0, r2, r4
	strh	r1, [r0]
	ldr	r0, .L119+0xc
	add	r2, r2, r0
	ldrb	r1, [r2]
	add	r0, r1, #0
	add	r4, r3, #0
	cmp	r0, #0xff
	beq	.L101	@cond_branch
	add	r0, r1, #0x1
	strb	r0, [r2]
.L101:
	ldr	r2, [r4]
	mov	r0, ip
	ldrb	r1, [r0, #0x5]
	lsl	r1, r1, #0x1f
	ldr	r0, .L119+0x10
	add	r2, r2, r0
	lsr	r1, r1, #0x1f
	ldrb	r3, [r2]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	mov	r1, ip
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L102	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L119+0x10
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r2, #0x2
	orr	r1, r1, r2
	b	.L116
.L120:
	.align	2, 0
.L119:
	.word	gSaveBlock1Ptr
	.word	gBattleResults
	.word	0x2ba4
	.word	0x2bad
	.word	0x2bae
.L102:
	ldr	r0, [r4]
	ldr	r1, .L121
	add	r0, r0, r1
	ldrb	r2, [r0]
	mov	r1, #0x3
	neg	r1, r1
	and	r1, r1, r2
.L116:
	strb	r1, [r0]
	mov	r1, ip
	ldrb	r0, [r1, #0x3]
	cmp	r0, #0
	beq	.L104	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L121
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	b	.L117
.L122:
	.align	2, 0
.L121:
	.word	0x2bae
.L104:
	ldr	r0, [r4]
	ldr	r1, .L123
	add	r0, r0, r1
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
.L117:
	strb	r1, [r0]
	mov	r0, ip
	ldrb	r1, [r0, #0x5]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L106	@cond_branch
	mov	r1, #0x0
	mov	r0, ip
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L106	@cond_branch
.L109:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xa
	bhi	.L113	@cond_branch
	mov	r0, ip
	add	r0, r0, #0x36
	add	r0, r1, r0
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L109	@cond_branch
	ldr	r0, [r4]
	ldr	r4, .L123
	add	r0, r0, r4
	b	.L118
.L124:
	.align	2, 0
.L123:
	.word	0x2bae
.L106:
	ldr	r0, [r4]
	ldr	r1, .L125
	add	r0, r0, r1
.L118:
	ldrb	r1, [r0]
	mov	r2, #0x8
	orr	r1, r1, r2
	strb	r1, [r0]
.L113:
	bl	TakeTVShowInSearchOfTrainersOffTheAir
	ldr	r0, .L125+0x4
	ldr	r0, [r0]
	ldr	r4, .L125+0x8
	add	r0, r0, r4
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L114	@cond_branch
	mov	r0, #0x1
	bl	FlagSet
.L114:
	pop	{r4}
	pop	{r0}
	bx	r0
.L126:
	.align	2, 0
.L125:
	.word	0x2bae
	.word	gSaveBlock1Ptr
	.word	0x2ba8
.Lfe12:
	.size	 GabbyAndTyBeforeInterview,.Lfe12-GabbyAndTyBeforeInterview
	.align	2, 0
	.globl	GabbyAndTyAfterInterview
	.type	 GabbyAndTyAfterInterview,function
	.thumb_func
GabbyAndTyAfterInterview:
	push	{r4, r5, r6, lr}
	ldr	r5, .L128
	ldr	r2, [r5]
	ldr	r6, .L128+0x4
	add	r0, r2, r6
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1f
	ldr	r4, .L128+0x8
	add	r2, r2, r4
	lsr	r1, r1, #0x1f
	ldrb	r3, [r2]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	ldr	r2, [r5]
	add	r0, r2, r6
	ldrb	r0, [r0]
	add	r2, r2, r4
	mov	r1, #0x2
	and	r1, r1, r0
	ldrb	r3, [r2]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	ldr	r2, [r5]
	add	r0, r2, r6
	ldrb	r0, [r0]
	add	r2, r2, r4
	mov	r1, #0x4
	and	r1, r1, r0
	ldrb	r3, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	ldr	r2, [r5]
	add	r0, r2, r6
	ldrb	r0, [r0]
	add	r2, r2, r4
	mov	r1, #0x8
	and	r1, r1, r0
	ldrb	r3, [r2]
	mov	r0, #0x9
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	ldr	r1, [r5]
	add	r1, r1, r6
	ldrb	r0, [r1]
	mov	r2, #0x10
	orr	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r5]
	ldr	r1, .L128+0xc
	ldrb	r1, [r1, #0x14]
	ldr	r2, .L128+0x10
	add	r0, r0, r2
	strb	r1, [r0]
	mov	r0, #0x6
	bl	IncrementGameStat
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L129:
	.align	2, 0
.L128:
	.word	gSaveBlock1Ptr
	.word	0x2bae
	.word	0x2baf
	.word	gMapHeader
	.word	0x2bac
.Lfe13:
	.size	 GabbyAndTyAfterInterview,.Lfe13-GabbyAndTyAfterInterview
	.align	2, 0
	.globl	TakeTVShowInSearchOfTrainersOffTheAir
	.type	 TakeTVShowInSearchOfTrainersOffTheAir,function
	.thumb_func
TakeTVShowInSearchOfTrainersOffTheAir:
	ldr	r0, .L131
	ldr	r1, [r0]
	ldr	r0, .L131+0x4
	add	r1, r1, r0
	ldrb	r2, [r1]
	mov	r0, #0x11
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	bx	lr
.L132:
	.align	2, 0
.L131:
	.word	gSaveBlock1Ptr
	.word	0x2bae
.Lfe14:
	.size	 TakeTVShowInSearchOfTrainersOffTheAir,.Lfe14-TakeTVShowInSearchOfTrainersOffTheAir
	.align	2, 0
	.globl	GabbyAndTyGetBattleNum
	.type	 GabbyAndTyGetBattleNum,function
	.thumb_func
GabbyAndTyGetBattleNum:
	push	{lr}
	ldr	r0, .L136
	ldr	r0, [r0]
	ldr	r2, .L136+0x4
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0x5
	bls	.L135	@cond_branch
	ldrb	r0, [r1]
	mov	r1, #0x3
	bl	__umodsi3
	add	r0, r0, #0x6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L135:
	pop	{r1}
	bx	r1
.L137:
	.align	2, 0
.L136:
	.word	gSaveBlock1Ptr
	.word	0x2bad
.Lfe15:
	.size	 GabbyAndTyGetBattleNum,.Lfe15-GabbyAndTyGetBattleNum
	.align	2, 0
	.globl	IsTVShowInSearchOfTrainersAiring
	.type	 IsTVShowInSearchOfTrainersAiring,function
	.thumb_func
IsTVShowInSearchOfTrainersAiring:
	ldr	r0, .L139
	ldr	r0, [r0]
	ldr	r1, .L139+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1f
	bx	lr
.L140:
	.align	2, 0
.L139:
	.word	gSaveBlock1Ptr
	.word	0x2bae
.Lfe16:
	.size	 IsTVShowInSearchOfTrainersAiring,.Lfe16-IsTVShowInSearchOfTrainersAiring
	.align	2, 0
	.globl	GabbyAndTyGetLastQuote
	.type	 GabbyAndTyGetLastQuote,function
	.thumb_func
GabbyAndTyGetLastQuote:
	push	{r4, r5, lr}
	ldr	r5, .L144
	ldr	r0, [r5]
	ldr	r2, .L144+0x4
	add	r1, r0, r2
	ldrh	r0, [r1]
	ldr	r4, .L144+0x8
	cmp	r0, r4
	beq	.L142	@cond_branch
	ldr	r0, .L144+0xc
	ldrh	r1, [r1]
	bl	CopyEasyChatWord
	ldr	r1, [r5]
	ldr	r0, .L144+0x4
	add	r1, r1, r0
	ldrh	r2, [r1]
	add	r0, r4, #0
	orr	r0, r0, r2
	strh	r0, [r1]
	mov	r0, #0x1
	b	.L143
.L145:
	.align	2, 0
.L144:
	.word	gSaveBlock1Ptr
	.word	0x2baa
	.word	0xffff
	.word	gStringVar1
.L142:
	mov	r0, #0x0
.L143:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 GabbyAndTyGetLastQuote,.Lfe17-GabbyAndTyGetLastQuote
	.align	2, 0
	.globl	GabbyAndTyGetLastBattleTrivia
	.type	 GabbyAndTyGetLastBattleTrivia,function
	.thumb_func
GabbyAndTyGetLastBattleTrivia:
	push	{lr}
	ldr	r0, .L152
	ldr	r0, [r0]
	ldr	r1, .L152+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L147	@cond_branch
	mov	r0, #0x1
	b	.L151
.L153:
	.align	2, 0
.L152:
	.word	gSaveBlock1Ptr
	.word	0x2baf
.L147:
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L148	@cond_branch
	mov	r0, #0x2
	b	.L151
.L148:
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L149	@cond_branch
	mov	r0, #0x3
	b	.L151
.L149:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L150	@cond_branch
	mov	r0, #0x0
	b	.L151
.L150:
	mov	r0, #0x4
.L151:
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 GabbyAndTyGetLastBattleTrivia,.Lfe18-GabbyAndTyGetLastBattleTrivia
	.align	2, 0
	.globl	GabbyAndTySetScriptVarsToEventObjectLocalIds
	.type	 GabbyAndTySetScriptVarsToEventObjectLocalIds,function
	.thumb_func
GabbyAndTySetScriptVarsToEventObjectLocalIds:
	push	{lr}
	bl	GabbyAndTyGetBattleNum
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x7
	bhi	.L155	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L167
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L168:
	.align	2, 0
.L167:
	.word	.L164
	.align	2, 0
	.align	2, 0
.L164:
	.word	.L156
	.word	.L157
	.word	.L158
	.word	.L159
	.word	.L160
	.word	.L161
	.word	.L162
	.word	.L163
.L156:
	ldr	r1, .L169
	mov	r0, #0xe
	strh	r0, [r1]
	ldr	r1, .L169+0x4
	mov	r0, #0xd
	b	.L166
.L170:
	.align	2, 0
.L169:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L157:
	ldr	r1, .L171
	mov	r0, #0x5
	strh	r0, [r1]
	ldr	r1, .L171+0x4
	mov	r0, #0x6
	b	.L166
.L172:
	.align	2, 0
.L171:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L158:
	ldr	r1, .L173
	mov	r0, #0x12
	strh	r0, [r1]
	ldr	r1, .L173+0x4
	mov	r0, #0x11
	b	.L166
.L174:
	.align	2, 0
.L173:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L159:
	ldr	r1, .L175
	mov	r0, #0x15
	strh	r0, [r1]
	ldr	r1, .L175+0x4
	mov	r0, #0x16
	b	.L166
.L176:
	.align	2, 0
.L175:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L160:
	ldr	r1, .L177
	mov	r0, #0x8
	strh	r0, [r1]
	ldr	r1, .L177+0x4
	mov	r0, #0x9
	b	.L166
.L178:
	.align	2, 0
.L177:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L161:
	ldr	r1, .L179
	mov	r0, #0x13
	strh	r0, [r1]
	ldr	r1, .L179+0x4
	mov	r0, #0x14
	b	.L166
.L180:
	.align	2, 0
.L179:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L162:
	ldr	r1, .L181
	mov	r0, #0x17
	strh	r0, [r1]
	ldr	r1, .L181+0x4
	mov	r0, #0x18
	b	.L166
.L182:
	.align	2, 0
.L181:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L163:
	ldr	r1, .L183
	mov	r0, #0xa
	strh	r0, [r1]
	ldr	r1, .L183+0x4
	mov	r0, #0xb
.L166:
	strh	r0, [r1]
.L155:
	pop	{r0}
	bx	r0
.L184:
	.align	2, 0
.L183:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.Lfe19:
	.size	 GabbyAndTySetScriptVarsToEventObjectLocalIds,.Lfe19-GabbyAndTySetScriptVarsToEventObjectLocalIds
	.align	2, 0
	.globl	InterviewAfter
	.type	 InterviewAfter,function
	.thumb_func
InterviewAfter:
	push	{lr}
	ldr	r0, .L196
	ldrh	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x7
	bhi	.L186	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L196+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L197:
	.align	2, 0
.L196:
	.word	gSpecialVar_0x8005
	.word	.L194
	.align	2, 0
	.align	2, 0
.L194:
	.word	.L187
	.word	.L188
	.word	.L189
	.word	.L190
	.word	.L186
	.word	.L191
	.word	.L192
	.word	.L193
.L187:
	bl	InterviewAfter_FanClubLetter
	b	.L186
.L188:
	bl	InterviewAfter_RecentHappenings
	b	.L186
.L189:
	bl	InterviewAfter_PkmnFanClubOpinions
	b	.L186
.L190:
	bl	InterviewAfter_DummyShow4
	b	.L186
.L191:
	bl	InterviewAfter_BravoTrainerPokemonProfile
	b	.L186
.L192:
	bl	InterviewAfter_BravoTrainerBattleTowerProfile
	b	.L186
.L193:
	bl	InterviewAfter_ContestLiveUpdates
.L186:
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 InterviewAfter,.Lfe20-InterviewAfter
	.align	2, 0
	.globl	PutPokemonTodayCaughtOnAir
	.type	 PutPokemonTodayCaughtOnAir,function
	.thumb_func
PutPokemonTodayCaughtOnAir:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r4, #0x0
	bl	sub_80EED88
	bl	sub_80ED718
	ldr	r5, .L218
	ldrh	r0, [r5, #0x28]
	cmp	r0, #0
	bne	.L199	@cond_branch
	bl	PutPokemonTodayFailedOnTheAir
	b	.L200
.L219:
	.align	2, 0
.L218:
	.word	gBattleResults
.L199:
	bl	UpdateWorldOfMastersAndPutItOnTheAir
	ldr	r0, .L220
	bl	TV_BernoulliTrial
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1585
	b	.L200	@long jump
.LCB1585:
	ldrh	r1, [r5, #0x28]
	mov	r0, #0xb
	mul	r0, r0, r1
	ldr	r1, .L220+0x4
	add	r0, r0, r1
	add	r1, r5, #0
	add	r1, r1, #0x2a
	bl	StringCompare
	cmp	r0, #0
	bne	.LCB1598
	b	.L200	@long jump
.LCB1598:
	ldr	r0, .L220+0x8
	ldr	r0, [r0]
	ldr	r1, .L220+0xc
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r1, .L220+0x10
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L200	@cond_branch
	mov	r0, #0x15
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L200	@cond_branch
	mov	r2, #0x0
	add	r1, r5, #0
	add	r1, r1, #0x36
.L206:
	add	r0, r2, r1
	ldrb	r0, [r0]
	add	r0, r4, r0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xa
	bls	.L206	@cond_branch
	cmp	r4, #0
	bne	.L209	@cond_branch
	ldrb	r1, [r5, #0x5]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L200	@cond_branch
.L209:
	mov	r4, #0x0
	ldr	r2, .L220+0x8
	ldr	r0, .L220+0x10
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L220+0xc
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r6, r1, r0
	mov	r0, #0x15
	strb	r0, [r6]
	strb	r4, [r6, #0x1]
	ldrb	r1, [r5, #0x5]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L210	@cond_branch
	mov	r4, #0x1
	mov	r0, #0x1
	add	r3, r6, #0
	add	r3, r3, #0x13
	ldr	r1, .L220+0x14
	mov	r8, r1
	add	r7, r6, #0x4
	b	.L211
.L221:
	.align	2, 0
.L220:
	.word	0xffff
	.word	gSpeciesNames
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
.L210:
	mov	r2, #0x0
	ldr	r0, .L222
	mov	ip, r0
	add	r3, r6, #0
	add	r3, r3, #0x13
	ldr	r1, .L222+0x4
	mov	r8, r1
	add	r7, r6, #0x4
	add	r1, r5, #0
	add	r1, r1, #0x36
.L215:
	add	r0, r2, r1
	ldrb	r0, [r0]
	add	r0, r4, r0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xa
	bls	.L215	@cond_branch
	cmp	r4, #0xff
	bls	.L217	@cond_branch
	mov	r4, #0xff
.L217:
	mov	r1, ip
	ldrh	r0, [r1]
.L211:
	strb	r4, [r6, #0x12]
	strb	r0, [r6, #0xf]
	mov	r0, r8
	ldr	r1, [r0]
	add	r0, r3, #0
	bl	StringCopy
	ldr	r4, .L222+0x8
	add	r0, r7, #0
	add	r1, r4, #0
	bl	StringCopy
	add	r0, r7, #0
	bl	sub_81DB604
	add	r5, r0, #0
	add	r0, r7, #0
	bl	StripExtCtrlCodes
	sub	r4, r4, #0x2a
	ldrh	r0, [r4, #0x28]
	strh	r0, [r6, #0x10]
	add	r0, r6, #0
	bl	tv_store_id_3x
	ldr	r0, .L222+0xc
	ldrb	r0, [r0]
	strb	r0, [r6, #0x2]
	strb	r5, [r6, #0x3]
.L200:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L223:
	.align	2, 0
.L222:
	.word	gLastUsedItem
	.word	gSaveBlock2Ptr
	.word	gBattleResults+0x2a
	.word	gGameLanguage
.Lfe21:
	.size	 PutPokemonTodayCaughtOnAir,.Lfe21-PutPokemonTodayCaughtOnAir
	.align	2, 0
	.globl	UpdateWorldOfMastersAndPutItOnTheAir
	.type	 UpdateWorldOfMastersAndPutItOnTheAir,function
	.thumb_func
UpdateWorldOfMastersAndPutItOnTheAir:
	push	{r4, lr}
	ldr	r0, .L226
	ldr	r1, [r0]
	ldr	r0, .L226+0x4
	add	r4, r1, r0
	ldrb	r0, [r4]
	cmp	r0, #0x19
	beq	.L225	@cond_branch
	ldr	r2, .L226+0x8
	add	r0, r1, r2
	mov	r1, #0x18
	bl	DeleteTVShowInArrayByIdx
	mov	r0, #0x5
	bl	GetGameStat
	strh	r0, [r4, #0x6]
	mov	r0, #0x19
	strb	r0, [r4]
.L225:
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	ldr	r1, .L226+0xc
	ldrh	r0, [r1, #0x28]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r1, #0x6]
	strh	r0, [r4, #0x8]
	ldr	r0, .L226+0x10
	ldrb	r0, [r0, #0x14]
	strb	r0, [r4, #0xa]
	pop	{r4}
	pop	{r0}
	bx	r0
.L227:
	.align	2, 0
.L226:
	.word	gSaveBlock1Ptr
	.word	0x2b2c
	.word	0x27cc
	.word	gBattleResults
	.word	gMapHeader
.Lfe22:
	.size	 UpdateWorldOfMastersAndPutItOnTheAir,.Lfe22-UpdateWorldOfMastersAndPutItOnTheAir
	.align	2, 0
	.globl	PutPokemonTodayFailedOnTheAir
	.type	 PutPokemonTodayFailedOnTheAir,function
	.thumb_func
PutPokemonTodayFailedOnTheAir:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r0, .L239
	bl	TV_BernoulliTrial
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L229	@cond_branch
	mov	r1, #0x0
	mov	r5, #0x0
	ldr	r2, .L239+0x4
.L233:
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r0, r5, r0
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xa
	bls	.L233	@cond_branch
	cmp	r5, #0xff
	bls	.L235	@cond_branch
	mov	r5, #0xff
.L235:
	cmp	r5, #0x2
	bls	.L229	@cond_branch
	ldr	r0, .L239+0x8
	mov	r8, r0
	ldrb	r0, [r0]
	cmp	r0, #0x6
	beq	.L237	@cond_branch
	cmp	r0, #0x1
	bne	.L229	@cond_branch
.L237:
	ldr	r7, .L239+0xc
	ldr	r0, [r7]
	ldr	r6, .L239+0x10
	add	r0, r0, r6
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L239+0x14
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L229	@cond_branch
	mov	r0, #0x17
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L229	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldr	r4, [r7]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x17
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	ldr	r1, .L239+0x18
	ldrh	r0, [r1, #0x6]
	strh	r0, [r4, #0xc]
	ldrh	r0, [r1, #0x20]
	strh	r0, [r4, #0xe]
	strb	r5, [r4, #0x10]
	mov	r1, r8
	ldrb	r0, [r1]
	strb	r0, [r4, #0x11]
	ldr	r0, .L239+0x1c
	ldrb	r0, [r0, #0x14]
	strb	r0, [r4, #0x12]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L239+0x20
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L239+0x24
	ldrb	r0, [r0]
	strb	r0, [r4, #0x2]
.L229:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L240:
	.align	2, 0
.L239:
	.word	0xffff
	.word	gBattleResults+0x36
	.word	gBattleOutcome
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gBattleResults
	.word	gMapHeader
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe23:
	.size	 PutPokemonTodayFailedOnTheAir,.Lfe23-PutPokemonTodayFailedOnTheAir
	.align	2, 0
	.globl	tv_store_id_3x
	.type	 tv_store_id_3x,function
	.thumb_func
tv_store_id_3x:
	push	{r4, lr}
	add	r4, r0, #0
	bl	GetPlayerIDAsU32
	strb	r0, [r4, #0x1e]
	lsr	r2, r0, #0x8
	strb	r2, [r4, #0x1f]
	add	r1, r4, #0
	add	r1, r1, #0x20
	strb	r0, [r1]
	add	r1, r1, #0x1
	strb	r2, [r1]
	add	r1, r1, #0x1
	strb	r0, [r1]
	add	r0, r4, #0
	add	r0, r0, #0x23
	strb	r2, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 tv_store_id_3x,.Lfe24-tv_store_id_3x
	.align	2, 0
	.globl	tv_store_id_2x
	.type	 tv_store_id_2x,function
	.thumb_func
tv_store_id_2x:
	push	{r4, lr}
	add	r4, r0, #0
	bl	GetPlayerIDAsU32
	add	r1, r4, #0
	add	r1, r1, #0x20
	strb	r0, [r1]
	lsr	r1, r0, #0x8
	add	r2, r4, #0
	add	r2, r2, #0x21
	strb	r1, [r2]
	add	r2, r2, #0x1
	strb	r0, [r2]
	add	r0, r4, #0
	add	r0, r0, #0x23
	strb	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 tv_store_id_2x,.Lfe25-tv_store_id_2x
	.align	2, 0
	.type	 InterviewAfter_ContestLiveUpdates,function
	.thumb_func
InterviewAfter_ContestLiveUpdates:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r0, .L245
	mov	r8, r0
	ldr	r7, [r0]
	ldr	r1, .L245+0x4
	add	r6, r7, r1
	ldrb	r1, [r6]
	cmp	r1, #0x8
	bne	.L244	@cond_branch
	ldr	r0, .L245+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r5, .L245+0xc
	add	r4, r4, r5
	add	r4, r7, r4
	strb	r1, [r4]
	mov	r0, #0x1
	strb	r0, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x14
	ldr	r1, .L245+0x10
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L245+0x14
	ldrh	r0, [r0]
	strb	r0, [r4, #0x1c]
	ldr	r0, .L245+0x18
	ldrb	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L245+0x1c
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r4, #0x12]
	ldrh	r0, [r6, #0x2]
	strh	r0, [r4, #0x2]
	ldrb	r0, [r6, #0xc]
	strb	r0, [r4, #0xc]
	ldrb	r0, [r6, #0xd]
	strb	r0, [r4, #0xd]
	ldrb	r0, [r6, #0xe]
	strb	r0, [r4, #0xe]
	ldrh	r0, [r6, #0x10]
	strh	r0, [r4, #0x10]
	ldrb	r0, [r6, #0xf]
	strb	r0, [r4, #0xf]
	add	r0, r4, #0x4
	ldr	r2, .L245+0x20
	add	r1, r7, r2
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L245+0x24
	ldrb	r0, [r0]
	strb	r0, [r4, #0x1d]
	ldrb	r0, [r6, #0x1e]
	strb	r0, [r4, #0x1e]
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, r5
	mov	r1, #0x18
	bl	DeleteTVShowInArrayByIdx
.L244:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L246:
	.align	2, 0
.L245:
	.word	gSaveBlock1Ptr
	.word	0x2b2c
	.word	sCurTVShowSlot
	.word	0x27cc
	.word	gSaveBlock2Ptr
	.word	gSpecialVar_ContestCategory
	.word	gContestMonPartyIndex
	.word	gPlayerParty
	.word	0x2b30
	.word	gGameLanguage
.Lfe26:
	.size	 InterviewAfter_ContestLiveUpdates,.Lfe26-InterviewAfter_ContestLiveUpdates
	.align	2, 0
	.globl	PutBattleUpdateOnTheAir
	.type	 PutBattleUpdateOnTheAir,function
	.thumb_func
PutBattleUpdateOnTheAir:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x20
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	sl, r1
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r9, r2
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	mov	r8, r3
	ldr	r6, .L257
	ldr	r0, [r6]
	ldr	r5, .L257+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r4, .L257+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L248	@cond_branch
	mov	r0, #0xa
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L257+0xc
	ldrh	r0, [r0]
	cmp	r0, #0x1
	beq	.L248	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r6]
	add	r4, r1, r0
	mov	r0, #0xa
	strb	r0, [r4]
	mov	r5, #0x1
	strb	r5, [r4, #0x1]
	add	r0, r4, #0x4
	ldr	r1, .L257+0x10
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L257+0x14
	ldr	r1, [r0]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L250	@cond_branch
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L252	@cond_branch
	strb	r5, [r4, #0x18]
	b	.L251
.L258:
	.align	2, 0
.L257:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSpecialVar_Result
	.word	gSaveBlock2Ptr
	.word	gBattleTypeFlags
.L250:
	mov	r0, #0x2
.L252:
	strb	r0, [r4, #0x18]
.L251:
	mov	r0, sl
	strh	r0, [r4, #0x14]
	mov	r0, r9
	strh	r0, [r4, #0x16]
	mov	r0, r8
	strh	r0, [r4, #0x2]
	lsl	r0, r7, #0x3
	sub	r0, r0, r7
	lsl	r5, r0, #0x2
	ldr	r6, .L259
	add	r1, r5, r6
	mov	r0, sp
	bl	StringCopy
	mov	r0, sp
	bl	StripExtCtrlCodes
	add	r0, r4, #0
	add	r0, r0, #0xc
	mov	r1, sp
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L259+0x4
	ldrb	r0, [r0]
	strb	r0, [r4, #0x19]
	cmp	r0, #0x1
	beq	.L255	@cond_branch
	add	r0, r6, r5
	ldrh	r0, [r0, #0x12]
	cmp	r0, #0x1
	bne	.L254	@cond_branch
.L255:
	mov	r0, #0x1
.L254:
	strb	r0, [r4, #0x1a]
.L248:
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L260:
	.align	2, 0
.L259:
	.word	gLinkPlayers+0x8
	.word	gGameLanguage
.Lfe27:
	.size	 PutBattleUpdateOnTheAir,.Lfe27-PutBattleUpdateOnTheAir
	.align	2, 0
	.globl	Put3CheersForPokeblocksOnTheAir
	.type	 Put3CheersForPokeblocksOnTheAir,function
	.thumb_func
Put3CheersForPokeblocksOnTheAir:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x24
	mov	sl, r0
	ldr	r0, [sp, #0x44]
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r3, [sp, #0x20]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	ldr	r0, .L269
	mov	r8, r0
	ldr	r0, [r0]
	ldr	r7, .L269+0x4
	add	r0, r0, r7
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r4, .L269+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L268	@cond_branch
	mov	r0, #0x9
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L269+0xc
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bne	.L263	@cond_branch
.L268:
	mov	r0, #0x0
	b	.L267
.L270:
	.align	2, 0
.L269:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSpecialVar_Result
.L263:
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	mov	r2, r8
	ldr	r1, [r2]
	add	r4, r1, r0
	mov	r0, #0x9
	strb	r0, [r4]
	mov	r7, #0x1
	strb	r7, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0xc
	ldr	r1, .L271
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, sp
	mov	r1, sl
	bl	StringCopy
	mov	r0, sp
	bl	StripExtCtrlCodes
	add	r0, r4, #0x4
	mov	r1, sp
	bl	StringCopy
	mov	r0, #0x7
	and	r5, r5, r0
	ldrb	r1, [r4, #0x3]
	sub	r0, r0, #0xf
	and	r0, r0, r1
	orr	r0, r0, r5
	mov	r1, #0x3
	and	r6, r6, r1
	lsl	r2, r6, #0x3
	sub	r1, r1, #0x1c
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r4, #0x3]
	add	r0, sp, #0x20
	ldrb	r0, [r0]
	strb	r0, [r4, #0x2]
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L271+0x4
	ldrb	r0, [r0]
	strb	r0, [r4, #0x14]
	cmp	r0, #0x1
	beq	.L265	@cond_branch
	mov	r1, r9
	cmp	r1, #0x1
	bne	.L264	@cond_branch
.L265:
	strb	r7, [r4, #0x15]
	b	.L266
.L272:
	.align	2, 0
.L271:
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.L264:
	mov	r2, r9
	strb	r2, [r4, #0x15]
.L266:
	mov	r0, #0x1
.L267:
	add	sp, sp, #0x24
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 Put3CheersForPokeblocksOnTheAir,.Lfe28-Put3CheersForPokeblocksOnTheAir
	.align	2, 0
	.globl	PutFanClubSpecialOnTheAir
	.type	 PutFanClubSpecialOnTheAir,function
	.thumb_func
PutFanClubSpecialOnTheAir:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x20
	ldr	r6, .L277
	ldr	r0, .L277+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L277+0x8
	add	r0, r0, r1
	ldr	r1, [r6]
	add	r4, r1, r0
	ldr	r0, .L277+0xc
	ldrh	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	strb	r0, [r4, #0x16]
	add	r0, r4, #0x2
	ldr	r1, .L277+0x10
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, #0xb
	strb	r0, [r4]
	mov	r5, #0x1
	strb	r5, [r4, #0x1]
	bl	GetPlayerIDAsU32
	strb	r0, [r4, #0xa]
	lsr	r0, r0, #0x8
	strb	r0, [r4, #0xb]
	ldr	r1, .L277+0x14
	mov	r0, sp
	bl	StringCopy
	mov	r0, sp
	bl	StripExtCtrlCodes
	add	r0, r4, #0
	add	r0, r0, #0xc
	mov	r1, sp
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L277+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0x17]
	cmp	r0, #0x1
	beq	.L275	@cond_branch
	ldr	r0, [r6]
	ldr	r1, .L277+0x1c
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L274	@cond_branch
.L275:
	strb	r5, [r4, #0x18]
	b	.L276
.L278:
	.align	2, 0
.L277:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8006
	.word	0x27cc
	.word	gSpecialVar_0x8005
	.word	gSaveBlock2Ptr
	.word	gStringVar1
	.word	gGameLanguage
	.word	0x31a0
.L274:
	strb	r0, [r4, #0x18]
.L276:
	add	sp, sp, #0x20
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe29:
	.size	 PutFanClubSpecialOnTheAir,.Lfe29-PutFanClubSpecialOnTheAir
	.align	2, 0
	.globl	ContestLiveUpdates_BeforeInterview_1
	.type	 ContestLiveUpdates_BeforeInterview_1,function
	.thumb_func
ContestLiveUpdates_BeforeInterview_1:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r5, .L281
	ldr	r0, [r5]
	ldr	r4, .L281+0x4
	add	r0, r0, r4
	mov	r1, #0x18
	bl	DeleteTVShowInArrayByIdx
	ldr	r0, [r5]
	add	r0, r0, r4
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L281+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L280	@cond_branch
	ldr	r0, [r5]
	ldr	r1, .L281+0xc
	add	r0, r0, r1
	strb	r6, [r0, #0xd]
	mov	r1, #0x8
	strb	r1, [r0]
.L280:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L282:
	.align	2, 0
.L281:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	0x2b2c
.Lfe30:
	.size	 ContestLiveUpdates_BeforeInterview_1,.Lfe30-ContestLiveUpdates_BeforeInterview_1
	.align	2, 0
	.globl	ContestLiveUpdates_BeforeInterview_2
	.type	 ContestLiveUpdates_BeforeInterview_2,function
	.thumb_func
ContestLiveUpdates_BeforeInterview_2:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L285
	ldr	r0, [r0]
	ldr	r1, .L285+0x4
	add	r4, r0, r1
	ldr	r1, .L285+0x8
	add	r0, r0, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L285+0xc
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L284	@cond_branch
	strb	r5, [r4, #0xe]
.L284:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L286:
	.align	2, 0
.L285:
	.word	gSaveBlock1Ptr
	.word	0x2b2c
	.word	0x27cc
	.word	sCurTVShowSlot
.Lfe31:
	.size	 ContestLiveUpdates_BeforeInterview_2,.Lfe31-ContestLiveUpdates_BeforeInterview_2
	.align	2, 0
	.globl	ContestLiveUpdates_BeforeInterview_3
	.type	 ContestLiveUpdates_BeforeInterview_3,function
	.thumb_func
ContestLiveUpdates_BeforeInterview_3:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L289
	ldr	r0, [r0]
	ldr	r1, .L289+0x4
	add	r4, r0, r1
	ldr	r1, .L289+0x8
	add	r0, r0, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L289+0xc
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L288	@cond_branch
	strb	r5, [r4, #0xf]
.L288:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L290:
	.align	2, 0
.L289:
	.word	gSaveBlock1Ptr
	.word	0x2b2c
	.word	0x27cc
	.word	sCurTVShowSlot
.Lfe32:
	.size	 ContestLiveUpdates_BeforeInterview_3,.Lfe32-ContestLiveUpdates_BeforeInterview_3
	.align	2, 0
	.globl	ContestLiveUpdates_BeforeInterview_4
	.type	 ContestLiveUpdates_BeforeInterview_4,function
	.thumb_func
ContestLiveUpdates_BeforeInterview_4:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r0, .L293
	ldr	r0, [r0]
	ldr	r1, .L293+0x4
	add	r4, r0, r1
	ldr	r1, .L293+0x8
	add	r0, r0, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L293+0xc
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L292	@cond_branch
	strh	r5, [r4, #0x10]
.L292:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L294:
	.align	2, 0
.L293:
	.word	gSaveBlock1Ptr
	.word	0x2b2c
	.word	0x27cc
	.word	sCurTVShowSlot
.Lfe33:
	.size	 ContestLiveUpdates_BeforeInterview_4,.Lfe33-ContestLiveUpdates_BeforeInterview_4
	.align	2, 0
	.globl	ContestLiveUpdates_BeforeInterview_5
	.type	 ContestLiveUpdates_BeforeInterview_5,function
	.thumb_func
ContestLiveUpdates_BeforeInterview_5:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	ldr	r0, .L302
	ldr	r4, [r0]
	ldr	r0, .L302+0x4
	add	r5, r4, r0
	ldr	r1, .L302+0x8
	add	r0, r4, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L302+0xc
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L296	@cond_branch
	ldr	r2, .L302+0x10
	lsl	r1, r6, #0x6
	add	r0, r1, r2
	ldrh	r0, [r0]
	strh	r0, [r5, #0x2]
	ldr	r0, .L302+0x14
	add	r4, r4, r0
	add	r2, r2, #0xd
	add	r1, r1, r2
	add	r0, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	bl	StripExtCtrlCodes
	strb	r7, [r5, #0xc]
	add	r1, r6, #0x1
	ldr	r0, .L302+0x18
	ldrb	r0, [r0]
	cmp	r1, r0
	ble	.L297	@cond_branch
	ldr	r0, .L302+0x1c
	ldrh	r0, [r0, #0x1a]
	b	.L299
.L303:
	.align	2, 0
.L302:
	.word	gSaveBlock1Ptr
	.word	0x2b2c
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gContestMons
	.word	0x2b30
	.word	gNumLinkContestPlayers
	.word	gLinkPlayers
.L297:
	ldr	r0, .L304
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L300	@cond_branch
	ldr	r1, .L304+0x4
	lsl	r0, r6, #0x3
	sub	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r0, [r0, #0x1a]
	cmp	r0, #0x1
	bne	.L299	@cond_branch
.L300:
	mov	r0, #0x1
.L299:
	strb	r0, [r5, #0x1e]
.L296:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L305:
	.align	2, 0
.L304:
	.word	gGameLanguage
	.word	gLinkPlayers
.Lfe34:
	.size	 ContestLiveUpdates_BeforeInterview_5,.Lfe34-ContestLiveUpdates_BeforeInterview_5
	.align	2, 0
	.type	 InterviewAfter_BravoTrainerPokemonProfile,function
	.thumb_func
InterviewAfter_BravoTrainerPokemonProfile:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L311
	ldr	r6, [r0]
	ldr	r0, .L311+0x4
	add	r5, r6, r0
	ldrb	r2, [r5]
	cmp	r2, #0x6
	bne	.L307	@cond_branch
	ldr	r0, .L311+0x8
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L311+0xc
	add	r0, r0, r1
	add	r4, r6, r0
	strb	r2, [r4]
	mov	r7, #0x1
	strb	r7, [r4, #0x1]
	ldrh	r0, [r5, #0x2]
	strh	r0, [r4, #0x2]
	add	r0, r4, #0
	add	r0, r0, #0x16
	ldr	r1, .L311+0x10
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	add	r0, r0, #0x8
	ldr	r2, .L311+0x14
	add	r1, r6, r2
	bl	StringCopy
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	ldrb	r2, [r4, #0x13]
	mov	r3, #0x8
	neg	r3, r3
	add	r1, r3, #0
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x13]
	ldrb	r2, [r5, #0x13]
	mov	r0, #0x18
	and	r0, r0, r2
	mov	r2, #0x19
	neg	r2, r2
	and	r2, r2, r1
	orr	r2, r2, r0
	strb	r2, [r4, #0x13]
	ldrh	r0, [r5, #0x14]
	strh	r0, [r4, #0x14]
	ldrb	r0, [r5, #0x13]
	mov	r1, #0x60
	and	r1, r1, r0
	mov	r0, #0x61
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x13]
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r4, #0x13]
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L311+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0x1e]
	cmp	r0, #0x1
	beq	.L309	@cond_branch
	ldrb	r0, [r5, #0x1f]
	cmp	r0, #0x1
	bne	.L308	@cond_branch
.L309:
	strb	r7, [r4, #0x1f]
	b	.L310
.L312:
	.align	2, 0
.L311:
	.word	gSaveBlock1Ptr
	.word	0x2b2c
	.word	sCurTVShowSlot
	.word	0x27cc
	.word	gSaveBlock2Ptr
	.word	0x2b34
	.word	gGameLanguage
.L308:
	strb	r0, [r4, #0x1f]
.L310:
	ldr	r0, .L313
	ldr	r0, [r0]
	ldr	r1, .L313+0x4
	add	r0, r0, r1
	mov	r1, #0x18
	bl	DeleteTVShowInArrayByIdx
.L307:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L314:
	.align	2, 0
.L313:
	.word	gSaveBlock1Ptr
	.word	0x27cc
.Lfe35:
	.size	 InterviewAfter_BravoTrainerPokemonProfile,.Lfe35-InterviewAfter_BravoTrainerPokemonProfile
	.align	2, 0
	.globl	BravoTrainerPokemonProfile_BeforeInterview1
	.type	 BravoTrainerPokemonProfile_BeforeInterview1,function
	.thumb_func
BravoTrainerPokemonProfile_BeforeInterview1:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r4, .L317
	ldr	r0, [r4]
	ldr	r1, .L317+0x4
	add	r5, r0, r1
	bl	InterviewBefore_BravoTrainerPkmnProfile
	ldr	r0, [r4]
	ldr	r1, .L317+0x8
	add	r0, r0, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L317+0xc
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L316	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L317+0x8
	add	r0, r0, r1
	mov	r1, #0x18
	bl	DeleteTVShowInArrayByIdx
	strh	r6, [r5, #0x14]
	mov	r0, #0x6
	strb	r0, [r5]
.L316:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L318:
	.align	2, 0
.L317:
	.word	gSaveBlock1Ptr
	.word	0x2b2c
	.word	0x27cc
	.word	sCurTVShowSlot
.Lfe36:
	.size	 BravoTrainerPokemonProfile_BeforeInterview1,.Lfe36-BravoTrainerPokemonProfile_BeforeInterview1
	.align	2, 0
	.globl	BravoTrainerPokemonProfile_BeforeInterview2
	.type	 BravoTrainerPokemonProfile_BeforeInterview2,function
	.thumb_func
BravoTrainerPokemonProfile_BeforeInterview2:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L321
	ldr	r4, [r0]
	ldr	r0, .L321+0x4
	add	r7, r4, r0
	ldr	r1, .L321+0x8
	add	r0, r4, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L321+0xc
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L320	@cond_branch
	mov	r3, #0x3
	add	r0, r5, #0
	and	r0, r0, r3
	lsl	r0, r0, #0x5
	ldrb	r1, [r7, #0x13]
	mov	r2, #0x61
	neg	r2, r2
	and	r2, r2, r1
	orr	r2, r2, r0
	strb	r2, [r7, #0x13]
	ldr	r0, .L321+0x10
	ldrb	r0, [r0]
	mov	r1, #0x7
	and	r1, r1, r0
	mov	r0, #0x8
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r7, #0x13]
	ldr	r1, .L321+0x14
	ldrb	r1, [r1]
	and	r3, r3, r1
	lsl	r3, r3, #0x3
	mov	r1, #0x19
	neg	r1, r1
	and	r0, r0, r1
	orr	r0, r0, r3
	strb	r0, [r7, #0x13]
	ldr	r0, .L321+0x18
	mov	r8, r0
	ldrb	r0, [r0]
	mov	r6, #0x64
	mul	r0, r0, r6
	ldr	r5, .L321+0x1c
	add	r0, r0, r5
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x2]
	mov	r1, r8
	ldrb	r0, [r1]
	mul	r0, r0, r6
	add	r0, r0, r5
	ldr	r1, .L321+0x20
	add	r4, r4, r1
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	StripExtCtrlCodes
	mov	r1, r8
	ldrb	r0, [r1]
	mul	r0, r0, r6
	add	r0, r0, r5
	mov	r1, #0x3
	bl	GetMonData
	strb	r0, [r7, #0x1f]
.L320:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L322:
	.align	2, 0
.L321:
	.word	gSaveBlock1Ptr
	.word	0x2b2c
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSpecialVar_ContestCategory
	.word	gSpecialVar_ContestRank
	.word	gContestMonPartyIndex
	.word	gPlayerParty
	.word	0x2b34
.Lfe37:
	.size	 BravoTrainerPokemonProfile_BeforeInterview2,.Lfe37-BravoTrainerPokemonProfile_BeforeInterview2
	.align	2, 0
	.type	 InterviewAfter_BravoTrainerBattleTowerProfile,function
	.thumb_func
InterviewAfter_BravoTrainerBattleTowerProfile:
	push	{r4, r5, r6, lr}
	ldr	r2, .L330
	ldr	r0, .L330+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L330+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r6, r1, r0
	mov	r0, #0x7
	strb	r0, [r6]
	mov	r0, #0x1
	strb	r0, [r6, #0x1]
	add	r0, r6, #0x2
	ldr	r4, .L330+0xc
	ldr	r1, [r4]
	bl	StringCopy
	add	r0, r6, #0
	add	r0, r0, #0xc
	ldr	r1, [r4]
	ldr	r2, .L330+0x10
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, [r4]
	ldr	r2, .L330+0x14
	add	r0, r1, r2
	ldrh	r0, [r0]
	strh	r0, [r6, #0xa]
	add	r2, r2, #0x2
	add	r0, r1, r2
	ldrh	r0, [r0]
	strh	r0, [r6, #0x14]
	ldr	r5, .L330+0x18
	add	r1, r1, r5
	ldrb	r0, [r1]
	mov	r1, #0x0
	bl	GetCurrentBattleTowerWinStreak
	strh	r0, [r6, #0x16]
	ldr	r0, [r4]
	ldr	r1, .L330+0x1c
	add	r0, r0, r1
	ldrb	r0, [r0]
	strb	r0, [r6, #0x1c]
	ldr	r0, [r4]
	add	r0, r0, r5
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L324	@cond_branch
	mov	r0, #0x32
	b	.L329
.L331:
	.align	2, 0
.L330:
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x27cc
	.word	gSaveBlock2Ptr
	.word	0xbd8
	.word	0xbd4
	.word	0xd07
	.word	0xd06
.L324:
	mov	r0, #0x64
.L329:
	strb	r0, [r6, #0x1a]
	ldr	r0, .L332
	ldrh	r0, [r0]
	strb	r0, [r6, #0x1b]
	add	r0, r6, #0
	bl	tv_store_id_2x
	ldr	r0, .L332+0x4
	ldrb	r0, [r0]
	strb	r0, [r6, #0x1d]
	cmp	r0, #0x1
	beq	.L327	@cond_branch
	ldr	r0, .L332+0x8
	ldr	r0, [r0]
	ldr	r2, .L332+0xc
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L326	@cond_branch
.L327:
	mov	r0, #0x1
.L326:
	strb	r0, [r6, #0x1e]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L333:
	.align	2, 0
.L332:
	.word	gSpecialVar_0x8004
	.word	gGameLanguage
	.word	gSaveBlock2Ptr
	.word	0xbeb
.Lfe38:
	.size	 InterviewAfter_BravoTrainerBattleTowerProfile,.Lfe38-InterviewAfter_BravoTrainerBattleTowerProfile
	.align	2, 0
	.globl	SaveRecordedItemPurchasesForTVShow
	.type	 SaveRecordedItemPurchasesForTVShow,function
	.thumb_func
SaveRecordedItemPurchasesForTVShow:
	push	{r4, r5, r6, r7, lr}
	ldr	r5, .L343
	ldr	r0, [r5]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L343+0x4
	cmp	r1, r0
	beq	.L335	@cond_branch
	ldr	r0, .L343+0x8
	cmp	r1, r0
	beq	.L335	@cond_branch
	ldr	r0, .L343+0xc
	bl	TV_BernoulliTrial
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L335	@cond_branch
	ldr	r0, [r5]
	ldr	r7, .L343+0x10
	add	r0, r0, r7
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r6, .L343+0x14
	strb	r0, [r6]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L335	@cond_branch
	mov	r0, #0x16
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L335	@cond_branch
	bl	TV_SortPurchasesByQuantity
	ldr	r2, .L343+0x18
	ldrh	r0, [r2, #0x2]
	cmp	r0, #0x13
	bls	.L335	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r6, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldr	r1, [r5]
	add	r5, r1, r0
	mov	r0, #0x16
	strb	r0, [r5]
	strb	r4, [r5, #0x1]
	ldr	r0, .L343+0x1c
	ldrb	r0, [r0, #0x14]
	strb	r0, [r5, #0x12]
	mov	r4, #0x0
	add	r7, r5, #0x6
	mov	ip, r2
	add	r6, r5, #0
	add	r6, r6, #0xc
.L341:
	lsl	r2, r4, #0x1
	add	r3, r7, r2
	lsl	r1, r4, #0x2
	add	r1, r1, ip
	ldrh	r0, [r1]
	strh	r0, [r3]
	add	r2, r6, r2
	ldrh	r0, [r1, #0x2]
	strh	r0, [r2]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L341	@cond_branch
	mov	r0, #0x1
	bl	GetPriceReduction
	strb	r0, [r5, #0x2]
	add	r0, r5, #0
	add	r0, r0, #0x13
	ldr	r1, .L343+0x20
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r5, #0
	bl	tv_store_id_3x
	ldr	r0, .L343+0x24
	ldrb	r0, [r0]
	strb	r0, [r5, #0x3]
.L335:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L344:
	.align	2, 0
.L343:
	.word	gSaveBlock1Ptr
	.word	0x3c1a
	.word	0x371a
	.word	0x5555
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gMartPurchaseHistory
	.word	gMapHeader
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe39:
	.size	 SaveRecordedItemPurchasesForTVShow,.Lfe39-SaveRecordedItemPurchasesForTVShow
	.align	2, 0
	.globl	PutNameRaterShowOnTheAir
	.type	 PutNameRaterShowOnTheAir,function
	.thumb_func
PutNameRaterShowOnTheAir:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	bl	InterviewBefore_NameRater
	ldr	r0, .L348
	ldrh	r0, [r0]
	cmp	r0, #0x1
	beq	.L346	@cond_branch
	ldr	r0, .L348+0x4
	mov	r8, r0
	ldrh	r0, [r0]
	mov	r7, #0x64
	mul	r0, r0, r7
	ldr	r6, .L348+0x8
	add	r0, r0, r6
	ldr	r4, .L348+0xc
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	ldr	r1, .L348+0x10
	mov	r9, r1
	ldr	r0, [r1]
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L346	@cond_branch
	add	r0, r4, #0
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L346	@cond_branch
	ldr	r2, .L348+0x14
	ldr	r0, .L348+0x18
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L348+0x1c
	add	r0, r0, r1
	ldr	r4, [r2]
	add	r4, r4, r0
	mov	r0, #0x5
	strb	r0, [r4]
	mov	r5, #0x1
	strb	r5, [r4, #0x1]
	mov	r2, r8
	ldrh	r0, [r2]
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r4, #0x2]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	strb	r0, [r4, #0x1a]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	and	r0, r0, r5
	strb	r0, [r4, #0x1b]
	ldrh	r0, [r4, #0x2]
	bl	TV_GetSomeOtherSpeciesAlreadySeenByPlayer
	strh	r0, [r4, #0x1c]
	add	r0, r4, #0
	add	r0, r0, #0xf
	mov	r2, r9
	ldr	r1, [r2]
	bl	StringCopy
	mov	r1, r8
	ldrh	r0, [r1]
	mul	r0, r0, r7
	add	r0, r0, r6
	add	r5, r4, #0x4
	mov	r1, #0x2
	add	r2, r5, #0
	bl	GetMonData
	add	r0, r5, #0
	bl	StripExtCtrlCodes
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L348+0x20
	ldrb	r0, [r0]
	strb	r0, [r4, #0x1e]
	mov	r2, r8
	ldrh	r0, [r2]
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0x3
	bl	GetMonData
	strb	r0, [r4, #0x1f]
.L346:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L349:
	.align	2, 0
.L348:
	.word	gSpecialVar_Result
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar1
	.word	gSaveBlock2Ptr
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x27cc
	.word	gGameLanguage
.Lfe40:
	.size	 PutNameRaterShowOnTheAir,.Lfe40-PutNameRaterShowOnTheAir
	.align	2, 0
	.globl	StartMassOutbreak
	.type	 StartMassOutbreak,function
	.thumb_func
StartMassOutbreak:
	push	{r4, r5, lr}
	ldr	r4, .L351
	ldr	r0, .L351+0x4
	ldrh	r0, [r0]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L351+0x8
	add	r1, r1, r0
	ldr	r2, [r4]
	add	r1, r2, r1
	ldrh	r3, [r1, #0xc]
	ldr	r5, .L351+0xc
	add	r0, r2, r5
	strh	r3, [r0]
	ldrb	r0, [r1, #0x10]
	ldr	r3, .L351+0x10
	add	r2, r2, r3
	strb	r0, [r2]
	ldr	r0, [r4]
	ldrb	r2, [r1, #0x11]
	add	r5, r5, #0x3
	add	r0, r0, r5
	strb	r2, [r0]
	ldr	r0, [r4]
	ldrb	r2, [r1, #0x14]
	add	r3, r3, #0x2
	add	r0, r0, r3
	strb	r2, [r0]
	ldr	r0, [r4]
	ldrb	r2, [r1, #0x2]
	add	r5, r5, #0x2
	add	r0, r0, r5
	strb	r2, [r0]
	ldr	r2, [r4]
	ldrh	r3, [r1, #0xe]
	add	r5, r5, #0x1
	add	r0, r2, r5
	strh	r3, [r0]
	ldrh	r3, [r1, #0x4]
	add	r5, r5, #0x2
	add	r0, r2, r5
	strh	r3, [r0]
	ldrh	r3, [r1, #0x6]
	add	r5, r5, #0x2
	add	r0, r2, r5
	strh	r3, [r0]
	ldrh	r3, [r1, #0x8]
	add	r5, r5, #0x2
	add	r0, r2, r5
	strh	r3, [r0]
	ldrh	r3, [r1, #0xa]
	add	r5, r5, #0x2
	add	r0, r2, r5
	strh	r3, [r0]
	ldrb	r0, [r1, #0x3]
	ldr	r3, .L351+0x14
	add	r2, r2, r3
	strb	r0, [r2]
	ldr	r0, [r4]
	ldrb	r1, [r1, #0x13]
	add	r5, r5, #0x3
	add	r0, r0, r5
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r1, .L351+0x18
	add	r0, r0, r1
	mov	r1, #0x2
	strh	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L352:
	.align	2, 0
.L351:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	0x2b90
	.word	0x2b92
	.word	0x2ba0
	.word	0x2ba2
.Lfe41:
	.size	 StartMassOutbreak,.Lfe41-StartMassOutbreak
	.align	2, 0
	.globl	PutLilycoveContestLadyShowOnTheAir
	.type	 PutLilycoveContestLadyShowOnTheAir,function
	.thumb_func
PutLilycoveContestLadyShowOnTheAir:
	push	{r4, lr}
	bl	sub_80EFA88
	ldr	r0, .L355
	ldrh	r0, [r0]
	cmp	r0, #0x1
	beq	.L354	@cond_branch
	ldr	r2, .L355+0x4
	ldr	r0, .L355+0x8
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L355+0xc
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	add	r0, r4, #0
	add	r0, r0, #0x17
	bl	BufferContestLadyLanguage
	mov	r0, #0x2
	strb	r0, [r4, #0x18]
	mov	r0, #0xc
	strb	r0, [r4]
	mov	r0, #0x1
	strb	r0, [r4, #0x1]
	add	r0, r4, #0x2
	bl	BufferContestLadyPlayerName
	add	r0, r4, #0
	add	r0, r0, #0xa
	add	r1, r4, #0
	add	r1, r1, #0xb
	bl	BufferContestLadyMonName
	bl	sub_818E880
	strb	r0, [r4, #0x16]
	add	r0, r4, #0
	bl	tv_store_id_2x
.L354:
	pop	{r4}
	pop	{r0}
	bx	r0
.L356:
	.align	2, 0
.L355:
	.word	gSpecialVar_Result
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x27cc
.Lfe42:
	.size	 PutLilycoveContestLadyShowOnTheAir,.Lfe42-PutLilycoveContestLadyShowOnTheAir
	.align	2, 0
	.type	 InterviewAfter_FanClubLetter,function
	.thumb_func
InterviewAfter_FanClubLetter:
	push	{r4, lr}
	ldr	r2, .L358
	ldr	r0, .L358+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L358+0x8
	add	r0, r0, r1
	ldr	r4, [r2]
	add	r4, r4, r0
	mov	r0, #0x1
	strb	r0, [r4]
	strb	r0, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x10
	ldr	r1, .L358+0xc
	ldr	r1, [r1]
	bl	StringCopy
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L358+0x10
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r4, #0x2]
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L358+0x14
	ldrb	r0, [r0]
	strb	r0, [r4, #0x18]
	pop	{r4}
	pop	{r0}
	bx	r0
.L359:
	.align	2, 0
.L358:
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x27cc
	.word	gSaveBlock2Ptr
	.word	gPlayerParty
	.word	gGameLanguage
.Lfe43:
	.size	 InterviewAfter_FanClubLetter,.Lfe43-InterviewAfter_FanClubLetter
	.align	2, 0
	.type	 InterviewAfter_RecentHappenings,function
	.thumb_func
InterviewAfter_RecentHappenings:
	push	{r4, r5, lr}
	ldr	r2, .L361
	ldr	r0, .L361+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L361+0x8
	add	r0, r0, r1
	ldr	r4, [r2]
	add	r4, r4, r0
	mov	r5, #0x0
	mov	r0, #0x2
	strb	r0, [r4]
	mov	r0, #0x1
	strb	r0, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x10
	ldr	r1, .L361+0xc
	ldr	r1, [r1]
	bl	StringCopy
	strh	r5, [r4, #0x2]
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L361+0x10
	ldrb	r0, [r0]
	strb	r0, [r4, #0x18]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L362:
	.align	2, 0
.L361:
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x27cc
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe44:
	.size	 InterviewAfter_RecentHappenings,.Lfe44-InterviewAfter_RecentHappenings
	.align	2, 0
	.type	 InterviewAfter_PkmnFanClubOpinions,function
	.thumb_func
InterviewAfter_PkmnFanClubOpinions:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r2, .L368
	ldr	r0, .L368+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L368+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	mov	r0, #0x3
	strb	r0, [r5]
	mov	r0, #0x1
	mov	r8, r0
	mov	r1, r8
	strb	r1, [r5, #0x1]
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r7, #0x64
	mul	r0, r0, r7
	ldr	r6, .L368+0xc
	add	r0, r0, r6
	mov	r1, #0x20
	mov	r2, #0x0
	bl	GetMonData
	lsr	r0, r0, #0x4
	mov	r1, #0xf
	and	r0, r0, r1
	ldrb	r2, [r5, #0x4]
	mov	r1, #0x10
	neg	r1, r1
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r5, #0x4]
	ldr	r0, .L368+0x10
	ldrb	r0, [r0]
	lsl	r0, r0, #0x4
	mov	r2, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r5, #0x4]
	add	r0, r5, #0x5
	ldr	r1, .L368+0x14
	ldr	r1, [r1]
	bl	StringCopy
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r7
	add	r0, r0, r6
	add	r4, r5, #0
	add	r4, r4, #0x10
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	StripExtCtrlCodes
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r5, #0x2]
	add	r0, r5, #0
	bl	tv_store_id_2x
	ldr	r0, .L368+0x18
	ldrb	r0, [r0]
	strb	r0, [r5, #0xd]
	cmp	r0, #0x1
	beq	.L365	@cond_branch
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0x3
	bl	GetMonData
	cmp	r0, #0x1
	bne	.L364	@cond_branch
.L365:
	mov	r0, r8
	b	.L367
.L369:
	.align	2, 0
.L368:
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x27cc
	.word	gPlayerParty
	.word	gSpecialVar_0x8007
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.L364:
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0x3
	bl	GetMonData
.L367:
	strb	r0, [r5, #0xe]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 InterviewAfter_PkmnFanClubOpinions,.Lfe45-InterviewAfter_PkmnFanClubOpinions
	.align	2, 0
	.type	 InterviewAfter_DummyShow4,function
	.thumb_func
InterviewAfter_DummyShow4:
	bx	lr
.Lfe46:
	.size	 InterviewAfter_DummyShow4,.Lfe46-InterviewAfter_DummyShow4
	.align	2, 0
	.type	 sub_80ED718,function
	.thumb_func
sub_80ED718:
	push	{r4, r5, r6, lr}
	ldr	r0, .L381
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L371	@cond_branch
	mov	r1, #0x0
	ldr	r0, .L381+0x4
	ldr	r2, [r0]
	ldr	r3, .L381+0x8
.L376:
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r2, r0
	add	r0, r0, r3
	ldrb	r0, [r0]
	cmp	r0, #0x29
	beq	.L371	@cond_branch
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x17
	bls	.L376	@cond_branch
	ldr	r0, .L381+0xc
	bl	TV_BernoulliTrial
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L371	@cond_branch
	ldr	r6, .L381+0x4
	ldr	r0, [r6]
	ldr	r1, .L381+0x8
	add	r0, r0, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r4, .L381+0x10
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L371	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x5
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r2, #0x0
	ldrsb	r2, [r4, r2]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	ldr	r2, .L381+0x8
	add	r1, r1, r2
	ldr	r4, [r6]
	add	r4, r4, r1
	mov	r1, #0x29
	strb	r1, [r4]
	mov	r3, #0x1
	strb	r3, [r4, #0x1]
	ldr	r2, .L381+0x14
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r0, [r1, #0xa]
	strb	r0, [r4, #0x14]
	strb	r5, [r4, #0x2]
	strb	r5, [r4, #0x3]
	ldrh	r0, [r1]
	mov	r2, #0x0
	strh	r0, [r4, #0xc]
	strh	r5, [r4, #0xe]
	ldrh	r0, [r1, #0x2]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r1, #0x4]
	strh	r0, [r4, #0x6]
	ldrh	r0, [r1, #0x6]
	strh	r0, [r4, #0x8]
	ldrh	r0, [r1, #0x8]
	strh	r0, [r4, #0xa]
	ldrb	r0, [r1, #0xb]
	strb	r0, [r4, #0x10]
	strb	r2, [r4, #0x11]
	strb	r2, [r4, #0x12]
	mov	r0, #0x32
	strb	r0, [r4, #0x13]
	strb	r2, [r4, #0x15]
	strh	r3, [r4, #0x16]
	add	r0, r4, #0
	bl	tv_store_id_2x
	ldr	r0, .L381+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0x18]
.L371:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L382:
	.align	2, 0
.L381:
	.word	0x864
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	0x147
	.word	sCurTVShowSlot
	.word	sPokeOutbreakSpeciesList
	.word	gGameLanguage
.Lfe47:
	.size	 sub_80ED718,.Lfe47-sub_80ED718
	.align	2, 0
	.globl	EndMassOutbreak
	.type	 EndMassOutbreak,function
	.thumb_func
EndMassOutbreak:
	push	{r4, r5, lr}
	ldr	r3, .L384
	ldr	r0, [r3]
	ldr	r2, .L384+0x4
	add	r1, r0, r2
	mov	r4, #0x0
	mov	r2, #0x0
	strh	r2, [r1]
	ldr	r5, .L384+0x8
	add	r0, r0, r5
	strb	r4, [r0]
	ldr	r0, [r3]
	ldr	r1, .L384+0xc
	add	r0, r0, r1
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r5, r5, #0x2
	add	r0, r0, r5
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r1, r1, #0x2
	add	r0, r0, r1
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r5, r5, #0x2
	add	r1, r0, r5
	strh	r2, [r1]
	add	r5, r5, #0x2
	add	r1, r0, r5
	strh	r2, [r1]
	add	r5, r5, #0x2
	add	r1, r0, r5
	strh	r2, [r1]
	add	r5, r5, #0x2
	add	r1, r0, r5
	strh	r2, [r1]
	add	r5, r5, #0x2
	add	r1, r0, r5
	strh	r2, [r1]
	ldr	r1, .L384+0x10
	add	r0, r0, r1
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r5, r5, #0x3
	add	r0, r0, r5
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r1, r1, #0x2
	add	r0, r0, r1
	strh	r2, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L385:
	.align	2, 0
.L384:
	.word	gSaveBlock1Ptr
	.word	0x2b90
	.word	0x2b92
	.word	0x2b93
	.word	0x2ba0
.Lfe48:
	.size	 EndMassOutbreak,.Lfe48-EndMassOutbreak
	.align	2, 0
	.globl	UpdateTVShowsPerDay
	.type	 UpdateTVShowsPerDay,function
	.thumb_func
UpdateTVShowsPerDay:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r4, #0
	bl	sub_80ED8B4
	add	r0, r4, #0
	bl	UpdateMassOutbreakTimeLeft
	add	r0, r4, #0
	bl	sub_80EF120
	add	r0, r4, #0
	bl	sub_80EDA48
	add	r0, r4, #0
	bl	sub_80EEB98
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 UpdateTVShowsPerDay,.Lfe49-UpdateTVShowsPerDay
	.align	2, 0
	.type	 sub_80ED8B4,function
	.thumb_func
sub_80ED8B4:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r1, .L397
	ldr	r0, [r1]
	ldr	r2, .L397+0x4
	add	r0, r0, r2
	ldrh	r0, [r0]
	mov	ip, r1
	cmp	r0, #0
	bne	.L388	@cond_branch
	mov	r1, #0x0
	ldr	r6, .L397+0x8
.L392:
	mov	r7, ip
	ldr	r4, [r7]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r3, r0, #0x2
	add	r2, r4, r3
	add	r0, r2, r6
	ldrb	r0, [r0]
	cmp	r0, #0x29
	bne	.L391	@cond_branch
	ldr	r7, .L397+0xc
	add	r0, r2, r7
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L391	@cond_branch
	add	r0, r3, r6
	add	r1, r4, r0
	ldrh	r0, [r1, #0x16]
	cmp	r0, r5
	bcs	.L394	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1, #0x16]
	b	.L388
.L398:
	.align	2, 0
.L397:
	.word	gSaveBlock1Ptr
	.word	0x2b90
	.word	0x27cc
	.word	0x27cd
.L394:
	sub	r0, r0, r5
	strh	r0, [r1, #0x16]
	b	.L388
.L391:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x17
	bls	.L392	@cond_branch
.L388:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe50:
	.size	 sub_80ED8B4,.Lfe50-sub_80ED8B4
	.align	2, 0
	.globl	UpdateMassOutbreakTimeLeft
	.type	 UpdateMassOutbreakTimeLeft,function
	.thumb_func
UpdateMassOutbreakTimeLeft:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r0, .L402
	ldr	r0, [r0]
	ldr	r3, .L402+0x4
	add	r1, r0, r3
	ldrh	r0, [r1]
	cmp	r0, r2
	bhi	.L400	@cond_branch
	bl	EndMassOutbreak
	b	.L401
.L403:
	.align	2, 0
.L402:
	.word	gSaveBlock1Ptr
	.word	0x2ba2
.L400:
	sub	r0, r0, r2
	strh	r0, [r1]
.L401:
	pop	{r0}
	bx	r0
.Lfe51:
	.size	 UpdateMassOutbreakTimeLeft,.Lfe51-UpdateMassOutbreakTimeLeft
	.align	2, 0
	.globl	sub_80ED950
	.type	 sub_80ED950,function
	.thumb_func
sub_80ED950:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L405	@cond_branch
	ldr	r4, .L412
	ldrh	r0, [r4]
	lsr	r0, r0, #0x8
	cmp	r0, #0x4
	bls	.L406	@cond_branch
	bl	PutFishingAdviceShowOnTheAir
.L406:
	ldrb	r0, [r4]
	strh	r0, [r4]
	cmp	r0, #0xff
	beq	.L408	@cond_branch
	add	r0, r0, #0x1
	b	.L411
.L413:
	.align	2, 0
.L412:
	.word	sPokemonAnglerAttemptCounters
.L405:
	ldr	r4, .L414
	ldrb	r0, [r4]
	cmp	r0, #0x4
	bls	.L409	@cond_branch
	bl	PutFishingAdviceShowOnTheAir
.L409:
	ldrh	r0, [r4]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r1, r1, r0
	strh	r1, [r4]
	lsr	r0, r1, #0x8
	cmp	r0, #0xff
	beq	.L408	@cond_branch
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r0, r1, r2
.L411:
	strh	r0, [r4]
.L408:
	pop	{r4}
	pop	{r0}
	bx	r0
.L415:
	.align	2, 0
.L414:
	.word	sPokemonAnglerAttemptCounters
.Lfe52:
	.size	 sub_80ED950,.Lfe52-sub_80ED950
	.align	2, 0
	.globl	PutFishingAdviceShowOnTheAir
	.type	 PutFishingAdviceShowOnTheAir,function
	.thumb_func
PutFishingAdviceShowOnTheAir:
	push	{r4, r5, r6, lr}
	ldr	r6, .L418
	ldr	r0, [r6]
	ldr	r5, .L418+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L418+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L417	@cond_branch
	mov	r0, #0x18
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L417	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r4, [r6]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x18
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	ldr	r1, .L418+0xc
	ldrh	r0, [r1]
	strb	r0, [r4, #0x2]
	ldrh	r0, [r1]
	lsr	r0, r0, #0x8
	strb	r0, [r4, #0x3]
	ldr	r0, .L418+0x10
	ldrh	r0, [r0]
	strh	r0, [r4, #0x4]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L418+0x14
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L418+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0x6]
.L417:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L419:
	.align	2, 0
.L418:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	sPokemonAnglerAttemptCounters
	.word	sPokemonAnglerSpecies
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe53:
	.size	 PutFishingAdviceShowOnTheAir,.Lfe53-PutFishingAdviceShowOnTheAir
	.align	2, 0
	.globl	SetPokemonAnglerSpecies
	.type	 SetPokemonAnglerSpecies,function
	.thumb_func
SetPokemonAnglerSpecies:
	ldr	r1, .L421
	strh	r0, [r1]
	bx	lr
.L422:
	.align	2, 0
.L421:
	.word	sPokemonAnglerSpecies
.Lfe54:
	.size	 SetPokemonAnglerSpecies,.Lfe54-SetPokemonAnglerSpecies
	.align	2, 0
	.type	 sub_80EDA48,function
	.thumb_func
sub_80EDA48:
	push	{r4, lr}
	ldr	r4, .L426
	ldr	r0, [r4]
	ldr	r2, .L426+0x4
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0x19
	bne	.L424	@cond_branch
	ldrh	r0, [r1, #0x2]
	cmp	r0, #0x13
	bls	.L425	@cond_branch
	bl	sub_80EDA80
.L425:
	ldr	r0, [r4]
	ldr	r1, .L426+0x8
	add	r0, r0, r1
	mov	r1, #0x18
	bl	DeleteTVShowInArrayByIdx
.L424:
	pop	{r4}
	pop	{r0}
	bx	r0
.L427:
	.align	2, 0
.L426:
	.word	gSaveBlock1Ptr
	.word	0x2b2c
	.word	0x27cc
.Lfe55:
	.size	 sub_80EDA48,.Lfe55-sub_80EDA48
	.align	2, 0
	.globl	sub_80EDA80
	.type	 sub_80EDA80,function
	.thumb_func
sub_80EDA80:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r7, .L431
	ldr	r0, [r7]
	ldr	r1, .L431+0x4
	add	r5, r0, r1
	ldr	r0, .L431+0x8
	bl	TV_BernoulliTrial
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0
	bne	.L429	@cond_branch
	ldr	r0, [r7]
	ldr	r1, .L431+0xc
	mov	r8, r1
	add	r0, r0, r8
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L431+0x10
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L429	@cond_branch
	mov	r0, #0x19
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L429	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	ldr	r4, [r7]
	add	r4, r4, r0
	mov	r0, #0x19
	strb	r0, [r4]
	strb	r6, [r4, #0x1]
	ldrh	r0, [r5, #0x2]
	strh	r0, [r4, #0x2]
	mov	r0, #0x5
	bl	GetGameStat
	ldrh	r1, [r5, #0x6]
	sub	r0, r0, r1
	strh	r0, [r4, #0x6]
	ldrh	r0, [r5, #0x4]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r5, #0x8]
	strh	r0, [r4, #0x8]
	ldrb	r0, [r5, #0xa]
	strb	r0, [r4, #0xa]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L431+0x14
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L431+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0xb]
	ldr	r0, [r7]
	add	r0, r0, r8
	mov	r1, #0x18
	bl	DeleteTVShowInArrayByIdx
.L429:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L432:
	.align	2, 0
.L431:
	.word	gSaveBlock1Ptr
	.word	0x2b2c
	.word	0xffff
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe56:
	.size	 sub_80EDA80,.Lfe56-sub_80EDA80
	.align	2, 0
	.globl	sub_80EDB44
	.type	 sub_80EDB44,function
	.thumb_func
sub_80EDB44:
	push	{r4, r5, r6, r7, lr}
	mov	r0, #0x1a
	mov	r1, #0x1
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	ldr	r4, .L451
	ldr	r0, [r4]
	ldr	r1, .L451+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r2, .L451+0x8
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L434	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r2, .L451+0x4
	add	r0, r0, r2
	ldr	r1, [r4]
	add	r4, r1, r0
	mov	r1, #0x0
	mov	r0, #0x1a
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	ldr	r6, .L451+0xc
	mov	r5, #0x0
.L438:
	lsl	r0, r6, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L437	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L437:
	add	r6, r6, #0x1
	ldr	r0, .L451+0x10
	cmp	r6, r0
	bls	.L438	@cond_branch
	strb	r5, [r4, #0x4]
	bl	IsNationalPokedexEnabled
	cmp	r0, #0
	beq	.L441	@cond_branch
	mov	r0, #0x1
	bl	GetNationalPokedexCount
	b	.L450
.L452:
	.align	2, 0
.L451:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	0x867
	.word	0x86e
.L441:
	mov	r0, #0x1
	bl	GetHoennPokedexCount
.L450:
	strh	r0, [r4, #0x2]
	ldr	r1, .L453
	ldrb	r0, [r1, #0x14]
	strb	r0, [r4, #0x7]
	ldrh	r0, [r1, #0x12]
	mov	r1, #0x0
	strh	r0, [r4, #0xa]
	strb	r1, [r4, #0x5]
	strb	r1, [r4, #0x6]
	mov	r6, #0x0
	add	r7, r4, #0
	add	r7, r7, #0x13
.L446:
	ldr	r0, .L453+0x4
	lsl	r5, r6, #0x1
	add	r0, r5, r0
	ldrh	r0, [r0]
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L447	@cond_branch
	ldrb	r0, [r4, #0x5]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x5]
.L447:
	ldr	r0, .L453+0x8
	add	r0, r5, r0
	ldrh	r0, [r0]
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L445	@cond_branch
	ldrb	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x6]
.L445:
	add	r6, r6, #0x1
	cmp	r6, #0x6
	bls	.L446	@cond_branch
	ldr	r0, .L453+0xc
	ldr	r1, [r0]
	ldr	r2, .L453+0x10
	add	r0, r1, r2
	ldrh	r0, [r0]
	strh	r0, [r4, #0x8]
	add	r0, r7, #0
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L453+0x14
	ldrb	r0, [r0]
	strb	r0, [r4, #0xc]
.L434:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L454:
	.align	2, 0
.L453:
	.word	gMapHeader
	.word	sSilverSymbolFlags
	.word	sGoldSymbolFlags
	.word	gSaveBlock2Ptr
	.word	0xeb8
	.word	gGameLanguage
.Lfe57:
	.size	 sub_80EDB44,.Lfe57-sub_80EDB44
	.align	2, 0
	.globl	sub_80EDC60
	.type	 sub_80EDC60,function
	.thumb_func
sub_80EDC60:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	ldr	r7, .L457
	ldr	r0, [r7]
	ldr	r6, .L457+0x4
	add	r0, r0, r6
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L457+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L456	@cond_branch
	mov	r0, #0x1b
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L456	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldr	r4, [r7]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x1b
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	ldr	r1, .L457+0xc
	ldr	r0, [r1]
	ldrb	r0, [r0, #0x8]
	strb	r0, [r4, #0x8]
	ldrh	r0, [r5]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r5, #0x2]
	strh	r0, [r4, #0x6]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L457+0x10
	ldrb	r0, [r0]
	strb	r0, [r4, #0x9]
.L456:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L458:
	.align	2, 0
.L457:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe58:
	.size	 sub_80EDC60,.Lfe58-sub_80EDC60
	.align	2, 0
	.globl	sub_80EDCE8
	.type	 sub_80EDCE8,function
	.thumb_func
sub_80EDCE8:
	push	{r4, r5, r6, lr}
	ldr	r6, .L461
	ldr	r0, [r6]
	ldr	r5, .L461+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L461+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L460	@cond_branch
	mov	r0, #0x1c
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L460	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r4, [r6]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x1c
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	ldr	r0, .L461+0xc
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2]
	ldr	r1, .L461+0x10
	ldrb	r0, [r1, #0x14]
	strb	r0, [r4, #0x4]
	ldrh	r0, [r1, #0x12]
	strh	r0, [r4, #0x6]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L461+0x14
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L461+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0x5]
.L460:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L462:
	.align	2, 0
.L461:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSpecialVar_0x8005
	.word	gMapHeader
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe59:
	.size	 sub_80EDCE8,.Lfe59-sub_80EDCE8
	.align	2, 0
	.globl	AlertTVOfNewCoinTotal
	.type	 AlertTVOfNewCoinTotal,function
	.thumb_func
AlertTVOfNewCoinTotal:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L476
	ldr	r0, [r0]
	ldr	r1, .L476+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r1, .L476+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L463	@cond_branch
	mov	r0, #0x1d
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L463	@cond_branch
	mov	r5, #0x0
	ldr	r0, .L476+0xc
	ldrb	r1, [r0]
	add	r6, r0, #0
	cmp	r1, #0
	beq	.L466	@cond_branch
	cmp	r1, #0x1
	beq	.L469	@cond_branch
	b	.L463
.L477:
	.align	2, 0
.L476:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	sFindThatGamerWhichGame
.L466:
	ldr	r0, .L478
	ldrh	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0xc8
	cmp	r4, r0
	blt	.L467	@cond_branch
	mov	r5, #0x1
	sub	r0, r4, r1
	b	.L474
.L479:
	.align	2, 0
.L478:
	.word	sFindThatGamerCoinsSpent
.L467:
	cmp	r1, #0x63
	bls	.L463	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x64
	b	.L475
.L469:
	ldr	r0, .L480
	ldrh	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x32
	cmp	r4, r0
	blt	.L470	@cond_branch
	mov	r5, #0x1
	sub	r0, r4, r1
	b	.L474
.L481:
	.align	2, 0
.L480:
	.word	sFindThatGamerCoinsSpent
.L470:
	cmp	r1, #0x31
	bls	.L463	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x32
.L475:
	cmp	r4, r0
	bgt	.L463	@cond_branch
	sub	r0, r1, r4
.L474:
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldr	r2, .L482
	ldr	r0, .L482+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L482+0x8
	add	r0, r0, r1
	ldr	r4, [r2]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x1d
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	strh	r3, [r4, #0x4]
	ldrb	r0, [r6]
	strb	r0, [r4, #0x3]
	strb	r5, [r4, #0x2]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L482+0xc
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L482+0x10
	ldrb	r0, [r0]
	strb	r0, [r4, #0x8]
.L463:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L483:
	.align	2, 0
.L482:
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x27cc
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe60:
	.size	 AlertTVOfNewCoinTotal,.Lfe60-AlertTVOfNewCoinTotal
	.align	2, 0
	.globl	AlertTVThatPlayerPlayedSlotMachine
	.type	 AlertTVThatPlayerPlayedSlotMachine,function
	.thumb_func
AlertTVThatPlayerPlayedSlotMachine:
	ldr	r2, .L485
	mov	r1, #0x0
	strb	r1, [r2]
	ldr	r1, .L485+0x4
	strh	r0, [r1]
	bx	lr
.L486:
	.align	2, 0
.L485:
	.word	sFindThatGamerWhichGame
	.word	sFindThatGamerCoinsSpent
.Lfe61:
	.size	 AlertTVThatPlayerPlayedSlotMachine,.Lfe61-AlertTVThatPlayerPlayedSlotMachine
	.align	2, 0
	.globl	AlertTVThatPlayerPlayedRoulette
	.type	 AlertTVThatPlayerPlayedRoulette,function
	.thumb_func
AlertTVThatPlayerPlayedRoulette:
	ldr	r2, .L488
	mov	r1, #0x1
	strb	r1, [r2]
	ldr	r1, .L488+0x4
	strh	r0, [r1]
	bx	lr
.L489:
	.align	2, 0
.L488:
	.word	sFindThatGamerWhichGame
	.word	sFindThatGamerCoinsSpent
.Lfe62:
	.size	 AlertTVThatPlayerPlayedRoulette,.Lfe62-AlertTVThatPlayerPlayedRoulette
	.align	2, 0
	.type	 sub_80EDE98,function
	.thumb_func
sub_80EDE98:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r8, r0
	mov	r3, #0x0
	ldr	r6, .L527
	ldr	r7, .L527+0x4
	add	r2, r6, #0
	mov	r1, #0x0
.L494:
	add	r0, r3, r2
	strb	r1, [r0]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0xf
	bls	.L494	@cond_branch
	mov	r3, #0x0
	mov	r5, #0x0
.L499:
	ldr	r0, [r7]
	ldr	r1, .L527+0x8
	add	r0, r0, r1
	add	r0, r0, r3
	ldrb	r4, [r0]
	add	r3, r3, #0x1
	cmp	r4, #0
	beq	.L498	@cond_branch
	mov	r1, #0x0
	ldrb	r0, [r6]
	cmp	r0, #0
	bne	.L505	@cond_branch
	strb	r4, [r6]
	b	.L526
.L528:
	.align	2, 0
.L527:
	.word	sTV_DecorationsBuffer
	.word	gSaveBlock1Ptr
	.word	0x1aae
.L505:
	add	r0, r1, r6
	ldrb	r0, [r0]
	cmp	r0, r4
	beq	.L498	@cond_branch
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xf
	bhi	.L498	@cond_branch
	add	r2, r1, r6
	ldrb	r0, [r2]
	cmp	r0, #0
	bne	.L505	@cond_branch
	strb	r4, [r2]
.L526:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L498:
	lsl	r0, r3, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0xf
	bls	.L499	@cond_branch
	cmp	r5, #0x4
	bls	.L509	@cond_branch
	mov	r0, #0x4
	mov	r1, r8
	strb	r0, [r1, #0x3]
	b	.L510
.L509:
	mov	r0, r8
	strb	r5, [r0, #0x3]
.L510:
	mov	r1, r8
	ldrb	r0, [r1, #0x3]
	cmp	r0, #0
	beq	.L511	@cond_branch
	cmp	r0, #0x1
	bne	.L514	@cond_branch
	ldrb	r0, [r6]
	strb	r0, [r1, #0x4]
	b	.L511
.L514:
	mov	r6, #0x0
	mov	r7, r5
	mul	r7, r7, r5
	cmp	r6, r7
	bge	.L516	@cond_branch
	ldr	r0, .L529
	mov	r9, r0
.L518:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r5, #0
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r5, #0
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	mov	r0, r9
	add	r2, r4, r0
	ldrb	r3, [r2]
	add	r1, r1, r9
	ldrb	r0, [r1]
	strb	r0, [r2]
	strb	r3, [r1]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, r7
	blt	.L518	@cond_branch
.L516:
	mov	r3, #0x0
	mov	r1, r8
	ldrb	r1, [r1, #0x3]
	cmp	r3, r1
	bcs	.L511	@cond_branch
	mov	r2, r8
	add	r2, r2, #0x4
	ldr	r4, .L529
.L523:
	add	r1, r2, r3
	add	r0, r3, r4
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	mov	r0, r8
	ldrb	r0, [r0, #0x3]
	cmp	r3, r0
	bcc	.L523	@cond_branch
.L511:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L530:
	.align	2, 0
.L529:
	.word	sTV_DecorationsBuffer
.Lfe63:
	.size	 sub_80EDE98,.Lfe63-sub_80EDE98
	.align	2, 0
	.type	 sub_80EDFB4,function
	.thumb_func
sub_80EDFB4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	sl, r0
	mov	r7, #0x0
	mov	r0, #0x0
	mov	r9, r0
	ldr	r1, .L547
	mov	r8, r1
.L535:
	mov	r0, #0x64
	mov	r1, r7
	mul	r1, r1, r0
	ldr	r0, .L547+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L534	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	bne	.L534	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	ldr	r2, .L547+0x8
	mov	r3, r9
	lsl	r1, r3, #0x3
	add	r6, r1, r2
	strb	r0, [r6]
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	strh	r0, [r6, #0x2]
	mov	r5, #0x0
	add	r0, r4, #0
	mov	r1, #0xd
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	beq	.L537	@cond_branch
	mov	r0, r8
	strh	r1, [r0]
	mov	r5, #0x1
.L537:
	add	r0, r4, #0
	mov	r1, #0xe
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	beq	.L538	@cond_branch
	lsl	r0, r5, #0x1
	add	r0, r0, r8
	strh	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L538:
	add	r0, r4, #0
	mov	r1, #0xf
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	beq	.L539	@cond_branch
	lsl	r0, r5, #0x1
	add	r0, r0, r8
	strh	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L539:
	add	r0, r4, #0
	mov	r1, #0x10
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	beq	.L540	@cond_branch
	lsl	r0, r5, #0x1
	add	r0, r0, r8
	strh	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L540:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r5, #0
	bl	__modsi3
	lsl	r0, r0, #0x1
	add	r0, r0, r8
	ldrh	r0, [r0]
	strh	r0, [r6, #0x4]
	mov	r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
.L534:
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0x5
	bls	.L535	@cond_branch
	mov	r7, #0x0
	mov	r1, #0x0
	cmp	r1, r9
	bcs	.L543	@cond_branch
	ldr	r2, .L547+0x8
.L545:
	lsl	r0, r7, #0x3
	add	r0, r0, r2
	ldrb	r0, [r0]
	add	r0, r1, r0
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, r9
	bcc	.L545	@cond_branch
.L543:
	add	r0, r1, #0
	mov	r1, r9
	bl	__divsi3
	mov	r1, sl
	strb	r0, [r1, #0x2]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, r9
	bl	__modsi3
	lsl	r0, r0, #0x10
	ldr	r1, .L547+0x8
	lsr	r0, r0, #0xd
	add	r0, r0, r1
	ldrh	r1, [r0, #0x2]
	mov	r2, sl
	strh	r1, [r2, #0x8]
	ldrh	r0, [r0, #0x4]
	strh	r0, [r2, #0xa]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L548:
	.align	2, 0
.L547:
	.word	sTV_SecretBaseVisitMovesTemp
	.word	gPlayerParty
	.word	sTV_SecretBaseVisitMonsTemp
.Lfe64:
	.size	 sub_80EDFB4,.Lfe64-sub_80EDFB4
	.align	2, 0
	.globl	TV_PutSecretBaseVisitOnTheAir
	.type	 TV_PutSecretBaseVisitOnTheAir,function
	.thumb_func
TV_PutSecretBaseVisitOnTheAir:
	push	{r4, lr}
	mov	r0, #0x1f
	mov	r1, #0x1
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	ldr	r4, .L551
	ldr	r0, [r4]
	ldr	r1, .L551+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r2, .L551+0x8
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L550	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L551+0x4
	add	r0, r0, r1
	ldr	r4, [r4]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x1f
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L551+0xc
	ldr	r1, [r1]
	bl	StringCopy
	add	r0, r4, #0
	bl	sub_80EDE98
	add	r0, r4, #0
	bl	sub_80EDFB4
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L551+0x10
	ldrb	r0, [r0]
	strb	r0, [r4, #0xc]
.L550:
	pop	{r4}
	pop	{r0}
	bx	r0
.L552:
	.align	2, 0
.L551:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe65:
	.size	 TV_PutSecretBaseVisitOnTheAir,.Lfe65-TV_PutSecretBaseVisitOnTheAir
	.align	2, 0
	.globl	sub_80EE184
	.type	 sub_80EE184,function
	.thumb_func
sub_80EE184:
	push	{r4, r5, r6, r7, lr}
	ldr	r6, .L585
	ldr	r0, [r6]
	ldr	r5, .L585+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L585+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.LCB5783
	b	.L553	@long jump
.LCB5783:
	mov	r0, #0x1e
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB5791
	b	.L553	@long jump
.LCB5791:
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r6]
	add	r4, r1, r0
	mov	r1, #0x0
	mov	r0, #0x1e
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	mov	r5, #0x0
	ldr	r6, .L585+0xc
	ldr	r3, .L585+0x10
	ldr	r7, .L585+0x14
	add	r2, r6, #0
	add	r2, r2, #0x36
.L558:
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r0, r5, r0
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xa
	bls	.L558	@cond_branch
	ldrb	r1, [r6, #0x5]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L560	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
.L560:
	ldrb	r0, [r3, #0x14]
	strb	r0, [r4, #0x4]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, [r7]
	bl	StringCopy
	ldrh	r0, [r6, #0x6]
	strh	r0, [r4, #0xa]
	ldr	r0, .L585+0x18
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x9
	bhi	.L561	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L585+0x1c
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L586:
	.align	2, 0
.L585:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gBattleResults
	.word	gMapHeader
	.word	gSaveBlock2Ptr
	.word	gBattleOutcome
	.word	.L571
	.align	2, 0
	.align	2, 0
.L571:
	.word	.L565
	.word	.L563
	.word	.L563
	.word	.L568
	.word	.L568
	.word	.L570
	.word	.L564
	.word	.L568
	.word	.L561
	.word	.L570
.L563:
	mov	r0, #0x0
	strb	r0, [r4]
	b	.L553
.L564:
	mov	r0, #0x0
	b	.L583
.L565:
	mov	r0, #0x1
	b	.L583
.L568:
	mov	r0, #0x2
	b	.L583
.L570:
	mov	r0, #0x3
.L583:
	strb	r0, [r4, #0x5]
.L561:
	ldr	r1, .L587
	ldrh	r0, [r1, #0x20]
	strh	r0, [r4, #0x2]
	ldrb	r0, [r4, #0x5]
	cmp	r0, #0x1
	beq	.L577	@cond_branch
	cmp	r0, #0x1
	bgt	.L573	@cond_branch
	cmp	r0, #0
	bne	.L573	@cond_branch
	ldrb	r1, [r1, #0x5]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L575	@cond_branch
	mov	r0, #0x1
	b	.L584
.L588:
	.align	2, 0
.L587:
	.word	gBattleResults
.L575:
	lsl	r0, r1, #0x1a
	lsr	r0, r0, #0x1c
.L584:
	strh	r0, [r4, #0x6]
	strh	r5, [r4, #0x8]
	b	.L573
.L577:
	ldrh	r0, [r1, #0x22]
	strh	r0, [r4, #0xc]
.L573:
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L589
	ldrb	r0, [r0]
	strb	r0, [r4, #0xe]
.L553:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L590:
	.align	2, 0
.L589:
	.word	gGameLanguage
.Lfe66:
	.size	 sub_80EE184,.Lfe66-sub_80EE184
	.align	2, 0
	.globl	sub_80EE2CC
	.type	 sub_80EE2CC,function
	.thumb_func
sub_80EE2CC:
	push	{r4, r5, r6, lr}
	ldr	r6, .L593
	ldr	r0, [r6]
	ldr	r5, .L593+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L593+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L592	@cond_branch
	mov	r0, #0x20
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L592	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r4, [r6]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x20
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L593+0xc
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L593+0x10
	ldrb	r1, [r0]
	mov	r0, #0x4
	sub	r0, r0, r1
	strb	r0, [r4, #0x4]
	ldr	r0, .L593+0x14
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2]
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L593+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0x5]
.L592:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L594:
	.align	2, 0
.L593:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
	.word	gGameLanguage
.Lfe67:
	.size	 sub_80EE2CC,.Lfe67-sub_80EE2CC
	.align	2, 0
	.globl	sub_80EE35C
	.type	 sub_80EE35C,function
	.thumb_func
sub_80EE35C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	add	r7, r3, #0
	ldr	r3, [sp, #0x24]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	sl, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r9, r1
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	str	r3, [sp]
	ldr	r0, .L603
	mov	r8, r0
	ldr	r0, [r0]
	ldr	r5, .L603+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L603+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L596	@cond_branch
	mov	r0, #0x21
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L596	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r2, r8
	ldr	r1, [r2]
	add	r4, r1, r0
	mov	r1, #0x0
	mov	r0, #0x21
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L603+0xc
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, sl
	strh	r0, [r4, #0x4]
	mov	r1, r9
	strh	r1, [r4, #0x6]
	lsl	r0, r6, #0x1
	add	r0, r0, r7
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2]
	mov	r2, #0x0
	mov	r3, #0x0
	add	r5, r4, #0
	add	r5, r5, #0x8
.L600:
	cmp	r2, r6
	beq	.L599	@cond_branch
	lsl	r0, r2, #0x1
	add	r0, r0, r7
	ldrh	r1, [r0]
	cmp	r1, #0
	beq	.L599	@cond_branch
	lsl	r0, r3, #0x1
	add	r0, r5, r0
	strh	r1, [r0]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
.L599:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x3
	bls	.L600	@cond_branch
	strb	r3, [r4, #0x10]
	mov	r2, sp
	ldrh	r2, [r2]
	strh	r2, [r4, #0xe]
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L603+0x10
	ldrb	r0, [r0]
	strb	r0, [r4, #0x11]
.L596:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L604:
	.align	2, 0
.L603:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe68:
	.size	 sub_80EE35C,.Lfe68-sub_80EE35C
	.align	2, 0
	.globl	sub_80EE44C
	.type	 sub_80EE44C,function
	.thumb_func
sub_80EE44C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	ldr	r6, .L607
	ldr	r0, [r6]
	ldr	r5, .L607+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L607+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L606	@cond_branch
	mov	r0, #0x27
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L606	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r4, [r6]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x27
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L607+0xc
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, r8
	strb	r0, [r4, #0x2]
	strb	r7, [r4, #0x3]
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L607+0x10
	ldrb	r0, [r0]
	strb	r0, [r4, #0x4]
.L606:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L608:
	.align	2, 0
.L607:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.Lfe69:
	.size	 sub_80EE44C,.Lfe69-sub_80EE44C
	.align	2, 0
	.globl	sub_80EE4DC
	.type	 sub_80EE4DC,function
	.thumb_func
sub_80EE4DC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	ldr	r7, .L615
	ldr	r0, [r7]
	ldr	r5, .L615+0x4
	add	r0, r0, r5
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L615+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L610	@cond_branch
	mov	r0, #0x23
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L610	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r7]
	add	r5, r1, r0
	mov	r1, #0x0
	mov	r0, #0x23
	strb	r0, [r5]
	strb	r1, [r5, #0x1]
	add	r0, r5, #0
	add	r0, r0, #0x13
	ldr	r1, .L615+0xc
	ldr	r1, [r1]
	bl	StringCopy
	add	r4, r5, #0x4
	add	r0, r6, #0
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	StripExtCtrlCodes
	add	r0, r6, #0
	bl	GetRibbonCount
	strb	r0, [r5, #0x2]
	mov	r0, r8
	bl	TV_MonDataIdxToRibbon
	strb	r0, [r5, #0x3]
	add	r0, r5, #0
	bl	tv_store_id_3x
	ldr	r0, .L615+0x10
	ldrb	r0, [r0]
	strb	r0, [r5, #0xf]
	cmp	r0, #0x1
	beq	.L612	@cond_branch
	add	r0, r6, #0
	mov	r1, #0x3
	bl	GetMonData
	cmp	r0, #0x1
	bne	.L611	@cond_branch
.L612:
	mov	r0, #0x1
	b	.L614
.L616:
	.align	2, 0
.L615:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	gGameLanguage
.L611:
	add	r0, r6, #0
	mov	r1, #0x3
	bl	GetMonData
.L614:
	strb	r0, [r5, #0x10]
.L610:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe70:
	.size	 sub_80EE4DC,.Lfe70-sub_80EE4DC
	.align	2, 0
	.globl	GetRibbonCount
	.type	 GetRibbonCount,function
	.thumb_func
GetRibbonCount:
	push	{r4, r5, lr}
	add	r5, r0, #0
	mov	r1, #0x32
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x33
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x34
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x35
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x36
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x43
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x44
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x45
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x46
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x47
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x48
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x49
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x4a
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x4b
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x4c
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x4d
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x4e
	bl	GetMonData
	add	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe71:
	.size	 GetRibbonCount,.Lfe71-GetRibbonCount
	.align	2, 0
	.globl	TV_MonDataIdxToRibbon
	.type	 TV_MonDataIdxToRibbon,function
	.thumb_func
TV_MonDataIdxToRibbon:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x43
	beq	.L637	@cond_branch
	cmp	r0, #0x32
	bne	.L620	@cond_branch
	mov	r0, #0x1
	b	.L636
.L620:
	cmp	r0, #0x33
	bne	.L621	@cond_branch
	mov	r0, #0x5
	b	.L636
.L621:
	cmp	r0, #0x34
	bne	.L622	@cond_branch
	mov	r0, #0x9
	b	.L636
.L622:
	cmp	r0, #0x35
	bne	.L623	@cond_branch
	mov	r0, #0xd
	b	.L636
.L623:
	cmp	r0, #0x36
	bne	.L624	@cond_branch
	mov	r0, #0x11
	b	.L636
.L624:
	cmp	r0, #0x44
	bne	.L625	@cond_branch
	mov	r0, #0x15
	b	.L636
.L625:
	cmp	r0, #0x45
	bne	.L626	@cond_branch
	mov	r0, #0x16
	b	.L636
.L626:
	cmp	r0, #0x46
	bne	.L627	@cond_branch
	mov	r0, #0x17
	b	.L636
.L627:
	cmp	r0, #0x47
	bne	.L628	@cond_branch
	mov	r0, #0x18
	b	.L636
.L628:
	cmp	r0, #0x48
	bne	.L629	@cond_branch
	mov	r0, #0x19
	b	.L636
.L629:
	cmp	r0, #0x49
	bne	.L630	@cond_branch
	mov	r0, #0x1a
	b	.L636
.L630:
	cmp	r0, #0x4a
	bne	.L631	@cond_branch
	mov	r0, #0x1b
	b	.L636
.L631:
	cmp	r0, #0x4b
	bne	.L632	@cond_branch
	mov	r0, #0x1c
	b	.L636
.L632:
	cmp	r0, #0x4c
	bne	.L633	@cond_branch
	mov	r0, #0x1d
	b	.L636
.L633:
	cmp	r0, #0x4d
	bne	.L634	@cond_branch
	mov	r0, #0x1e
	b	.L636
.L634:
	cmp	r0, #0x4e
	beq	.L635	@cond_branch
.L637:
	mov	r0, #0x0
	b	.L636
.L635:
	mov	r0, #0x1f
.L636:
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 TV_MonDataIdxToRibbon,.Lfe72-TV_MonDataIdxToRibbon
	.align	2, 0
	.globl	sub_80EE72C
	.type	 sub_80EE72C,function
	.thumb_func
sub_80EE72C:
	push	{r4, r5, r6, lr}
	ldr	r5, .L640
	ldr	r0, [r5]
	ldr	r6, .L640+0x4
	add	r0, r0, r6
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r4, .L640+0x8
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L639	@cond_branch
	mov	r0, #0x22
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L639	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldr	r4, [r5]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x22
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L640+0xc
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, [r5]
	ldr	r2, .L640+0x10
	add	r1, r0, r2
	ldrh	r1, [r1]
	strh	r1, [r4, #0x4]
	ldr	r1, .L640+0x14
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r4, #0x6]
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L640+0x18
	ldrb	r0, [r0]
	strb	r0, [r4, #0x8]
.L639:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L641:
	.align	2, 0
.L640:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	0x2bb0
	.word	0x2bb2
	.word	gGameLanguage
.Lfe73:
	.size	 sub_80EE72C,.Lfe73-sub_80EE72C
	.align	2, 0
	.globl	sub_80EE7C0
	.type	 sub_80EE7C0,function
	.thumb_func
sub_80EE7C0:
	push	{r4, lr}
	ldr	r4, .L647
	ldr	r0, [r4]
	ldr	r1, .L647+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L647+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L645	@cond_branch
	mov	r0, #0xb
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L647+0xc
	ldrh	r0, [r0]
	cmp	r0, #0x1
	beq	.L645	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L647+0x10
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0xff
	beq	.L645	@cond_branch
	mov	r0, #0x0
	b	.L646
.L648:
	.align	2, 0
.L647:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSpecialVar_Result
	.word	0x3150
.L645:
	mov	r0, #0x1
.L646:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe74:
	.size	 sub_80EE7C0,.Lfe74-sub_80EE7C0
	.align	2, 0
	.globl	sub_80EE818
	.type	 sub_80EE818,function
	.thumb_func
sub_80EE818:
	push	{r4, r5, r6, r7, lr}
	mov	r0, #0x24
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L650	@cond_branch
	ldr	r0, .L660
	ldr	r0, [r0]
	ldr	r1, .L660+0x4
	add	r7, r0, r1
	bl	GetPlayerIDAsU32
	add	r4, r0, #0
	mov	r6, #0x5
	lsr	r5, r4, #0x8
.L654:
	lsl	r0, r6, #0x3
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r1, r0, r7
	ldrb	r0, [r1]
	cmp	r0, #0x24
	bne	.L653	@cond_branch
	mov	r3, #0xff
	add	r0, r4, #0
	and	r0, r0, r3
	add	r2, r1, #0
	add	r2, r2, #0x22
	ldrb	r2, [r2]
	cmp	r0, r2
	bne	.L653	@cond_branch
	add	r0, r5, #0
	and	r0, r0, r3
	add	r1, r1, #0x23
	ldrb	r1, [r1]
	cmp	r0, r1
	beq	.L659	@cond_branch
.L653:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x17
	bls	.L654	@cond_branch
.L650:
	ldr	r0, .L660
	ldr	r0, [r0]
	ldr	r1, .L660+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r1, .L660+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L657	@cond_branch
	mov	r0, #0x1
	b	.L658
.L661:
	.align	2, 0
.L660:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
.L659:
	ldr	r5, .L662
	ldr	r0, [r5]
	ldr	r4, .L662+0x4
	add	r0, r0, r4
	add	r1, r6, #0
	bl	DeleteTVShowInArrayByIdx
	ldr	r0, [r5]
	add	r0, r0, r4
	bl	sub_80EF93C
	mov	r0, #0x1
	b	.L658
.L663:
	.align	2, 0
.L662:
	.word	gSaveBlock1Ptr
	.word	0x27cc
.L657:
	mov	r0, #0x0
.L658:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe75:
	.size	 sub_80EE818,.Lfe75-sub_80EE818
	.align	2, 0
	.globl	sub_80EE8C8
	.type	 sub_80EE8C8,function
	.thumb_func
sub_80EE8C8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldr	r5, .L683
	ldr	r0, [r5]
	ldr	r1, .L683+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r2, .L683+0x8
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.LCB6928
	b	.L665	@long jump
.LCB6928:
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r2, .L683+0x4
	add	r0, r0, r2
	ldr	r1, [r5]
	add	r7, r1, r0
	mov	r1, #0x0
	mov	r0, #0x24
	strb	r0, [r7]
	strb	r1, [r7, #0x1]
	add	r0, r7, #0
	add	r0, r0, #0x13
	ldr	r1, .L683+0xc
	ldr	r1, [r1]
	bl	StringCopy
	strh	r6, [r7, #0x2]
	strb	r4, [r7, #0xd]
	sub	r0, r4, #0x1
	cmp	r0, #0xc
	bls	.LCB6954
	b	.L666	@long jump
.LCB6954:
	lsl	r0, r0, #0x2
	ldr	r1, .L683+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L684:
	.align	2, 0
.L683:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	.L680
	.align	2, 0
	.align	2, 0
.L680:
	.word	.L676
	.word	.L677
	.word	.L678
	.word	.L679
	.word	.L676
	.word	.L676
	.word	.L676
	.word	.L676
	.word	.L676
	.word	.L676
	.word	.L676
	.word	.L676
	.word	.L676
.L676:
	ldr	r4, .L685
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x4]
	add	r0, r4, #0
	add	r0, r0, #0x64
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x6]
	add	r4, r4, #0xc8
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x8]
	b	.L666
.L686:
	.align	2, 0
.L685:
	.word	gPlayerParty
.L677:
	ldr	r4, .L687
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x4]
	add	r0, r4, #0
	add	r0, r0, #0x64
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x6]
	add	r0, r4, #0
	add	r0, r0, #0xc8
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x8]
	mov	r1, #0x96
	lsl	r1, r1, #0x1
	add	r0, r4, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0xa]
	b	.L666
.L688:
	.align	2, 0
.L687:
	.word	gPlayerParty
.L678:
	ldr	r4, .L689
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x4]
	add	r4, r4, #0x64
	add	r0, r4, #0
	b	.L682
.L690:
	.align	2, 0
.L689:
	.word	gPlayerParty
.L679:
	ldr	r2, .L691
	mov	r8, r2
	ldr	r6, .L691+0x4
	ldr	r0, [r6]
	ldr	r1, .L691+0x8
	add	r0, r0, r1
	ldrh	r0, [r0]
	mov	r5, #0x64
	mov	r1, r0
	mul	r1, r1, r5
	mov	r4, #0xea
	lsl	r4, r4, #0x1
	add	r1, r1, r4
	ldr	r0, [r2]
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x4]
	ldr	r0, [r6]
	ldr	r2, .L691+0xc
	add	r0, r0, r2
	ldrh	r0, [r0]
	mov	r1, r0
	mul	r1, r1, r5
	add	r1, r1, r4
	mov	r2, r8
	ldr	r0, [r2]
	add	r0, r0, r1
.L682:
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x6]
.L666:
	add	r0, r7, #0
	bl	tv_store_id_3x
	ldr	r0, .L691+0x10
	ldrb	r0, [r0]
	strb	r0, [r7, #0xc]
.L665:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L692:
	.align	2, 0
.L691:
	.word	gSaveBlock1Ptr
	.word	gSaveBlock2Ptr
	.word	0xcaa
	.word	0xcac
	.word	gGameLanguage
.Lfe76:
	.size	 sub_80EE8C8,.Lfe76-sub_80EE8C8
	.align	2, 0
	.globl	sub_80EEA70
	.type	 sub_80EEA70,function
	.thumb_func
sub_80EEA70:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x20
	mov	r0, #0x26
	mov	r1, #0x0
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB7141
	b	.L694	@long jump
.LCB7141:
	ldr	r7, .L700
	ldr	r0, [r7]
	ldr	r1, .L700+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r2, .L700+0x8
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L694	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L700+0x4
	add	r0, r0, r1
	ldr	r1, [r7]
	add	r5, r1, r0
	mov	r1, #0x0
	mov	r0, #0x26
	strb	r0, [r5]
	strb	r1, [r5, #0x1]
	add	r0, r5, #0
	add	r0, r0, #0x13
	ldr	r1, .L700+0xc
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L700+0x10
	bl	VarGet
	strh	r0, [r5, #0x2]
	bl	CopyCurSecretBaseOwnerName_StrVar1
	ldr	r1, .L700+0x14
	mov	r0, sp
	bl	StringCopy
	mov	r0, sp
	bl	StripExtCtrlCodes
	add	r0, r5, #0x4
	mov	r1, sp
	bl	StringCopy
	ldr	r0, .L700+0x18
	bl	VarGet
	strh	r0, [r5, #0x10]
	ldr	r0, .L700+0x1c
	bl	VarGet
	add	r4, r0, #0
	ldr	r0, .L700+0x20
	bl	VarGet
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r0, r0, #0x10
	add	r4, r4, r0
	str	r4, [r5, #0xc]
	add	r0, r5, #0
	bl	tv_store_id_3x
	ldr	r0, .L700+0x24
	ldrb	r0, [r0]
	strb	r0, [r5, #0x1b]
	cmp	r0, #0x1
	beq	.L697	@cond_branch
	ldr	r4, [r7]
	ldr	r6, .L700+0x28
	add	r0, r6, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x5
	add	r4, r4, r1
	ldr	r0, .L700+0x2c
	add	r4, r4, r0
	ldrb	r0, [r4]
	cmp	r0, #0x1
	bne	.L696	@cond_branch
.L697:
	mov	r0, #0x1
	b	.L699
.L701:
	.align	2, 0
.L700:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	0x40ec
	.word	gStringVar1
	.word	0x40ed
	.word	0x40ee
	.word	0x40ef
	.word	gGameLanguage
	.word	0x4054
	.word	0x1aa9
.L696:
	add	r0, r6, #0
	bl	VarGet
	ldr	r2, [r7]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x5
	add	r2, r2, r1
	ldr	r1, .L702
	add	r2, r2, r1
	ldrb	r0, [r2]
.L699:
	strb	r0, [r5, #0x1c]
.L694:
	add	sp, sp, #0x20
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L703:
	.align	2, 0
.L702:
	.word	0x1aa9
.Lfe77:
	.size	 sub_80EEA70,.Lfe77-sub_80EEA70
	.align	2, 0
	.type	 sub_80EEB98,function
	.thumb_func
sub_80EEB98:
	push	{r4, r5, r6, r7, lr}
	mov	r5, #0x0
	ldr	r6, .L716
	add	r7, r6, #0x2
	b	.L705
.L717:
	.align	2, 0
.L716:
	.word	sNumberOneVarsAndThresholds
.L707:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L705:
	cmp	r5, #0x6
	bhi	.L706	@cond_branch
	lsl	r4, r5, #0x2
	add	r0, r4, r6
	ldrh	r0, [r0]
	bl	VarGet
	add	r4, r4, r7
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrh	r4, [r4]
	cmp	r0, r4
	bcc	.L707	@cond_branch
	add	r0, r5, #0
	bl	sub_80EEBF4
.L706:
	mov	r5, #0x0
	ldr	r4, .L718
.L714:
	lsl	r0, r5, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0]
	mov	r1, #0x0
	bl	VarSet
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x6
	bls	.L714	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L719:
	.align	2, 0
.L718:
	.word	sNumberOneVarsAndThresholds
.Lfe78:
	.size	 sub_80EEB98,.Lfe78-sub_80EEB98
	.align	2, 0
	.type	 sub_80EEBF4,function
	.thumb_func
sub_80EEBF4:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, #0x25
	mov	r1, #0x1
	bl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	ldr	r4, .L722
	ldr	r0, [r4]
	ldr	r1, .L722+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r2, .L722+0x8
	strb	r0, [r2]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L721	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L722+0x4
	add	r0, r0, r1
	ldr	r4, [r4]
	add	r4, r4, r0
	mov	r1, #0x0
	mov	r0, #0x25
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L722+0xc
	ldr	r1, [r1]
	bl	StringCopy
	strb	r5, [r4, #0x4]
	ldr	r1, .L722+0x10
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	VarGet
	strh	r0, [r4, #0x2]
	add	r0, r4, #0
	bl	tv_store_id_3x
	ldr	r0, .L722+0x14
	ldrb	r0, [r0]
	strb	r0, [r4, #0x5]
.L721:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L723:
	.align	2, 0
.L722:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSaveBlock2Ptr
	.word	sNumberOneVarsAndThresholds
	.word	gGameLanguage
.Lfe79:
	.size	 sub_80EEBF4,.Lfe79-sub_80EEBF4
	.align	2, 0
	.globl	sub_80EEC80
	.type	 sub_80EEC80,function
	.thumb_func
sub_80EEC80:
	push	{r4, lr}
	ldr	r4, .L725
	add	r0, r4, #0
	bl	VarGet
	add	r1, r0, #0
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L726:
	.align	2, 0
.L725:
	.word	0x40e6
.Lfe80:
	.size	 sub_80EEC80,.Lfe80-sub_80EEC80
	.align	2, 0
	.globl	sub_80EECA4
	.type	 sub_80EECA4,function
	.thumb_func
sub_80EECA4:
	push	{r4, lr}
	ldr	r4, .L728
	add	r0, r4, #0
	bl	VarGet
	add	r1, r0, #0
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L729:
	.align	2, 0
.L728:
	.word	0x40eb
.Lfe81:
	.size	 sub_80EECA4,.Lfe81-sub_80EECA4
	.align	2, 0
	.globl	sub_80EECC8
	.type	 sub_80EECC8,function
	.thumb_func
sub_80EECC8:
	push	{r4, lr}
	ldr	r4, .L731
	add	r0, r4, #0
	bl	VarGet
	add	r1, r0, #0
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L732:
	.align	2, 0
.L731:
	.word	0x40e7
.Lfe82:
	.size	 sub_80EECC8,.Lfe82-sub_80EECC8
	.align	2, 0
	.globl	sub_80EECEC
	.type	 sub_80EECEC,function
	.thumb_func
sub_80EECEC:
	push	{r4, lr}
	ldr	r4, .L734
	add	r0, r4, #0
	bl	VarGet
	add	r1, r0, #0
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L735:
	.align	2, 0
.L734:
	.word	0x40e8
.Lfe83:
	.size	 sub_80EECEC,.Lfe83-sub_80EECEC
	.align	2, 0
	.globl	sub_80EED10
	.type	 sub_80EED10,function
	.thumb_func
sub_80EED10:
	push	{r4, lr}
	ldr	r4, .L737
	add	r0, r4, #0
	bl	VarGet
	add	r1, r0, #0
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L738:
	.align	2, 0
.L737:
	.word	0x40e9
.Lfe84:
	.size	 sub_80EED10,.Lfe84-sub_80EED10
	.align	2, 0
	.globl	sub_80EED34
	.type	 sub_80EED34,function
	.thumb_func
sub_80EED34:
	push	{r4, lr}
	ldr	r4, .L740
	add	r0, r4, #0
	bl	VarGet
	add	r1, r0, #0
	ldr	r0, .L740+0x4
	ldrh	r0, [r0]
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L741:
	.align	2, 0
.L740:
	.word	0x40ea
	.word	gSpecialVar_0x8006
.Lfe85:
	.size	 sub_80EED34,.Lfe85-sub_80EED34
	.align	2, 0
	.globl	sub_80EED60
	.type	 sub_80EED60,function
	.thumb_func
sub_80EED60:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r5, .L743
	add	r0, r5, #0
	bl	VarGet
	add	r4, r4, r0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r5, #0
	add	r1, r4, #0
	bl	VarSet
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L744:
	.align	2, 0
.L743:
	.word	0x40f1
.Lfe86:
	.size	 sub_80EED60,.Lfe86-sub_80EED60
	.align	2, 0
	.type	 sub_80EED88,function
	.thumb_func
sub_80EED88:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L749
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L746	@cond_branch
	ldr	r6, .L749+0x4
	ldr	r0, [r6]
	ldr	r7, .L749+0x8
	add	r0, r0, r7
	bl	sub_80EEE30
	ldr	r5, .L749+0xc
	strb	r0, [r5]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L746	@cond_branch
	ldr	r0, .L749+0x10
	bl	TV_BernoulliTrial
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L746	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	and	r0, r0, r1
	add	r4, r0, #0x1
	add	r0, r4, #0
	bl	sub_80EF0E4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L746	@cond_branch
	ldr	r1, [r6]
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	add	r1, r1, r7
	strb	r4, [r1]
	ldr	r2, [r6]
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	lsl	r0, r0, #0x2
	add	r0, r2, r0
	ldr	r1, .L749+0x14
	add	r0, r0, r1
	mov	r1, #0x4
	strh	r1, [r0]
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldr	r0, .L749+0x18
	add	r2, r2, r0
	mov	r0, #0x1
	strb	r0, [r2]
.L746:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L750:
	.align	2, 0
.L749:
	.word	0x864
	.word	gSaveBlock1Ptr
	.word	0x2b50
	.word	sCurTVShowSlot
	.word	0x28f
	.word	0x2b52
	.word	0x2b51
.Lfe87:
	.size	 sub_80EED88,.Lfe87-sub_80EED88
	.align	2, 0
	.globl	sub_80EEE30
	.type	 sub_80EEE30,function
	.thumb_func
sub_80EEE30:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x0
.L755:
	lsl	r0, r1, #0x18
	asr	r1, r0, #0x18
	lsl	r0, r1, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L754	@cond_branch
	add	r0, r1, #0
	b	.L758
.L754:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0xf
	ble	.L755	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L758:
	pop	{r1}
	bx	r1
.Lfe88:
	.size	 sub_80EEE30,.Lfe88-sub_80EEE30
	.align	2, 0
	.globl	ClearPokemonNews
	.type	 ClearPokemonNews,function
	.thumb_func
ClearPokemonNews:
	push	{r4, lr}
	mov	r4, #0x0
.L763:
	add	r0, r4, #0
	bl	ClearPokemonNewsI
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.L763	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe89:
	.size	 ClearPokemonNews,.Lfe89-ClearPokemonNews
	.align	2, 0
	.globl	ClearPokemonNewsI
	.type	 ClearPokemonNewsI,function
	.thumb_func
ClearPokemonNewsI:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	ldr	r3, .L766
	ldr	r1, [r3]
	lsr	r0, r0, #0x16
	add	r1, r1, r0
	ldr	r2, .L766+0x4
	add	r1, r1, r2
	mov	r2, #0x0
	strb	r2, [r1]
	ldr	r1, [r3]
	add	r1, r1, r0
	ldr	r4, .L766+0x8
	add	r1, r1, r4
	strb	r2, [r1]
	ldr	r1, [r3]
	add	r1, r1, r0
	ldr	r0, .L766+0xc
	add	r1, r1, r0
	strh	r2, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L767:
	.align	2, 0
.L766:
	.word	gSaveBlock1Ptr
	.word	0x2b50
	.word	0x2b51
	.word	0x2b52
.Lfe90:
	.size	 ClearPokemonNewsI,.Lfe90-ClearPokemonNewsI
	.align	2, 0
	.type	 sub_80EEEB8,function
	.thumb_func
sub_80EEEB8:
	push	{r4, r5, r6, r7, lr}
	mov	r2, #0x0
	ldr	r6, .L782
.L772:
	ldr	r0, .L782
	ldr	r0, [r0]
	lsl	r1, r2, #0x2
	add	r0, r0, r1
	ldr	r3, .L782+0x4
	add	r0, r0, r3
	ldrb	r0, [r0]
	add	r5, r2, #0x1
	cmp	r0, #0
	bne	.L771	@cond_branch
	lsl	r0, r5, #0x18
	b	.L781
.L783:
	.align	2, 0
.L782:
	.word	gSaveBlock1Ptr
	.word	0x2b50
.L777:
	ldr	r3, [r6]
	lsl	r4, r2, #0x2
	add	r0, r3, r4
	ldr	r7, .L784
	add	r0, r0, r7
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L776	@cond_branch
	add	r0, r3, r7
	add	r1, r0, r1
	add	r0, r0, r4
	ldr	r0, [r0]
	str	r0, [r1]
	add	r0, r2, #0
	bl	ClearPokemonNewsI
	b	.L771
.L785:
	.align	2, 0
.L784:
	.word	0x2b50
.L776:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
.L781:
	lsr	r2, r0, #0x18
	cmp	r2, #0xf
	bls	.L777	@cond_branch
.L771:
	lsl	r0, r5, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xe
	bls	.L772	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe91:
	.size	 sub_80EEEB8,.Lfe91-sub_80EEEB8
	.align	2, 0
	.globl	FindAnyTVNewsOnTheAir
	.type	 FindAnyTVNewsOnTheAir,function
	.thumb_func
FindAnyTVNewsOnTheAir:
	push	{r4, lr}
	mov	r2, #0x0
	ldr	r0, .L794
	ldr	r3, [r0]
.L790:
	lsl	r0, r2, #0x2
	add	r1, r3, r0
	ldr	r4, .L794+0x4
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L789	@cond_branch
	add	r4, r4, #0x1
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L789	@cond_branch
	add	r4, r4, #0x1
	add	r0, r1, r4
	ldrh	r0, [r0]
	cmp	r0, #0x2
	bhi	.L789	@cond_branch
	add	r0, r2, #0
	b	.L793
.L795:
	.align	2, 0
.L794:
	.word	gSaveBlock1Ptr
	.word	0x2b50
.L789:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xf
	bls	.L790	@cond_branch
	mov	r0, #0xff
.L793:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe92:
	.size	 FindAnyTVNewsOnTheAir,.Lfe92-FindAnyTVNewsOnTheAir
	.align	2, 0
	.globl	DoPokeNews
	.type	 DoPokeNews,function
	.thumb_func
DoPokeNews:
	push	{r4, r5, lr}
	bl	FindAnyTVNewsOnTheAir
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xff
	bne	.L797	@cond_branch
	ldr	r1, .L805
	mov	r0, #0x0
	b	.L803
.L806:
	.align	2, 0
.L805:
	.word	gSpecialVar_Result
.L797:
	ldr	r5, .L807
	ldr	r0, [r5]
	lsl	r4, r2, #0x2
	add	r1, r0, r4
	ldr	r0, .L807+0x4
	add	r2, r1, r0
	ldrh	r0, [r2]
	cmp	r0, #0
	bne	.L799	@cond_branch
	ldr	r2, .L807+0x8
	add	r1, r1, r2
	mov	r0, #0x2
	strb	r0, [r1]
	ldr	r0, .L807+0xc
	ldrb	r0, [r0, #0x2]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0x13
	bgt	.L800	@cond_branch
	ldr	r1, .L807+0x10
	ldr	r0, [r5]
	add	r0, r0, r4
	sub	r2, r2, #0x1
	b	.L804
.L808:
	.align	2, 0
.L807:
	.word	gSaveBlock1Ptr
	.word	0x2b52
	.word	0x2b51
	.word	gLocalTime
	.word	sPokeNewsTextGroup_Ongoing
.L800:
	ldr	r1, .L809
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r2, .L809+0x4
.L804:
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	ShowFieldMessage
	b	.L802
.L810:
	.align	2, 0
.L809:
	.word	sPokeNewsTextGroup_Ending
	.word	0x2b50
.L799:
	ldrh	r1, [r2]
	ldr	r0, .L811
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r1, .L811+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r1, .L811+0x8
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r2, .L811+0xc
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	ShowFieldMessage
.L802:
	ldr	r1, .L811+0x10
	mov	r0, #0x1
.L803:
	strh	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L812:
	.align	2, 0
.L811:
	.word	gStringVar1
	.word	0x2b51
	.word	sPokeNewsTextGroup_Upcoming
	.word	0x2b50
	.word	gSpecialVar_Result
.Lfe93:
	.size	 DoPokeNews,.Lfe93-DoPokeNews
	.align	2, 0
	.globl	GetPriceReduction
	.type	 GetPriceReduction,function
	.thumb_func
GetPriceReduction:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0
	bne	.L814	@cond_branch
	b	.L824
.L823:
	mov	r0, #0x1
	b	.L822
.L814:
	mov	r2, #0x0
	ldr	r4, .L825
.L818:
	ldr	r1, [r4]
	lsl	r0, r2, #0x2
	add	r1, r1, r0
	ldr	r5, .L825+0x4
	add	r0, r1, r5
	ldrb	r0, [r0]
	cmp	r0, r3
	bne	.L817	@cond_branch
	ldr	r2, .L825+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L824	@cond_branch
	add	r0, r3, #0
	bl	IsPriceDiscounted
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L823	@cond_branch
	b	.L824
.L826:
	.align	2, 0
.L825:
	.word	gSaveBlock1Ptr
	.word	0x2b50
	.word	0x2b51
.L817:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xf
	bls	.L818	@cond_branch
.L824:
	mov	r0, #0x0
.L822:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe94:
	.size	 GetPriceReduction,.Lfe94-GetPriceReduction
	.align	2, 0
	.globl	IsPriceDiscounted
	.type	 IsPriceDiscounted,function
	.thumb_func
IsPriceDiscounted:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L829	@cond_branch
	cmp	r0, #0x3
	beq	.L831	@cond_branch
.L837:
	mov	r0, #0x1
	b	.L835
.L829:
	ldr	r0, .L838
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L832	@cond_branch
	ldr	r0, .L838+0x4
	ldrh	r0, [r0]
	cmp	r0, #0x19
	beq	.L837	@cond_branch
	b	.L832
.L839:
	.align	2, 0
.L838:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_LastTalked
.L831:
	ldr	r0, .L840
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L840+0x4
	cmp	r1, r0
	beq	.L837	@cond_branch
.L832:
	mov	r0, #0x0
.L835:
	pop	{r1}
	bx	r1
.L841:
	.align	2, 0
.L840:
	.word	gSaveBlock1Ptr
	.word	0x150d
.Lfe95:
	.size	 IsPriceDiscounted,.Lfe95-IsPriceDiscounted
	.align	2, 0
	.globl	sub_80EF0E4
	.type	 sub_80EF0E4,function
	.thumb_func
sub_80EF0E4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	bne	.L843	@cond_branch
.L852:
	mov	r0, #0x1
	b	.L850
.L843:
	mov	r1, #0x0
	ldr	r0, .L853
	ldr	r3, [r0]
	ldr	r4, .L853+0x4
.L847:
	lsl	r0, r1, #0x2
	add	r0, r3, r0
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, r2
	beq	.L852	@cond_branch
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xf
	bls	.L847	@cond_branch
	mov	r0, #0x0
.L850:
	pop	{r4}
	pop	{r1}
	bx	r1
.L854:
	.align	2, 0
.L853:
	.word	gSaveBlock1Ptr
	.word	0x2b50
.Lfe96:
	.size	 sub_80EF0E4,.Lfe96-sub_80EF0E4
	.align	2, 0
	.type	 sub_80EF120,function
	.thumb_func
sub_80EF120:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r6, #0x0
	ldr	r0, .L865
	mov	r8, r0
.L859:
	mov	r1, r8
	ldr	r0, [r1]
	lsl	r1, r6, #0x2
	add	r2, r0, r1
	ldr	r3, .L865+0x4
	add	r0, r2, r3
	ldrb	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0
	beq	.L858	@cond_branch
	ldr	r1, .L865+0x8
	add	r0, r2, r1
	ldrh	r0, [r0]
	cmp	r0, r7
	bcs	.L861	@cond_branch
	add	r0, r6, #0
	bl	ClearPokemonNewsI
	b	.L858
.L866:
	.align	2, 0
.L865:
	.word	gSaveBlock1Ptr
	.word	0x2b50
	.word	0x2b52
.L861:
	ldr	r5, .L867
	add	r0, r2, r5
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L863	@cond_branch
	ldr	r0, .L867+0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x1
	bne	.L863	@cond_branch
	mov	r2, r8
	ldr	r0, [r2]
	add	r0, r0, r4
	add	r0, r0, r5
	strb	r1, [r0]
.L863:
	mov	r3, r8
	ldr	r1, [r3]
	add	r1, r1, r4
	ldr	r0, .L867+0x8
	add	r1, r1, r0
	ldrh	r0, [r1]
	sub	r0, r0, r7
	strh	r0, [r1]
.L858:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0xf
	bls	.L859	@cond_branch
	bl	sub_80EEEB8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L868:
	.align	2, 0
.L867:
	.word	0x2b51
	.word	0x864
	.word	0x2b52
.Lfe97:
	.size	 sub_80EF120,.Lfe97-sub_80EF120
	.align	2, 0
	.globl	CopyContestRankToStringVar
	.type	 CopyContestRankToStringVar,function
	.thumb_func
CopyContestRankToStringVar:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r1, #0
	cmp	r1, #0x1
	beq	.L872	@cond_branch
	cmp	r1, #0x1
	bgt	.L877	@cond_branch
	cmp	r1, #0
	beq	.L871	@cond_branch
	b	.L870
.L877:
	cmp	r2, #0x2
	beq	.L873	@cond_branch
	cmp	r2, #0x3
	beq	.L874	@cond_branch
	b	.L870
.L871:
	ldr	r1, .L878
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L878+0x4
	ldr	r1, [r1, #0x14]
	bl	StringCopy
	b	.L870
.L879:
	.align	2, 0
.L878:
	.word	gTVStringVarPtrs
	.word	gUnknown_0858BAF0
.L872:
	ldr	r1, .L880
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L880+0x4
	ldr	r1, [r1, #0x18]
	bl	StringCopy
	b	.L870
.L881:
	.align	2, 0
.L880:
	.word	gTVStringVarPtrs
	.word	gUnknown_0858BAF0
.L873:
	ldr	r1, .L882
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L882+0x4
	ldr	r1, [r1, #0x1c]
	bl	StringCopy
	b	.L870
.L883:
	.align	2, 0
.L882:
	.word	gTVStringVarPtrs
	.word	gUnknown_0858BAF0
.L874:
	ldr	r1, .L884
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L884+0x4
	ldr	r1, [r1, #0x20]
	bl	StringCopy
.L870:
	pop	{r0}
	bx	r0
.L885:
	.align	2, 0
.L884:
	.word	gTVStringVarPtrs
	.word	gUnknown_0858BAF0
.Lfe98:
	.size	 CopyContestRankToStringVar,.Lfe98-CopyContestRankToStringVar
	.align	2, 0
	.globl	CopyContestCategoryToStringVar
	.type	 CopyContestCategoryToStringVar,function
	.thumb_func
CopyContestCategoryToStringVar:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r0, r1, #0x18
	cmp	r0, #0x4
	bhi	.L887	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L895
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L896:
	.align	2, 0
.L895:
	.word	.L893
	.align	2, 0
	.align	2, 0
.L893:
	.word	.L888
	.word	.L889
	.word	.L890
	.word	.L891
	.word	.L892
.L888:
	ldr	r1, .L897
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L897+0x4
	ldr	r1, [r1]
	bl	StringCopy
	b	.L887
.L898:
	.align	2, 0
.L897:
	.word	gTVStringVarPtrs
	.word	gUnknown_0858BAF0
.L889:
	ldr	r1, .L899
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L899+0x4
	ldr	r1, [r1, #0x4]
	bl	StringCopy
	b	.L887
.L900:
	.align	2, 0
.L899:
	.word	gTVStringVarPtrs
	.word	gUnknown_0858BAF0
.L890:
	ldr	r1, .L901
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L901+0x4
	ldr	r1, [r1, #0x8]
	bl	StringCopy
	b	.L887
.L902:
	.align	2, 0
.L901:
	.word	gTVStringVarPtrs
	.word	gUnknown_0858BAF0
.L891:
	ldr	r1, .L903
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L903+0x4
	ldr	r1, [r1, #0xc]
	bl	StringCopy
	b	.L887
.L904:
	.align	2, 0
.L903:
	.word	gTVStringVarPtrs
	.word	gUnknown_0858BAF0
.L892:
	ldr	r1, .L905
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L905+0x4
	ldr	r1, [r1, #0x10]
	bl	StringCopy
.L887:
	pop	{r0}
	bx	r0
.L906:
	.align	2, 0
.L905:
	.word	gTVStringVarPtrs
	.word	gUnknown_0858BAF0
.Lfe99:
	.size	 CopyContestCategoryToStringVar,.Lfe99-CopyContestCategoryToStringVar
	.align	2, 0
	.globl	SetContestCategoryStringVarForInterview
	.type	 SetContestCategoryStringVarForInterview,function
	.thumb_func
SetContestCategoryStringVarForInterview:
	push	{lr}
	ldr	r2, .L908
	ldr	r0, .L908+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L908+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r1, r1, r0
	ldrb	r1, [r1, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	mov	r0, #0x1
	bl	CopyContestCategoryToStringVar
	pop	{r0}
	bx	r0
.L909:
	.align	2, 0
.L908:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
.Lfe100:
	.size	 SetContestCategoryStringVarForInterview,.Lfe100-SetContestCategoryStringVarForInterview
	.align	2, 0
	.globl	TV_PrintIntToStringVar
	.type	 TV_PrintIntToStringVar,function
	.thumb_func
TV_PrintIntToStringVar:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	bl	CountDigits
	add	r3, r0, #0
	ldr	r0, .L911
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r0, [r4]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r1, r5, #0
	mov	r2, #0x0
	bl	ConvertIntToDecimalStringN
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L912:
	.align	2, 0
.L911:
	.word	gTVStringVarPtrs
.Lfe101:
	.size	 TV_PrintIntToStringVar,.Lfe101-TV_PrintIntToStringVar
	.align	2, 0
	.globl	CountDigits
	.type	 CountDigits,function
	.thumb_func
CountDigits:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0xa
	bl	__divsi3
	cmp	r0, #0
	beq	.L923	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x64
	bl	__divsi3
	cmp	r0, #0
	bne	.L915	@cond_branch
	mov	r0, #0x2
	b	.L922
.L915:
	mov	r1, #0xfa
	lsl	r1, r1, #0x2
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L916	@cond_branch
	mov	r0, #0x3
	b	.L922
.L916:
	ldr	r1, .L924
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L917	@cond_branch
	mov	r0, #0x4
	b	.L922
.L925:
	.align	2, 0
.L924:
	.word	0x2710
.L917:
	ldr	r1, .L926
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L918	@cond_branch
	mov	r0, #0x5
	b	.L922
.L927:
	.align	2, 0
.L926:
	.word	0x186a0
.L918:
	ldr	r1, .L928
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L919	@cond_branch
	mov	r0, #0x6
	b	.L922
.L929:
	.align	2, 0
.L928:
	.word	0xf4240
.L919:
	ldr	r1, .L930
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L920	@cond_branch
	mov	r0, #0x7
	b	.L922
.L931:
	.align	2, 0
.L930:
	.word	0x989680
.L920:
	ldr	r1, .L932
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	beq	.L921	@cond_branch
.L923:
	mov	r0, #0x1
	b	.L922
.L933:
	.align	2, 0
.L932:
	.word	0x5f5e100
.L921:
	mov	r0, #0x8
.L922:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe102:
	.size	 CountDigits,.Lfe102-CountDigits
	.align	2, 0
	.type	 sub_80EF40C,function
	.thumb_func
sub_80EF40C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r7, #0x0
	mov	r5, #0x0
.L938:
	lsl	r4, r5, #0x1
	add	r0, r6, #0x6
	add	r1, r0, r4
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L937	@cond_branch
	bl	ItemId_GetPrice
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	add	r1, r1, #0xc
	add	r1, r1, r4
	ldrh	r1, [r1]
	mul	r0, r0, r1
	add	r7, r7, r0
.L937:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L938	@cond_branch
	ldrb	r0, [r6, #0x2]
	cmp	r0, #0x1
	bne	.L941	@cond_branch
	asr	r1, r7, #0x1
	mov	r0, r8
	bl	TV_PrintIntToStringVar
	b	.L942
.L941:
	mov	r0, r8
	add	r1, r7, #0
	bl	TV_PrintIntToStringVar
.L942:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe103:
	.size	 sub_80EF40C,.Lfe103-sub_80EF40C
	.align	2, 0
	.globl	HasMixableShowAlreadyBeenSpawnedWithPlayerID
	.type	 HasMixableShowAlreadyBeenSpawnedWithPlayerID,function
	.thumb_func
HasMixableShowAlreadyBeenSpawnedWithPlayerID:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	ldr	r5, .L952
	ldr	r0, [r5]
	ldr	r4, .L952+0x4
	add	r0, r0, r4
	mov	r8, r0
	bl	GetPlayerIDAsU32
	add	r7, r0, #0
	mov	r6, #0x5
.L947:
	lsl	r0, r6, #0x3
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	mov	r2, r8
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, sl
	bne	.L946	@cond_branch
	mov	r3, #0xff
	add	r0, r7, #0
	and	r0, r0, r3
	add	r2, r1, #0
	add	r2, r2, #0x22
	ldrb	r2, [r2]
	cmp	r0, r2
	bne	.L946	@cond_branch
	lsr	r0, r7, #0x8
	and	r0, r0, r3
	add	r1, r1, #0x23
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L946	@cond_branch
	mov	r0, r9
	cmp	r0, #0x1
	bne	.L949	@cond_branch
	ldr	r0, [r5]
	add	r0, r0, r4
	add	r1, r6, #0
	bl	DeleteTVShowInArrayByIdx
	ldr	r0, [r5]
	add	r0, r0, r4
	bl	sub_80EF93C
.L949:
	mov	r0, #0x1
	b	.L951
.L953:
	.align	2, 0
.L952:
	.word	gSaveBlock1Ptr
	.word	0x27cc
.L946:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x17
	bls	.L947	@cond_branch
	mov	r0, #0x0
.L951:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe104:
	.size	 HasMixableShowAlreadyBeenSpawnedWithPlayerID,.Lfe104-HasMixableShowAlreadyBeenSpawnedWithPlayerID
	.align	2, 0
	.globl	TV_SortPurchasesByQuantity
	.type	 TV_SortPurchasesByQuantity,function
	.thumb_func
TV_SortPurchasesByQuantity:
	push	{r4, r5, r6, r7, lr}
	mov	r2, #0x0
.L958:
	add	r1, r2, #0x1
	lsl	r0, r1, #0x18
	lsr	r5, r0, #0x18
	add	r7, r1, #0
	cmp	r5, #0x2
	bhi	.L957	@cond_branch
	ldr	r6, .L966
	lsl	r0, r2, #0x2
	add	r4, r0, r6
.L962:
	lsl	r0, r5, #0x2
	add	r3, r0, r6
	ldrh	r0, [r4, #0x2]
	ldrh	r1, [r3, #0x2]
	cmp	r0, r1
	bcs	.L961	@cond_branch
	ldrh	r1, [r4]
	add	r2, r0, #0
	ldrh	r0, [r3]
	strh	r0, [r4]
	ldrh	r0, [r3, #0x2]
	strh	r0, [r4, #0x2]
	strh	r1, [r3]
	strh	r2, [r3, #0x2]
.L961:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L962	@cond_branch
.L957:
	lsl	r0, r7, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x1
	bls	.L958	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L967:
	.align	2, 0
.L966:
	.word	gMartPurchaseHistory
.Lfe105:
	.size	 TV_SortPurchasesByQuantity,.Lfe105-TV_SortPurchasesByQuantity
	.align	2, 0
	.globl	FindActiveBroadcastByShowType_SetScriptResult
	.type	 FindActiveBroadcastByShowType_SetScriptResult,function
	.thumb_func
FindActiveBroadcastByShowType_SetScriptResult:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r1, #0x0
	ldr	r5, .L977
	ldr	r4, .L977+0x4
.L972:
	ldr	r3, [r5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r3, r0
	add	r0, r2, r4
	ldrb	r0, [r0]
	cmp	r0, r6
	bne	.L971	@cond_branch
	ldr	r6, .L977+0x8
	add	r0, r2, r6
	ldrb	r2, [r0]
	cmp	r2, #0x1
	bne	.L974	@cond_branch
	ldr	r0, .L977+0xc
	strh	r2, [r0]
	b	.L968
.L978:
	.align	2, 0
.L977:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	0x27cd
	.word	gSpecialVar_Result
.L974:
	add	r0, r3, r4
	bl	DeleteTVShowInArrayByIdx
	ldr	r0, [r5]
	add	r0, r0, r4
	bl	sub_80EF93C
	bl	sub_80EFA88
	b	.L968
.L971:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x4
	bls	.L972	@cond_branch
	bl	sub_80EFA88
.L968:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe106:
	.size	 FindActiveBroadcastByShowType_SetScriptResult,.Lfe106-FindActiveBroadcastByShowType_SetScriptResult
	.align	2, 0
	.globl	InterviewBefore
	.type	 InterviewBefore,function
	.thumb_func
InterviewBefore:
	push	{lr}
	ldr	r1, .L993
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L993+0x4
	ldrh	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0xa
	bhi	.L980	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L993+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L994:
	.align	2, 0
.L993:
	.word	gSpecialVar_Result
	.word	gSpecialVar_0x8005
	.word	.L991
	.align	2, 0
	.align	2, 0
.L991:
	.word	.L981
	.word	.L982
	.word	.L983
	.word	.L984
	.word	.L985
	.word	.L986
	.word	.L987
	.word	.L988
	.word	.L989
	.word	.L980
	.word	.L990
.L981:
	bl	InterviewBefore_FanClubLetter
	b	.L980
.L982:
	bl	InterviewBefore_RecentHappenings
	b	.L980
.L983:
	bl	InterviewBefore_PkmnFanClubOpinions
	b	.L980
.L984:
	bl	InterviewBefore_Dummy
	b	.L980
.L985:
	bl	InterviewBefore_NameRater
	b	.L980
.L986:
	bl	InterviewBefore_BravoTrainerPkmnProfile
	b	.L980
.L987:
	bl	InterviewBefore_BravoTrainerBTProfile
	b	.L980
.L988:
	bl	InterviewBefore_ContestLiveUpdates
	b	.L980
.L989:
	bl	InterviewBefore_3CheersForPokeblocks
	b	.L980
.L990:
	bl	InterviewBefore_FanClubSpecial
.L980:
	pop	{r0}
	bx	r0
.Lfe107:
	.size	 InterviewBefore,.Lfe107-InterviewBefore
	.align	2, 0
	.type	 InterviewBefore_FanClubLetter,function
	.thumb_func
InterviewBefore_FanClubLetter:
	push	{r4, lr}
	mov	r0, #0x1
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L997
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L996	@cond_branch
	ldr	r4, .L997+0x4
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L997+0x8
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	mov	r1, #0xb
	mul	r1, r1, r0
	ldr	r0, .L997+0xc
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r2, .L997+0x10
	ldr	r0, .L997+0x14
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, [r2]
	add	r0, r0, r1
	ldr	r1, .L997+0x18
	add	r0, r0, r1
	mov	r1, #0x6
	bl	InitializeEasyChatWordArray
.L996:
	pop	{r4}
	pop	{r0}
	bx	r0
.L998:
	.align	2, 0
.L997:
	.word	gSpecialVar_Result
	.word	gStringVar1
	.word	gPlayerParty
	.word	gSpeciesNames
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x27d0
.Lfe108:
	.size	 InterviewBefore_FanClubLetter,.Lfe108-InterviewBefore_FanClubLetter
	.align	2, 0
	.type	 InterviewBefore_RecentHappenings,function
	.thumb_func
InterviewBefore_RecentHappenings:
	push	{lr}
	mov	r0, #0x2
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L1001
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1000	@cond_branch
	ldr	r2, .L1001+0x4
	ldr	r0, .L1001+0x8
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, [r2]
	add	r0, r0, r1
	ldr	r1, .L1001+0xc
	add	r0, r0, r1
	mov	r1, #0x6
	bl	InitializeEasyChatWordArray
.L1000:
	pop	{r0}
	bx	r0
.L1002:
	.align	2, 0
.L1001:
	.word	gSpecialVar_Result
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x27d0
.Lfe109:
	.size	 InterviewBefore_RecentHappenings,.Lfe109-InterviewBefore_RecentHappenings
	.align	2, 0
	.type	 InterviewBefore_PkmnFanClubOpinions,function
	.thumb_func
InterviewBefore_PkmnFanClubOpinions:
	push	{r4, r5, r6, lr}
	mov	r0, #0x3
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L1005
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1004	@cond_branch
	ldr	r6, .L1005+0x4
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r5, #0x64
	mul	r0, r0, r5
	ldr	r4, .L1005+0x8
	add	r0, r0, r4
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	mov	r1, #0xb
	mul	r1, r1, r0
	ldr	r0, .L1005+0xc
	add	r1, r1, r0
	add	r0, r6, #0
	bl	StringCopy
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r5
	add	r0, r0, r4
	ldr	r4, .L1005+0x10
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	StringGetEnd10
	ldr	r2, .L1005+0x14
	ldr	r0, .L1005+0x18
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, [r2]
	add	r0, r0, r1
	ldr	r1, .L1005+0x1c
	add	r0, r0, r1
	mov	r1, #0x2
	bl	InitializeEasyChatWordArray
.L1004:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1006:
	.align	2, 0
.L1005:
	.word	gSpecialVar_Result
	.word	gStringVar1
	.word	gPlayerParty
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x27e8
.Lfe110:
	.size	 InterviewBefore_PkmnFanClubOpinions,.Lfe110-InterviewBefore_PkmnFanClubOpinions
	.align	2, 0
	.type	 InterviewBefore_Dummy,function
	.thumb_func
InterviewBefore_Dummy:
	ldr	r1, .L1008
	mov	r0, #0x1
	strh	r0, [r1]
	bx	lr
.L1009:
	.align	2, 0
.L1008:
	.word	gSpecialVar_Result
.Lfe111:
	.size	 InterviewBefore_Dummy,.Lfe111-InterviewBefore_Dummy
	.align	2, 0
	.type	 InterviewBefore_NameRater,function
	.thumb_func
InterviewBefore_NameRater:
	push	{lr}
	mov	r0, #0x5
	bl	FindActiveBroadcastByShowType_SetScriptResult
	pop	{r0}
	bx	r0
.Lfe112:
	.size	 InterviewBefore_NameRater,.Lfe112-InterviewBefore_NameRater
	.align	2, 0
	.type	 InterviewBefore_BravoTrainerPkmnProfile,function
	.thumb_func
InterviewBefore_BravoTrainerPkmnProfile:
	push	{lr}
	mov	r0, #0x6
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L1013
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1012	@cond_branch
	ldr	r2, .L1013+0x4
	ldr	r0, .L1013+0x8
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, [r2]
	add	r0, r0, r1
	ldr	r1, .L1013+0xc
	add	r0, r0, r1
	mov	r1, #0x2
	bl	InitializeEasyChatWordArray
.L1012:
	pop	{r0}
	bx	r0
.L1014:
	.align	2, 0
.L1013:
	.word	gSpecialVar_Result
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x27d0
.Lfe113:
	.size	 InterviewBefore_BravoTrainerPkmnProfile,.Lfe113-InterviewBefore_BravoTrainerPkmnProfile
	.align	2, 0
	.type	 InterviewBefore_ContestLiveUpdates,function
	.thumb_func
InterviewBefore_ContestLiveUpdates:
	push	{lr}
	mov	r0, #0x8
	bl	FindActiveBroadcastByShowType_SetScriptResult
	pop	{r0}
	bx	r0
.Lfe114:
	.size	 InterviewBefore_ContestLiveUpdates,.Lfe114-InterviewBefore_ContestLiveUpdates
	.align	2, 0
	.type	 InterviewBefore_3CheersForPokeblocks,function
	.thumb_func
InterviewBefore_3CheersForPokeblocks:
	push	{lr}
	mov	r0, #0x9
	bl	FindActiveBroadcastByShowType_SetScriptResult
	pop	{r0}
	bx	r0
.Lfe115:
	.size	 InterviewBefore_3CheersForPokeblocks,.Lfe115-InterviewBefore_3CheersForPokeblocks
	.align	2, 0
	.type	 InterviewBefore_BravoTrainerBTProfile,function
	.thumb_func
InterviewBefore_BravoTrainerBTProfile:
	push	{lr}
	mov	r0, #0x7
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L1019
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1018	@cond_branch
	ldr	r2, .L1019+0x4
	ldr	r0, .L1019+0x8
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, [r2]
	add	r0, r0, r1
	ldr	r1, .L1019+0xc
	add	r0, r0, r1
	mov	r1, #0x1
	bl	InitializeEasyChatWordArray
.L1018:
	pop	{r0}
	bx	r0
.L1020:
	.align	2, 0
.L1019:
	.word	gSpecialVar_Result
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x27e4
.Lfe116:
	.size	 InterviewBefore_BravoTrainerBTProfile,.Lfe116-InterviewBefore_BravoTrainerBTProfile
	.align	2, 0
	.type	 InterviewBefore_FanClubSpecial,function
	.thumb_func
InterviewBefore_FanClubSpecial:
	push	{lr}
	mov	r0, #0xb
	bl	FindActiveBroadcastByShowType_SetScriptResult
	ldr	r0, .L1023
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1022	@cond_branch
	ldr	r2, .L1023+0x4
	ldr	r0, .L1023+0x8
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, [r2]
	add	r0, r0, r1
	ldr	r1, .L1023+0xc
	add	r0, r0, r1
	mov	r1, #0x1
	bl	InitializeEasyChatWordArray
.L1022:
	pop	{r0}
	bx	r0
.L1024:
	.align	2, 0
.L1023:
	.word	gSpecialVar_Result
	.word	gSaveBlock1Ptr
	.word	sCurTVShowSlot
	.word	0x27e0
.Lfe117:
	.size	 InterviewBefore_FanClubSpecial,.Lfe117-InterviewBefore_FanClubSpecial
	.align	2, 0
	.globl	sub_80EF88C
	.type	 sub_80EF88C,function
	.thumb_func
sub_80EF88C:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r1, r1, r0
	ldr	r0, .L1028
	add	r5, r1, r0
	ldr	r6, .L1028+0x4
	add	r0, r5, #0
	mov	r1, #0x2
	add	r2, r6, #0
	bl	GetMonData
	mov	r4, sp
	add	r0, r5, #0
	mov	r1, #0x3
	mov	r2, sp
	bl	GetMonData
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L1026	@cond_branch
	add	r0, r5, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	mov	r1, #0xb
	mul	r0, r0, r1
	ldr	r1, .L1028+0x8
	add	r0, r0, r1
	add	r1, r6, #0
	bl	StringCompare
	cmp	r0, #0
	bne	.L1026	@cond_branch
	mov	r0, #0x0
	b	.L1027
.L1029:
	.align	2, 0
.L1028:
	.word	gPlayerParty
	.word	gStringVar1
	.word	gSpeciesNames
.L1026:
	mov	r0, #0x1
.L1027:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe118:
	.size	 sub_80EF88C,.Lfe118-sub_80EF88C
	.align	2, 0
	.globl	sub_80EF8F8
	.type	 sub_80EF8F8,function
	.thumb_func
sub_80EF8F8:
	push	{lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80EF88C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe119:
	.size	 sub_80EF8F8,.Lfe119-sub_80EF8F8
	.align	2, 0
	.globl	DeleteTVShowInArrayByIdx
	.type	 DeleteTVShowInArrayByIdx,function
	.thumb_func
DeleteTVShowInArrayByIdx:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r1, #0x3
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r0
	mov	r0, #0x0
	strb	r0, [r2]
	strb	r0, [r2, #0x1]
	mov	r1, #0x0
	add	r2, r2, #0x2
	mov	r3, #0x0
.L1035:
	add	r0, r2, r1
	strb	r3, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x21
	bls	.L1035	@cond_branch
	pop	{r0}
	bx	r0
.Lfe120:
	.size	 DeleteTVShowInArrayByIdx,.Lfe120-DeleteTVShowInArrayByIdx
	.align	2, 0
	.type	 sub_80EF93C,function
	.thumb_func
sub_80EF93C:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	mov	r5, #0x0
.L1041:
	lsl	r0, r5, #0x3
	add	r0, r0, r5
	lsl	r1, r0, #0x2
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1040	@cond_branch
	add	r0, r5, #0x1
	b	.L1062
.L1046:
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r3, r0, r4
	ldrb	r0, [r3]
	cmp	r0, #0
	beq	.L1045	@cond_branch
	add	r1, r1, r4
	add	r0, r3, #0
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	add	r0, r4, #0
	add	r1, r2, #0
	bl	DeleteTVShowInArrayByIdx
	b	.L1040
.L1045:
	add	r0, r2, #0x1
.L1062:
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x4
	bls	.L1046	@cond_branch
.L1040:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L1041	@cond_branch
	mov	r5, #0x5
.L1053:
	lsl	r0, r5, #0x3
	add	r0, r0, r5
	lsl	r1, r0, #0x2
	add	r0, r1, r4
	ldrb	r0, [r0]
	add	r5, r5, #0x1
	cmp	r0, #0
	bne	.L1052	@cond_branch
	lsl	r0, r5, #0x18
	b	.L1063
.L1058:
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r3, r0, r4
	ldrb	r0, [r3]
	cmp	r0, #0
	beq	.L1057	@cond_branch
	add	r1, r1, r4
	add	r0, r3, #0
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	add	r0, r4, #0
	add	r1, r2, #0
	bl	DeleteTVShowInArrayByIdx
	b	.L1052
.L1057:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
.L1063:
	lsr	r2, r0, #0x18
	cmp	r2, #0x17
	bls	.L1058	@cond_branch
.L1052:
	lsl	r0, r5, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x17
	bls	.L1053	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe121:
	.size	 sub_80EF93C,.Lfe121-sub_80EF93C
	.align	2, 0
	.globl	TV_GetSomeOtherSpeciesAlreadySeenByPlayer_AndPrintName
	.type	 TV_GetSomeOtherSpeciesAlreadySeenByPlayer_AndPrintName,function
	.thumb_func
TV_GetSomeOtherSpeciesAlreadySeenByPlayer_AndPrintName:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r0, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	TV_GetSomeOtherSpeciesAlreadySeenByPlayer
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r0, .L1065
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r0, [r4]
	mov	r1, #0xb
	mul	r1, r1, r5
	ldr	r2, .L1065+0x4
	add	r1, r1, r2
	bl	StringCopy
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L1066:
	.align	2, 0
.L1065:
	.word	gTVStringVarPtrs
	.word	gSpeciesNames
.Lfe122:
	.size	 TV_GetSomeOtherSpeciesAlreadySeenByPlayer_AndPrintName,.Lfe122-TV_GetSomeOtherSpeciesAlreadySeenByPlayer_AndPrintName
	.align	2, 0
	.globl	TV_GetSomeOtherSpeciesAlreadySeenByPlayer
	.type	 TV_GetSomeOtherSpeciesAlreadySeenByPlayer,function
	.thumb_func
TV_GetSomeOtherSpeciesAlreadySeenByPlayer:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L1077
	bl	__umodsi3
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r6, r4, #0
	b	.L1068
.L1078:
	.align	2, 0
.L1077:
	.word	0x19b
.L1070:
	cmp	r4, #0x1
	bne	.L1071	@cond_branch
	ldr	r4, .L1079
	b	.L1072
.L1080:
	.align	2, 0
.L1079:
	.word	0x19b
.L1071:
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L1072:
	cmp	r4, r6
	bne	.L1068	@cond_branch
	add	r4, r5, #0
	b	.L1076
.L1068:
	add	r0, r4, #0
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	bl	GetSetPokedexFlag
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1070	@cond_branch
	cmp	r4, r5
	beq	.L1070	@cond_branch
.L1076:
	add	r0, r4, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe123:
	.size	 TV_GetSomeOtherSpeciesAlreadySeenByPlayer,.Lfe123-TV_GetSomeOtherSpeciesAlreadySeenByPlayer
	.align	2, 0
	.type	 sub_80EFA88,function
	.thumb_func
sub_80EFA88:
	push	{lr}
	ldr	r0, .L1085
	ldr	r0, [r0]
	ldr	r1, .L1085+0x4
	add	r0, r0, r1
	bl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	ldr	r1, .L1085+0x8
	strb	r0, [r1]
	ldr	r2, .L1085+0xc
	ldrb	r1, [r1, #0]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	strh	r1, [r2]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.L1082	@cond_branch
	ldr	r1, .L1085+0x10
	mov	r0, #0x1
	b	.L1084
.L1086:
	.align	2, 0
.L1085:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	sCurTVShowSlot
	.word	gSpecialVar_0x8006
	.word	gSpecialVar_Result
.L1082:
	ldr	r1, .L1087
	mov	r0, #0x0
.L1084:
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L1088:
	.align	2, 0
.L1087:
	.word	gSpecialVar_Result
.Lfe124:
	.size	 sub_80EFA88,.Lfe124-sub_80EFA88
	.align	2, 0
	.globl	FindEmptyTVSlotWithinFirstFiveShowsOfArray
	.type	 FindEmptyTVSlotWithinFirstFiveShowsOfArray,function
	.thumb_func
FindEmptyTVSlotWithinFirstFiveShowsOfArray:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x0
.L1093:
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1092	@cond_branch
	lsl	r0, r1, #0x18
	asr	r0, r0, #0x18
	b	.L1096
.L1092:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x4
	bls	.L1093	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L1096:
	pop	{r1}
	bx	r1
.Lfe125:
	.size	 FindEmptyTVSlotWithinFirstFiveShowsOfArray,.Lfe125-FindEmptyTVSlotWithinFirstFiveShowsOfArray
	.align	2, 0
	.globl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	.type	 FindEmptyTVSlotBeyondFirstFiveShowsOfArray,function
	.thumb_func
FindEmptyTVSlotBeyondFirstFiveShowsOfArray:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x5
.L1101:
	lsl	r0, r1, #0x18
	asr	r1, r0, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1100	@cond_branch
	add	r0, r1, #0
	b	.L1104
.L1100:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x17
	ble	.L1101	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L1104:
	pop	{r1}
	bx	r1
.Lfe126:
	.size	 FindEmptyTVSlotBeyondFirstFiveShowsOfArray,.Lfe126-FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	.align	2, 0
	.globl	TV_BernoulliTrial
	.type	 TV_BernoulliTrial,function
	.thumb_func
TV_BernoulliTrial:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r4
	bls	.L1106	@cond_branch
	mov	r0, #0x1
	b	.L1107
.L1106:
	mov	r0, #0x0
.L1107:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe127:
	.size	 TV_BernoulliTrial,.Lfe127-TV_BernoulliTrial
	.align	2, 0
	.globl	TV_FanClubLetter_RandomWordToStringVar3
	.type	 TV_FanClubLetter_RandomWordToStringVar3,function
	.thumb_func
TV_FanClubLetter_RandomWordToStringVar3:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x6
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r5, r4, #0x4
	ldr	r6, .L1115
	b	.L1111
.L1116:
	.align	2, 0
.L1115:
	.word	0xffff
.L1113:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L1111:
	cmp	r2, #0x6
	bne	.L1112	@cond_branch
	mov	r2, #0x0
.L1112:
	lsl	r1, r2, #0x1
	add	r0, r5, r1
	ldrh	r0, [r0]
	add	r3, r4, #0x4
	cmp	r0, r6
	beq	.L1113	@cond_branch
	ldr	r0, .L1117
	add	r1, r3, r1
	ldrh	r1, [r1]
	bl	CopyEasyChatWord
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1118:
	.align	2, 0
.L1117:
	.word	gStringVar3
.Lfe128:
	.size	 TV_FanClubLetter_RandomWordToStringVar3,.Lfe128-TV_FanClubLetter_RandomWordToStringVar3
	.align	2, 0
	.globl	TV_GetNicknameSumMod8
	.type	 TV_GetNicknameSumMod8,function
	.thumb_func
TV_GetNicknameSumMod8:
	push	{lr}
	add	r2, r0, #0
	mov	r3, #0x0
	mov	r1, #0x0
	ldrb	r0, [r2, #0x4]
	cmp	r0, #0xff
	beq	.L1121	@cond_branch
	add	r2, r2, #0x4
.L1124:
	add	r0, r2, r1
	ldrb	r0, [r0]
	add	r0, r3, r0
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xa
	bhi	.L1121	@cond_branch
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L1124	@cond_branch
.L1121:
	mov	r0, #0x7
	and	r3, r3, r0
	add	r0, r3, #0
	pop	{r1}
	bx	r1
.Lfe129:
	.size	 TV_GetNicknameSumMod8,.Lfe129-TV_GetNicknameSumMod8
	.align	2, 0
	.globl	TV_GetNicknameSubstring
	.type	 TV_GetNicknameSubstring,function
	.thumb_func
TV_GetNicknameSubstring:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x10
	ldr	r4, [sp, #0x2c]
	ldr	r5, [sp, #0x30]
	mov	r8, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r2, #0x0
	mov	r7, #0xff
.L1130:
	mov	r1, sp
	add	r0, r1, r2
	ldrb	r1, [r0]
	orr	r1, r1, r7
	strb	r1, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x2
	bls	.L1130	@cond_branch
	cmp	r3, #0
	bne	.L1132	@cond_branch
	mov	r4, r8
	add	r4, r4, #0xf
	add	r0, r4, #0
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r6, #0
	bne	.L1133	@cond_branch
	mov	r0, sp
	add	r1, r4, r5
	b	.L1154
.L1133:
	cmp	r6, #0x1
	bne	.L1135	@cond_branch
	mov	r0, sp
	sub	r1, r2, r5
	add	r1, r4, r1
.L1154:
	ldrb	r1, [r1]
	strb	r1, [r0]
	b	.L1134
.L1135:
	cmp	r6, #0x2
	bne	.L1137	@cond_branch
	mov	r1, sp
	add	r0, r4, r5
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r5, #0x1
	b	.L1155
.L1137:
	mov	r1, sp
	sub	r0, r2, #0x2
	sub	r0, r0, r5
	add	r0, r4, r0
	ldrb	r0, [r0]
	strb	r0, [r1]
	sub	r0, r2, #0x1
	sub	r0, r0, r5
.L1155:
	add	r0, r4, r0
	ldrb	r0, [r0]
	strb	r0, [r1, #0x1]
.L1134:
	mov	r2, r8
	ldrb	r1, [r2, #0x1e]
	b	.L1156
.L1132:
	cmp	r3, #0x1
	bne	.L1140	@cond_branch
	mov	r4, r8
	add	r4, r4, #0x4
	add	r0, r4, #0
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r6, #0
	bne	.L1141	@cond_branch
	mov	r0, sp
	add	r1, r4, r5
	b	.L1157
.L1141:
	cmp	r6, #0x1
	bne	.L1143	@cond_branch
	mov	r0, sp
	sub	r1, r2, r5
	add	r1, r4, r1
.L1157:
	ldrb	r1, [r1]
	strb	r1, [r0]
	b	.L1142
.L1143:
	cmp	r6, #0x2
	bne	.L1145	@cond_branch
	mov	r1, sp
	add	r0, r4, r5
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r5, #0x1
	b	.L1158
.L1145:
	mov	r1, sp
	sub	r0, r2, #0x2
	sub	r0, r0, r5
	add	r0, r4, r0
	ldrb	r0, [r0]
	strb	r0, [r1]
	sub	r0, r2, #0x1
	sub	r0, r0, r5
.L1158:
	add	r0, r4, r0
	ldrb	r0, [r0]
	strb	r0, [r1, #0x1]
.L1142:
	mov	r5, r8
	ldrb	r1, [r5, #0x1f]
.L1156:
	mov	r0, sp
	bl	ConvertInternationalString
	b	.L1139
.L1140:
	mov	r0, #0xb
	mul	r4, r4, r0
	ldr	r7, .L1161
	add	r0, r4, r7
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r6, #0
	bne	.L1148	@cond_branch
	mov	r0, sp
	add	r1, r5, r4
	b	.L1159
.L1162:
	.align	2, 0
.L1161:
	.word	gSpeciesNames
.L1148:
	cmp	r6, #0x1
	bne	.L1150	@cond_branch
	mov	r0, sp
	sub	r1, r2, r5
	add	r1, r1, r4
.L1159:
	add	r1, r1, r7
	ldrb	r1, [r1]
	strb	r1, [r0]
	b	.L1139
.L1150:
	cmp	r6, #0x2
	bne	.L1152	@cond_branch
	mov	r1, sp
	add	r0, r5, r4
	add	r0, r0, r7
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r4, #0x1
	add	r0, r5, r0
	b	.L1160
.L1152:
	mov	r1, sp
	sub	r0, r2, #0x2
	sub	r0, r0, r5
	add	r0, r0, r4
	add	r0, r0, r7
	ldrb	r0, [r0]
	strb	r0, [r1]
	sub	r0, r2, #0x1
	sub	r0, r0, r5
	add	r0, r0, r4
.L1160:
	add	r0, r0, r7
	ldrb	r0, [r0]
	strb	r0, [r1, #0x1]
.L1139:
	ldr	r0, .L1163
	mov	r2, r9
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	mov	r1, sp
	bl	StringCopy
	add	sp, sp, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1164:
	.align	2, 0
.L1163:
	.word	gTVStringVarPtrs
.Lfe130:
	.size	 TV_GetNicknameSubstring,.Lfe130-TV_GetNicknameSubstring
	.align	2, 0
	.globl	TV_IsScriptShowKindAlreadyInQueue
	.type	 TV_IsScriptShowKindAlreadyInQueue,function
	.thumb_func
TV_IsScriptShowKindAlreadyInQueue:
	push	{r4, lr}
	mov	r1, #0x0
	ldr	r0, .L1173
	ldr	r3, [r0]
	ldr	r0, .L1173+0x4
	ldrh	r2, [r0]
	ldr	r4, .L1173+0x8
.L1169:
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r3, r0
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, r2
	bne	.L1168	@cond_branch
	mov	r0, #0x1
	b	.L1172
.L1174:
	.align	2, 0
.L1173:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
.L1168:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x4
	bls	.L1169	@cond_branch
	mov	r0, #0x0
.L1172:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe131:
	.size	 TV_IsScriptShowKindAlreadyInQueue,.Lfe131-TV_IsScriptShowKindAlreadyInQueue
	.align	2, 0
	.globl	TV_PutNameRaterShowOnTheAirIfNicknameChanged
	.type	 TV_PutNameRaterShowOnTheAirIfNicknameChanged,function
	.thumb_func
TV_PutNameRaterShowOnTheAirIfNicknameChanged:
	push	{r4, lr}
	ldr	r0, .L1178
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1178+0x4
	add	r0, r0, r1
	ldr	r4, .L1178+0x8
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	ldr	r0, .L1178+0xc
	add	r1, r4, #0
	bl	StringCompare
	cmp	r0, #0
	beq	.L1176	@cond_branch
	bl	PutNameRaterShowOnTheAir
	mov	r0, #0x1
	b	.L1177
.L1179:
	.align	2, 0
.L1178:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar3
.L1176:
	mov	r0, #0x0
.L1177:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe132:
	.size	 TV_PutNameRaterShowOnTheAirIfNicknameChanged,.Lfe132-TV_PutNameRaterShowOnTheAirIfNicknameChanged
	.align	2, 0
	.globl	ChangePokemonNickname
	.type	 ChangePokemonNickname,function
	.thumb_func
ChangePokemonNickname:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	add	sp, sp, #-0x8
	ldr	r0, .L1181
	mov	r9, r0
	ldrh	r0, [r0]
	mov	r1, #0x64
	mov	r8, r1
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r6, .L1181+0x4
	add	r0, r0, r6
	ldr	r2, .L1181+0x8
	mov	r1, #0x2
	bl	GetMonData
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	ldr	r1, .L1181+0xc
	mov	sl, r1
	mov	r1, #0x2
	mov	r2, sl
	bl	GetMonData
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	bl	GetMonGender
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetMonData
	str	r0, [sp]
	ldr	r0, .L1181+0x10
	str	r0, [sp, #0x4]
	mov	r0, #0x3
	mov	r1, sl
	add	r2, r5, #0
	add	r3, r4, #0
	bl	DoNamingScreen
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1182:
	.align	2, 0
.L1181:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar3
	.word	gStringVar2
	.word	ChangePokemonNickname_CB
.Lfe133:
	.size	 ChangePokemonNickname,.Lfe133-ChangePokemonNickname
	.align	2, 0
	.globl	ChangePokemonNickname_CB
	.type	 ChangePokemonNickname_CB,function
	.thumb_func
ChangePokemonNickname_CB:
	push	{lr}
	ldr	r0, .L1184
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1184+0x4
	add	r0, r0, r1
	ldr	r2, .L1184+0x8
	mov	r1, #0x2
	bl	SetMonData
	bl	CB2_ReturnToFieldContinueScriptPlayMapMusic
	pop	{r0}
	bx	r0
.L1185:
	.align	2, 0
.L1184:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar2
.Lfe134:
	.size	 ChangePokemonNickname_CB,.Lfe134-ChangePokemonNickname_CB
	.align	2, 0
	.globl	ChangeBoxPokemonNickname
	.type	 ChangeBoxPokemonNickname,function
	.thumb_func
ChangeBoxPokemonNickname:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x8
	ldr	r0, .L1187
	ldrb	r0, [r0]
	ldr	r1, .L1187+0x4
	ldrb	r1, [r1]
	bl	GetBoxedMonPtr
	add	r6, r0, #0
	ldr	r2, .L1187+0x8
	mov	r1, #0x2
	bl	GetBoxMonData
	ldr	r0, .L1187+0xc
	mov	r8, r0
	add	r0, r6, #0
	mov	r1, #0x2
	mov	r2, r8
	bl	GetBoxMonData
	add	r0, r6, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetBoxMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r6, #0
	bl	GetBoxMonGender
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r6, #0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetBoxMonData
	str	r0, [sp]
	ldr	r0, .L1187+0x10
	str	r0, [sp, #0x4]
	mov	r0, #0x3
	mov	r1, r8
	add	r2, r5, #0
	add	r3, r4, #0
	bl	DoNamingScreen
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1188:
	.align	2, 0
.L1187:
	.word	gSpecialVar_MonBoxId
	.word	gSpecialVar_MonBoxPos
	.word	gStringVar3
	.word	gStringVar2
	.word	ChangeBoxPokemonNickname_CB
.Lfe135:
	.size	 ChangeBoxPokemonNickname,.Lfe135-ChangeBoxPokemonNickname
	.align	2, 0
	.globl	ChangeBoxPokemonNickname_CB
	.type	 ChangeBoxPokemonNickname_CB,function
	.thumb_func
ChangeBoxPokemonNickname_CB:
	push	{lr}
	ldr	r0, .L1190
	ldrb	r0, [r0]
	ldr	r1, .L1190+0x4
	ldrb	r1, [r1]
	ldr	r2, .L1190+0x8
	bl	SetBoxMonNickAt
	bl	CB2_ReturnToFieldContinueScriptPlayMapMusic
	pop	{r0}
	bx	r0
.L1191:
	.align	2, 0
.L1190:
	.word	gSpecialVar_MonBoxId
	.word	gSpecialVar_MonBoxPos
	.word	gStringVar2
.Lfe136:
	.size	 ChangeBoxPokemonNickname_CB,.Lfe136-ChangeBoxPokemonNickname_CB
	.align	2, 0
	.globl	TV_CopyNicknameToStringVar1AndEnsureTerminated
	.type	 TV_CopyNicknameToStringVar1AndEnsureTerminated,function
	.thumb_func
TV_CopyNicknameToStringVar1AndEnsureTerminated:
	push	{r4, lr}
	ldr	r0, .L1193
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1193+0x4
	add	r0, r0, r1
	ldr	r4, .L1193+0x8
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	StringGetEnd10
	pop	{r4}
	pop	{r0}
	bx	r0
.L1194:
	.align	2, 0
.L1193:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar1
.Lfe137:
	.size	 TV_CopyNicknameToStringVar1AndEnsureTerminated,.Lfe137-TV_CopyNicknameToStringVar1AndEnsureTerminated
	.align	2, 0
	.globl	TV_CheckMonOTIDEqualsPlayerID
	.type	 TV_CheckMonOTIDEqualsPlayerID,function
	.thumb_func
TV_CheckMonOTIDEqualsPlayerID:
	push	{r4, lr}
	bl	GetPlayerIDAsU32
	add	r4, r0, #0
	ldr	r0, .L1199
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1199+0x4
	add	r0, r0, r1
	mov	r1, #0x1
	mov	r2, #0x0
	bl	GetMonData
	cmp	r4, r0
	bne	.L1196	@cond_branch
	ldr	r1, .L1199+0x8
	mov	r0, #0x0
	b	.L1198
.L1200:
	.align	2, 0
.L1199:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gSpecialVar_Result
.L1196:
	ldr	r1, .L1201
	mov	r0, #0x1
.L1198:
	strh	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1202:
	.align	2, 0
.L1201:
	.word	gSpecialVar_Result
.Lfe138:
	.size	 TV_CheckMonOTIDEqualsPlayerID,.Lfe138-TV_CheckMonOTIDEqualsPlayerID
	.align	2, 0
	.globl	GetTVChannelByShowType
	.type	 GetTVChannelByShowType,function
	.thumb_func
GetTVChannelByShowType:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r2, r1, #0
	cmp	r1, #0
	beq	.L1209	@cond_branch
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x13
	bhi	.L1205	@cond_branch
	mov	r0, #0x2
	b	.L1208
.L1205:
	add	r0, r1, #0
	sub	r0, r0, #0x15
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x13
	bhi	.L1206	@cond_branch
	mov	r0, #0x3
	b	.L1208
.L1206:
	add	r0, r2, #0
	sub	r0, r0, #0x29
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x13
	bls	.L1207	@cond_branch
.L1209:
	mov	r0, #0x0
	b	.L1208
.L1207:
	mov	r0, #0x4
.L1208:
	pop	{r1}
	bx	r1
.Lfe139:
	.size	 GetTVChannelByShowType,.Lfe139-GetTVChannelByShowType
	.align	2, 0
	.globl	GetPlayerIDAsU32
	.type	 GetPlayerIDAsU32,function
	.thumb_func
GetPlayerIDAsU32:
	ldr	r0, .L1211
	ldr	r2, [r0]
	ldrb	r0, [r2, #0xd]
	lsl	r0, r0, #0x18
	ldrb	r1, [r2, #0xc]
	lsl	r1, r1, #0x10
	orr	r0, r0, r1
	ldrb	r1, [r2, #0xb]
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	ldrb	r1, [r2, #0xa]
	orr	r0, r0, r1
	bx	lr
.L1212:
	.align	2, 0
.L1211:
	.word	gSaveBlock2Ptr
.Lfe140:
	.size	 GetPlayerIDAsU32,.Lfe140-GetPlayerIDAsU32
	.align	2, 0
	.globl	CheckForBigMovieOrEmergencyNewsOnTV
	.type	 CheckForBigMovieOrEmergencyNewsOnTV,function
	.thumb_func
CheckForBigMovieOrEmergencyNewsOnTV:
	push	{lr}
	ldr	r0, .L1225
	ldr	r1, [r0]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x1
	bne	.L1223	@cond_branch
	ldr	r0, .L1225+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L1215	@cond_branch
	mov	r0, #0x5
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	beq	.L1217	@cond_branch
.L1223:
	mov	r0, #0x0
	b	.L1221
.L1226:
	.align	2, 0
.L1225:
	.word	gSaveBlock1Ptr
	.word	gSaveBlock2Ptr
.L1215:
	mov	r0, #0x5
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x2
	bne	.L1223	@cond_branch
.L1217:
	ldr	r0, .L1227
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1224	@cond_branch
	mov	r0, #0x89
	lsl	r0, r0, #0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1220	@cond_branch
.L1224:
	mov	r0, #0x1
	b	.L1221
.L1228:
	.align	2, 0
.L1227:
	.word	0x8bd
.L1220:
	mov	r0, #0x2
.L1221:
	pop	{r1}
	bx	r1
.Lfe141:
	.size	 CheckForBigMovieOrEmergencyNewsOnTV,.Lfe141-CheckForBigMovieOrEmergencyNewsOnTV
	.align	2, 0
	.globl	GetMomOrDadStringForTVMessage
	.type	 GetMomOrDadStringForTVMessage,function
	.thumb_func
GetMomOrDadStringForTVMessage:
	push	{r4, lr}
	ldr	r0, .L1246
	ldr	r1, [r0]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x1
	bne	.L1230	@cond_branch
	ldr	r0, .L1246+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L1231	@cond_branch
	mov	r0, #0x5
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	bne	.L1230	@cond_branch
	ldr	r0, .L1246+0x8
	ldr	r1, .L1246+0xc
	bl	StringCopy
	ldr	r0, .L1246+0x10
	mov	r1, #0x1
	bl	VarSet
	b	.L1230
.L1247:
	.align	2, 0
.L1246:
	.word	gSaveBlock1Ptr
	.word	gSaveBlock2Ptr
	.word	gStringVar1
	.word	gText_Mom
	.word	0x4003
.L1231:
	mov	r0, #0x5
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x2
	bne	.L1230	@cond_branch
	ldr	r0, .L1248
	ldr	r1, .L1248+0x4
	bl	StringCopy
	ldr	r0, .L1248+0x8
	mov	r1, #0x1
	bl	VarSet
.L1230:
	ldr	r4, .L1248+0x8
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L1245	@cond_branch
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	beq	.L1240	@cond_branch
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	bls	.L1239	@cond_branch
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1240	@cond_branch
.L1245:
	ldr	r0, .L1248
	ldr	r1, .L1248+0x4
	bl	StringCopy
	b	.L1236
.L1249:
	.align	2, 0
.L1248:
	.word	gStringVar1
	.word	gText_Mom
	.word	0x4003
.L1240:
	ldr	r0, .L1250
	ldr	r1, .L1250+0x4
	bl	StringCopy
	b	.L1236
.L1251:
	.align	2, 0
.L1250:
	.word	gStringVar1
	.word	gText_Dad
.L1239:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1243	@cond_branch
	ldr	r0, .L1252
	ldr	r1, .L1252+0x4
	bl	StringCopy
	add	r0, r4, #0
	mov	r1, #0x1
	bl	VarSet
	b	.L1236
.L1253:
	.align	2, 0
.L1252:
	.word	gStringVar1
	.word	gText_Mom
.L1243:
	ldr	r0, .L1254
	ldr	r1, .L1254+0x4
	bl	StringCopy
	add	r0, r4, #0
	mov	r1, #0x2
	bl	VarSet
.L1236:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1255:
	.align	2, 0
.L1254:
	.word	gStringVar1
	.word	gText_Dad
.Lfe142:
	.size	 GetMomOrDadStringForTVMessage,.Lfe142-GetMomOrDadStringForTVMessage
	.align	2, 0
	.globl	sub_80F01B8
	.type	 sub_80F01B8,function
	.thumb_func
sub_80F01B8:
	push	{lr}
	ldr	r0, .L1257
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L1257+0x4
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x5]
	ldrb	r2, [r0, #0x4]
	mov	r0, #0x5
	bl	RemoveEventObjectByLocalIdAndMap
	ldr	r0, .L1257+0x8
	bl	FlagSet
	pop	{r0}
	bx	r0
.L1258:
	.align	2, 0
.L1257:
	.word	0x40bc
	.word	gSaveBlock1Ptr
	.word	0x396
.Lfe143:
	.size	 sub_80F01B8,.Lfe143-sub_80F01B8
	.align	2, 0
	.globl	ReceiveTvShowsData
	.type	 ReceiveTvShowsData,function
	.thumb_func
ReceiveTvShowsData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r7, r0, #0
	add	r5, r1, #0
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	mov	r0, #0xe1
	lsl	r0, r0, #0x4
	bl	Alloc
	mov	r8, r0
	cmp	r0, #0
	bne	.LCB11466
	b	.L1260	@long jump
.LCB11466:
	mov	r4, #0x0
.L1264:
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r0, r0, #0x5
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	mov	r1, r4
	mul	r1, r1, r5
	add	r1, r7, r1
	mov	r2, #0xe1
	lsl	r2, r2, #0x2
	bl	memcpy
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L1264	@cond_branch
	mov	r5, r8
	mov	r4, #0x0
	ldr	r7, .L1283
	b	.L1266
.L1284:
	.align	2, 0
.L1283:
	.word	gLinkPlayers
.L1269:
	lsl	r0, r4, #0x3
	sub	r2, r0, r4
	lsl	r0, r2, #0x2
	add	r3, r0, r7
	ldrb	r1, [r3]
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bhi	.L1270	@cond_branch
	lsl	r0, r2, #0x5
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r5, r0
	bl	sub_80F1254
	b	.L1268
.L1270:
	cmp	r1, #0x3
	bne	.L1268	@cond_branch
	ldrh	r0, [r3, #0x1a]
	cmp	r0, #0x1
	bne	.L1268	@cond_branch
	lsl	r0, r2, #0x5
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r5, r0
	bl	sub_80F12A4
.L1268:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L1266:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L1269	@cond_branch
	cmp	r6, #0x1
	beq	.L1276	@cond_branch
	cmp	r6, #0x1
	bgt	.L1281	@cond_branch
	cmp	r6, #0
	beq	.L1275	@cond_branch
	b	.L1274
.L1281:
	cmp	r6, #0x2
	beq	.L1277	@cond_branch
	cmp	r6, #0x3
	beq	.L1278	@cond_branch
	b	.L1274
.L1275:
	ldr	r0, .L1285
	ldr	r0, [r0]
	ldr	r1, .L1285+0x4
	add	r0, r0, r1
	mov	r2, #0xe1
	lsl	r2, r2, #0x2
	add	r1, r5, r2
	mov	r3, #0xe1
	lsl	r3, r3, #0x3
	add	r2, r5, r3
	ldr	r4, .L1285+0x8
	add	r3, r5, r4
	bl	sub_80F0358
	b	.L1274
.L1286:
	.align	2, 0
.L1285:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	0xa8c
.L1276:
	ldr	r0, .L1287
	ldr	r1, [r0]
	ldr	r0, .L1287+0x4
	add	r1, r1, r0
	mov	r3, #0xe1
	lsl	r3, r3, #0x3
	add	r2, r5, r3
	b	.L1282
.L1288:
	.align	2, 0
.L1287:
	.word	gSaveBlock1Ptr
	.word	0x27cc
.L1277:
	mov	r0, #0xe1
	lsl	r0, r0, #0x2
	add	r1, r5, r0
	ldr	r0, .L1289
	ldr	r2, [r0]
	ldr	r3, .L1289+0x4
	add	r2, r2, r3
.L1282:
	ldr	r4, .L1289+0x8
	add	r3, r5, r4
	add	r0, r5, #0
	bl	sub_80F0358
	b	.L1274
.L1290:
	.align	2, 0
.L1289:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	0xa8c
.L1278:
	mov	r0, #0xe1
	lsl	r0, r0, #0x2
	add	r1, r5, r0
	mov	r3, #0xe1
	lsl	r3, r3, #0x3
	add	r2, r5, r3
	ldr	r0, .L1291
	ldr	r3, [r0]
	ldr	r4, .L1291+0x4
	add	r3, r3, r4
	add	r0, r5, #0
	bl	sub_80F0358
.L1274:
	ldr	r5, .L1291
	ldr	r0, [r5]
	ldr	r4, .L1291+0x4
	add	r0, r0, r4
	bl	sub_80EF93C
	bl	sub_80F0C04
	ldr	r0, [r5]
	add	r0, r0, r4
	bl	sub_80EF93C
	bl	sub_80F0708
	bl	sub_80F0B64
	mov	r0, r8
	bl	Free
.L1260:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1292:
	.align	2, 0
.L1291:
	.word	gSaveBlock1Ptr
	.word	0x27cc
.Lfe144:
	.size	 ReceiveTvShowsData,.Lfe144-ReceiveTvShowsData
	.align	2, 0
	.type	 sub_80F0358,function
	.thumb_func
sub_80F0358:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x20
	str	r0, [sp, #0x10]
	str	r1, [sp, #0x14]
	str	r2, [sp, #0x18]
	str	r3, [sp, #0x1c]
	add	r0, sp, #0x10
	str	r0, [sp]
	add	r0, sp, #0x14
	str	r0, [sp, #0x4]
	add	r0, sp, #0x18
	str	r0, [sp, #0x8]
	add	r0, sp, #0x1c
	str	r0, [sp, #0xc]
	bl	GetLinkPlayerCount
	ldr	r1, .L1314
	strb	r0, [r1]
.L1296:
	mov	r6, #0x0
	ldr	r0, .L1314
	ldrb	r1, [r0]
	cmp	r6, r1
	bcs	.L1296	@cond_branch
	mov	sl, r0
.L1300:
	cmp	r6, #0
	bne	.L1301	@cond_branch
	ldr	r2, .L1314+0x4
	strb	r6, [r2]
.L1301:
	lsl	r4, r6, #0x2
	mov	r3, sp
	add	r0, r3, r4
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	sub_80F06D0
	ldr	r1, .L1314+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	add	r7, r4, #0
	cmp	r0, r1
	bne	.L1302	@cond_branch
	ldr	r1, .L1314+0x4
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, sl
	ldrb	r2, [r2]
	cmp	r0, r2
	beq	.L1293	@cond_branch
	add	r6, r6, #0x1
	mov	r9, r6
	b	.L1299
.L1315:
	.align	2, 0
.L1314:
	.word	sTVShowMixingNumPlayers
	.word	sRecordMixingPartnersWithoutShowsToShare
	.word	sTVShowMixingCurSlot
.L1302:
	mov	r5, #0x0
	mov	r3, sl
	ldrb	r0, [r3]
	sub	r0, r0, #0x1
	add	r2, r6, #0x1
	mov	r9, r2
	cmp	r5, r0
	bge	.L1306	@cond_branch
	ldr	r3, .L1316
	mov	r8, r3
.L1308:
	add	r0, r6, r5
	add	r4, r0, #0x1
	mov	r0, r8
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	__modsi3
	lsl	r0, r0, #0x2
	add	r0, r0, sp
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	FindEmptyTVSlotBeyondFirstFiveShowsOfArray
	ldr	r1, .L1316+0x4
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L1307	@cond_branch
	mov	r2, r8
	ldrb	r1, [r2]
	add	r0, r4, #0
	bl	__modsi3
	add	r2, r0, #0
	lsl	r0, r2, #0x2
	add	r0, r0, sp
	ldr	r0, [r0]
	mov	r3, sp
	add	r1, r3, r7
	ldr	r1, [r1]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	bl	sub_80F049C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1306	@cond_branch
.L1307:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, r8
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	cmp	r5, r0
	blt	.L1308	@cond_branch
.L1306:
	mov	r2, sl
	ldrb	r0, [r2]
	sub	r0, r0, #0x1
	cmp	r5, r0
	bne	.L1299	@cond_branch
	mov	r3, sp
	add	r0, r3, r7
	ldr	r0, [r0]
	ldr	r0, [r0]
	ldr	r1, .L1316+0x8
	ldrb	r1, [r1]
	bl	DeleteTVShowInArrayByIdx
.L1299:
	mov	r1, r9
	lsl	r0, r1, #0x18
	lsr	r6, r0, #0x18
	mov	r2, sl
	ldrb	r2, [r2]
	cmp	r6, r2
	bcc	.L1300	@cond_branch
	b	.L1296
.L1317:
	.align	2, 0
.L1316:
	.word	sTVShowMixingNumPlayers
	.word	sCurTVShowSlot
	.word	sTVShowMixingCurSlot
.L1293:
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe145:
	.size	 sub_80F0358,.Lfe145-sub_80F0358
	.align	2, 0
	.type	 sub_80F049C,function
	.thumb_func
sub_80F049C:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	ldr	r4, [r0]
	ldr	r6, [r1]
	mov	r5, #0x0
	ldr	r2, .L1329
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r0, [r0]
	str	r2, [sp]
	bl	GetTVChannelByShowType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	ldr	r2, [sp]
	cmp	r0, #0x3
	beq	.L1321	@cond_branch
	cmp	r0, #0x3
	bgt	.L1325	@cond_branch
	cmp	r0, #0x2
	beq	.L1320	@cond_branch
	b	.L1319
.L1330:
	.align	2, 0
.L1329:
	.word	sTVShowMixingCurSlot
.L1325:
	cmp	r1, #0x4
	beq	.L1322	@cond_branch
	b	.L1319
.L1320:
	ldr	r0, .L1331
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r4, r0
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r6, r1
	add	r2, r7, #0
	bl	sub_80F0580
	b	.L1328
.L1332:
	.align	2, 0
.L1331:
	.word	sCurTVShowSlot
.L1321:
	ldr	r0, .L1333
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r4, r0
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r6, r1
	add	r2, r7, #0
	bl	sub_80F05E8
	b	.L1328
.L1334:
	.align	2, 0
.L1333:
	.word	sCurTVShowSlot
.L1322:
	ldr	r0, .L1335
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r4, r0
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r6, r1
	add	r2, r7, #0
	bl	sub_80F0668
.L1328:
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L1319:
	cmp	r5, #0x1
	beq	.L1326	@cond_branch
	mov	r0, #0x0
	b	.L1327
.L1336:
	.align	2, 0
.L1335:
	.word	sCurTVShowSlot
.L1326:
	ldr	r0, .L1337
	ldrb	r1, [r0]
	add	r0, r6, #0
	bl	DeleteTVShowInArrayByIdx
	mov	r0, #0x1
.L1327:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1338:
	.align	2, 0
.L1337:
	.word	sTVShowMixingCurSlot
.Lfe146:
	.size	 sub_80F049C,.Lfe146-sub_80F049C
	.align	2, 0
	.type	 sub_80F0580,function
	.thumb_func
sub_80F0580:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	bl	GetLinkPlayerTrainerId
	add	r5, r0, #0
	mov	r2, #0xff
	and	r0, r0, r2
	add	r1, r4, #0
	add	r1, r1, #0x22
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1340	@cond_branch
	lsr	r0, r5, #0x8
	and	r0, r0, r2
	add	r1, r4, #0
	add	r1, r1, #0x23
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1340	@cond_branch
	mov	r0, #0x0
	b	.L1341
.L1340:
	add	r1, r4, #0
	add	r1, r1, #0x20
	ldrb	r0, [r1]
	add	r2, r4, #0
	add	r2, r2, #0x22
	strb	r0, [r2]
	add	r3, r4, #0
	add	r3, r3, #0x21
	ldrb	r0, [r3]
	add	r2, r2, #0x1
	strb	r0, [r2]
	strb	r5, [r1]
	lsr	r0, r5, #0x8
	strb	r0, [r3]
	add	r1, r6, #0
	add	r0, r4, #0
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	mov	r0, #0x1
	strb	r0, [r6, #0x1]
.L1341:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe147:
	.size	 sub_80F0580,.Lfe147-sub_80F0580
	.align	2, 0
	.type	 sub_80F05E8,function
	.thumb_func
sub_80F05E8:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	bl	GetLinkPlayerTrainerId
	add	r2, r0, #0
	mov	r3, #0xff
	and	r0, r0, r3
	add	r1, r4, #0
	add	r1, r1, #0x20
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1343	@cond_branch
	lsr	r0, r2, #0x8
	and	r0, r0, r3
	add	r1, r4, #0
	add	r1, r1, #0x21
	ldrb	r1, [r1]
	cmp	r0, r1
	beq	.L1346	@cond_branch
.L1343:
	mov	r3, #0xff
	add	r0, r2, #0
	and	r0, r0, r3
	add	r1, r4, #0
	add	r1, r1, #0x22
	lsr	r5, r2, #0x8
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1344	@cond_branch
	add	r0, r5, #0
	and	r0, r0, r3
	add	r1, r4, #0
	add	r1, r1, #0x23
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1344	@cond_branch
.L1346:
	mov	r0, #0x0
	b	.L1345
.L1344:
	ldrb	r1, [r4, #0x1e]
	add	r0, r4, #0
	add	r0, r0, #0x20
	strb	r1, [r0]
	ldrb	r0, [r4, #0x1f]
	add	r1, r4, #0
	add	r1, r1, #0x21
	strb	r0, [r1]
	strb	r2, [r4, #0x1e]
	strb	r5, [r4, #0x1f]
	add	r1, r6, #0
	add	r0, r4, #0
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	mov	r0, #0x1
	strb	r0, [r6, #0x1]
.L1345:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe148:
	.size	 sub_80F05E8,.Lfe148-sub_80F05E8
	.align	2, 0
	.type	 sub_80F0668,function
	.thumb_func
sub_80F0668:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	bl	GetLinkPlayerTrainerId
	add	r5, r0, #0
	mov	r2, #0xff
	and	r0, r0, r2
	add	r1, r4, #0
	add	r1, r1, #0x22
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1348	@cond_branch
	lsr	r0, r5, #0x8
	and	r0, r0, r2
	add	r1, r4, #0
	add	r1, r1, #0x23
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1348	@cond_branch
	mov	r0, #0x0
	b	.L1349
.L1348:
	add	r1, r4, #0
	add	r1, r1, #0x20
	ldrb	r0, [r1]
	add	r2, r4, #0
	add	r2, r2, #0x22
	strb	r0, [r2]
	add	r3, r4, #0
	add	r3, r3, #0x21
	ldrb	r0, [r3]
	add	r2, r2, #0x1
	strb	r0, [r2]
	strb	r5, [r1]
	lsr	r0, r5, #0x8
	strb	r0, [r3]
	add	r1, r6, #0
	add	r0, r4, #0
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	mov	r0, #0x1
	strb	r0, [r6, #0x1]
	strh	r0, [r6, #0x16]
.L1349:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe149:
	.size	 sub_80F0668,.Lfe149-sub_80F0668
	.align	2, 0
	.type	 sub_80F06D0,function
	.thumb_func
sub_80F06D0:
	push	{lr}
	add	r3, r0, #0
	mov	r2, #0x0
.L1354:
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r0, r3
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0
	bne	.L1353	@cond_branch
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3b
	bhi	.L1353	@cond_branch
	lsl	r0, r2, #0x18
	asr	r0, r0, #0x18
	b	.L1357
.L1353:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x17
	bls	.L1354	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L1357:
	pop	{r1}
	bx	r1
.Lfe150:
	.size	 sub_80F06D0,.Lfe150-sub_80F06D0
	.align	2, 0
	.type	 sub_80F0708,function
	.thumb_func
sub_80F0708:
	.syntax unified
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, 0x8
	movs r0, 0
	mov r9, r0
_080F0716:
	ldr r3, =gSaveBlock1Ptr
	ldr r1, [r3]
	mov r4, r9
	lsls r2, r4, 3
	adds r0, r2, r4
	lsls r0, 2
	adds r1, r0
	ldr r0, =0x000027cc
	adds r1, r0
	ldrb r0, [r1]
	adds r7, r2, 0
	cmp r0, 0x29
	bls _080F0732
	b _080F0AD8
_080F0732:
	lsls r0, 2
	ldr r1, =_080F0748
	adds r0, r1
	ldr r0, [r0]
	mov pc, r0
	.pool
	.align 2, 0
_080F0748:
	.4byte _080F0AE2_break  @ TVSHOW_OFF_AIR
	.4byte _080F0848  @ TVSHOW_FAN_CLUB_LETTER
	.4byte _080F0AE2_break  @ TVSHOW_RECENT_HAPPENINGS
	.4byte _080F0860  @ TVSHOW_PKMN_FAN_CLUB_OPINIONS
	.4byte _080F0878  @ TVSHOW_UNKN_SHOWTYPE_04
	.4byte _080F0890  @ TVSHOW_NAME_RATER_SHOW
	.4byte _080F08BC  @ TVSHOW_BRAVO_TRAINER_POKEMON_PROFILE
	.4byte _080F08D4  @ TVSHOW_BRAVO_TRAINER_BATTLE_TOWER_PROFILE
	.4byte _080F07F0  @ TVSHOW_CONTEST_LIVE_UPDATES
	.4byte _080F0AE2_break  @ TVSHOW_3_CHEERS_FOR_POKEBLOCKS
	.4byte _080F081C  @ TVSHOW_BATTLE_UPDATE
	.4byte _080F0AE2_break  @ TVSHOW_FAN_CLUB_SPECIAL
	.4byte _080F0AE2_break  @ TVSHOW_CONTEST_LIVE_UPDATES_2
	.4byte _080F0AD8  @ 
	.4byte _080F0AD8  @ 
	.4byte _080F0AD8  @ 
	.4byte _080F0AD8  @ 
	.4byte _080F0AD8  @ 
	.4byte _080F0AD8  @ 
	.4byte _080F0AD8  @ 
	.4byte _080F0AD8  @ 
	.4byte _080F0900  @ TVSHOW_POKEMON_TODAY_CAUGHT
	.4byte _080F0AE2_break  @ TVSHOW_SMART_SHOPPER
	.4byte _080F0918  @ TVSHOW_POKEMON_TODAY_FAILED
	.4byte _080F0944  @ TVSHOW_FISHING_ADVICE
	.4byte _080F095C  @ TVSHOW_WORLD_OF_MASTERS
	.4byte _080F0AE2_break  @ TVSHOW_TODAYS_RIVAL_TRAINER
	.4byte _080F0AE2_break  @ TVSHOW_TREND_WATCHER
	.4byte _080F0AE2_break  @ TVSHOW_TREASURE_INVESTIGATORS
	.4byte _080F0AE2_break  @ TVSHOW_FIND_THAT_GAMER
	.4byte _080F0974  @ TVSHOW_BREAKING_NEWS
	.4byte _080F09A0  @ TVSHOW_SECRET_BASE_VISIT
	.4byte _080F0AE2_break  @ TVSHOW_LOTTO_WINNER
	.4byte _080F09C0  @ TVSHOW_BATTLE_SEMINAR
	.4byte _080F0AE2_break  @ TVSHOW_TRAINER_FAN_CLUB
	.4byte _080F0AE2_break  @ TVSHOW_CUTIES
	.4byte _080F09F4  @ TVSHOW_FRONTIER
	.4byte _080F0AE2_break  @ TVSHOW_NUMBER_ONE
	.4byte _080F0AE2_break  @ TVSHOW_SECRET_BASE_SECRETS
	.4byte _080F0AE2_break  @ TVSHOW_SAFARI_FAN_CLUB
	.4byte _080F0AD8  @ 
	.4byte _080F0AE2_break  @ TVSHOW_MASS_OUTBREAK
_080F07F0:
	ldr r0, [r3]
	mov r1, r9
	adds r4, r7, r1
	lsls r4, 2
	adds r0, r4, r0
	ldr r6, =0x000027cc
	adds r0, r6
	ldrh r0, [r0, 0x12]
	lsls r5, r1, 24
	lsrs r5, 24
	adds r1, r5, 0
	str r3, [sp, 0x4]
	bl sub_80F0B24
	ldr r3, [sp, 0x4]
	ldr r0, [r3]
	adds r4, r0
	adds r4, r6
	ldrh r0, [r4, 0x2]
	b _080F09E6
	.pool
_080F081C:
	ldr r0, [r3]
	mov r2, r9
	adds r4, r7, r2
	lsls r4, 2
	adds r0, r4, r0
	ldr r6, =0x000027cc
	adds r0, r6
	ldrh r0, [r0, 0x16]
	lsls r5, r2, 24
	lsrs r5, 24
	adds r1, r5, 0
	str r3, [sp, 0x4]
	bl sub_80F0B24
	ldr r3, [sp, 0x4]
	ldr r0, [r3]
	adds r4, r0
	adds r4, r6
	ldrh r0, [r4, 0x2]
	b _080F09E6
	.pool
_080F0848:
	ldr r0, [r3]
	mov r4, r9
	adds r1, r7, r4
	lsls r1, 2
	adds r1, r0
	ldr r0, =0x000027cc
	adds r1, r0
	ldrh r0, [r1, 0x2]
	b _080F09B0
	.pool
_080F0860:
	ldr r0, [r3]
	mov r2, r9
	adds r1, r7, r2
	lsls r1, 2
	adds r1, r0
	ldr r4, =0x000027cc
	adds r1, r4
	ldrh r0, [r1, 0x2]
	lsls r1, r2, 24
	b _080F09B2
	.pool
_080F0878:
	ldr r0, [r3]
	mov r2, r9
	adds r1, r7, r2
	lsls r1, 2
	adds r1, r0
	ldr r4, =0x000027cc
	adds r1, r4
	ldrh r0, [r1, 0x6]
	lsls r1, r2, 24
	b _080F09B2
	.pool
_080F0890:
	ldr r0, [r3]
	mov r1, r9
	adds r4, r7, r1
	lsls r4, 2
	adds r0, r4, r0
	ldr r6, =0x000027cc
	adds r0, r6
	ldrh r0, [r0, 0x2]
	lsls r5, r1, 24
	lsrs r5, 24
	adds r1, r5, 0
	str r3, [sp, 0x4]
	bl sub_80F0B24
	ldr r3, [sp, 0x4]
	ldr r0, [r3]
	adds r4, r0
	adds r4, r6
	ldrh r0, [r4, 0x1C]
	b _080F09E6
	.pool
_080F08BC:
	ldr r0, [r3]
	mov r2, r9
	adds r1, r7, r2
	lsls r1, 2
	adds r1, r0
	ldr r4, =0x000027cc
	adds r1, r4
	ldrh r0, [r1, 0x2]
	lsls r1, r2, 24
	b _080F09B2
	.pool
_080F08D4:
	ldr r0, [r3]
	mov r1, r9
	adds r4, r7, r1
	lsls r4, 2
	adds r0, r4, r0
	ldr r6, =0x000027cc
	adds r0, r6
	ldrh r0, [r0, 0xA]
	lsls r5, r1, 24
	lsrs r5, 24
	adds r1, r5, 0
	str r3, [sp, 0x4]
	bl sub_80F0B24
	ldr r3, [sp, 0x4]
	ldr r0, [r3]
	adds r4, r0
	adds r4, r6
	ldrh r0, [r4, 0x14]
	b _080F09E6
	.pool
_080F0900:
	ldr r0, [r3]
	mov r2, r9
	adds r1, r7, r2
	lsls r1, 2
	adds r1, r0
	ldr r4, =0x000027cc
	adds r1, r4
	ldrh r0, [r1, 0x10]
	lsls r1, r2, 24
	b _080F09B2
	.pool
_080F0918:
	ldr r0, [r3]
	mov r1, r9
	adds r4, r7, r1
	lsls r4, 2
	adds r0, r4, r0
	ldr r6, =0x000027cc
	adds r0, r6
	ldrh r0, [r0, 0xC]
	lsls r5, r1, 24
	lsrs r5, 24
	adds r1, r5, 0
	str r3, [sp, 0x4]
	bl sub_80F0B24
	ldr r3, [sp, 0x4]
	ldr r0, [r3]
	adds r4, r0
	adds r4, r6
	ldrh r0, [r4, 0xE]
	b _080F09E6
	.pool
_080F0944:
	ldr r0, [r3]
	mov r2, r9
	adds r1, r7, r2
	lsls r1, 2
	adds r1, r0
	ldr r4, =0x000027cc
	adds r1, r4
	ldrh r0, [r1, 0x4]
	lsls r1, r2, 24
	b _080F09B2
	.pool
_080F095C:
	ldr r0, [r3]
	mov r1, r9
	adds r4, r7, r1
	lsls r4, 2
	adds r0, r4, r0
	ldr r6, =0x000027cc
	adds r0, r6
	ldrh r0, [r0, 0x8]
	b _080F09D0
	.pool
_080F0974:
	ldr r0, [r3]
	mov r2, r9
	adds r4, r7, r2
	lsls r4, 2
	adds r0, r4, r0
	ldr r6, =0x000027cc
	adds r0, r6
	ldrh r0, [r0, 0x2]
	lsls r5, r2, 24
	lsrs r5, 24
	adds r1, r5, 0
	str r3, [sp, 0x4]
	bl sub_80F0B24
	ldr r3, [sp, 0x4]
	ldr r0, [r3]
	adds r4, r0
	adds r4, r6
	ldrh r0, [r4, 0xA]
	b _080F09E6
	.pool
_080F09A0:
	ldr r0, [r3]
	mov r4, r9
	adds r1, r7, r4
	lsls r1, 2
	adds r1, r0
	ldr r0, =0x000027cc
	adds r1, r0
	ldrh r0, [r1, 0x8]
_080F09B0:
	lsls r1, r4, 24
_080F09B2:
	lsrs r1, 24
	bl sub_80F0B24
	b _080F0AE2_break
	.pool
_080F09C0:
	ldr r0, [r3]
	mov r1, r9
	adds r4, r7, r1
	lsls r4, 2
	adds r0, r4, r0
	ldr r6, =0x000027cc
	adds r0, r6
	ldrh r0, [r0, 0x6]
_080F09D0:
	lsls r5, r1, 24
	lsrs r5, 24
	adds r1, r5, 0
	str r3, [sp, 0x4]
	bl sub_80F0B24
	ldr r3, [sp, 0x4]
	ldr r0, [r3]
	adds r4, r0
	adds r4, r6
	ldrh r0, [r4, 0x4]
_080F09E6:
	adds r1, r5, 0
	bl sub_80F0B24
	b _080F0AE2_break
	.pool
_080F09F4:
	ldr r0, [r3]
	mov r2, r9
	adds r4, r7, r2
	lsls r4, 2
	adds r0, r4, r0
	ldr r5, =0x000027cc
	adds r0, r5
	ldrh r0, [r0, 0x4]
	lsls r2, 24
	mov r8, r2
	lsrs r6, r2, 24
	adds r1, r6, 0
	str r3, [sp, 0x4]
	bl sub_80F0B24
	ldr r3, [sp, 0x4]
	ldr r0, [r3]
	adds r0, r4, r0
	adds r0, r5
	ldrh r0, [r0, 0x6]
	adds r1, r6, 0
	bl sub_80F0B24
	ldr r3, [sp, 0x4]
	ldr r0, [r3]
	adds r4, r0
	adds r4, r5
	ldrb r0, [r4, 0xD]
	subs r0, 0x1
	mov r6, r8
	cmp r0, 0xC
	bhi _080F0AE2_break
	lsls r0, 2
	ldr r1, =_080F0A48
	adds r0, r1
	ldr r0, [r0]
	mov pc, r0
	.pool
	.align 2, 0
_080F0A48:
	.4byte _080F0A7C
	.4byte _080F0AA0
	.4byte _080F0AE2_break
	.4byte _080F0AE2_break
	.4byte _080F0A7C
	.4byte _080F0A7C
	.4byte _080F0A7C
	.4byte _080F0A7C
	.4byte _080F0A7C
	.4byte _080F0A7C
	.4byte _080F0A7C
	.4byte _080F0A7C
	.4byte _080F0A7C
_080F0A7C:
	ldr r0, =gSaveBlock1Ptr
	ldr r1, [r0]
	mov r4, r9
	adds r0, r7, r4
	lsls r0, 2
	adds r0, r1
	ldr r1, =0x000027cc
	adds r0, r1
	ldrh r0, [r0, 0x8]
	lsrs r1, r6, 24
	bl sub_80F0B24
	b _080F0AE2_break
	.pool
_080F0AA0:
	ldr r2, =gSaveBlock1Ptr
	ldr r0, [r2]
	mov r1, r9
	adds r4, r7, r1
	lsls r4, 2
	adds r0, r4, r0
	ldr r5, =0x000027cc
	adds r0, r5
	ldrh r0, [r0, 0x8]
	lsrs r6, 24
	adds r1, r6, 0
	str r2, [sp]
	bl sub_80F0B24
	ldr r2, [sp]
	ldr r0, [r2]
	adds r4, r0
	adds r4, r5
	ldrh r0, [r4, 0xA]
	adds r1, r6, 0
	bl sub_80F0B24
	b _080F0AE2_break
	.pool
_080F0AD8:
	mov r2, r9
	lsls r0, r2, 24
	lsrs r0, 24
	bl SetTvShowInactive
_080F0AE2_break:
	mov r0, r9
	adds r0, 0x1
	lsls r0, 16
	lsrs r0, 16
	mov r9, r0
	cmp r0, 0x17
	bhi _080F0AF2
	b _080F0716
_080F0AF2:
	add sp, 0x8
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
.syntax divided
	.code	16
.Lfe151:
	.size	 sub_80F0708,.Lfe151-sub_80F0708
	.align	2, 0
	.globl	SetTvShowInactive
	.type	 SetTvShowInactive,function
	.thumb_func
SetTvShowInactive:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L1360
	ldr	r2, [r1]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r2, r2, r1
	ldr	r0, .L1360+0x4
	add	r2, r2, r0
	mov	r0, #0x0
	strb	r0, [r2]
	bx	lr
.L1361:
	.align	2, 0
.L1360:
	.word	gSaveBlock1Ptr
	.word	0x27cd
.Lfe152:
	.size	 SetTvShowInactive,.Lfe152-SetTvShowInactive
	.align	2, 0
	.type	 sub_80F0B24,function
	.thumb_func
sub_80F0B24:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	bl	GetSetPokedexFlag
	lsl	r0, r0, #0x18
	asr	r2, r0, #0x18
	cmp	r2, #0
	bne	.L1363	@cond_branch
	ldr	r0, .L1364
	ldr	r1, [r0]
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L1364+0x4
	add	r1, r1, r0
	strb	r2, [r1]
.L1363:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1365:
	.align	2, 0
.L1364:
	.word	gSaveBlock1Ptr
	.word	0x27cd
.Lfe153:
	.size	 sub_80F0B24,.Lfe153-sub_80F0B24
	.align	2, 0
	.type	 sub_80F0B64,function
	.thumb_func
sub_80F0B64:
	push	{r4, r5, r6, lr}
	ldr	r0, .L1377
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1367	@cond_branch
	mov	r2, #0x0
	ldr	r4, .L1377+0x4
	mov	r3, #0x0
	ldr	r5, .L1377+0x8
.L1371:
	ldr	r0, [r5]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r0, r1
	ldr	r6, .L1377+0xc
	add	r0, r1, r6
	ldrb	r0, [r0]
	cmp	r0, #0x7
	beq	.L1376	@cond_branch
	cmp	r0, #0x29
	bne	.L1370	@cond_branch
.L1376:
	add	r0, r1, r4
	strb	r3, [r0]
.L1370:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x17
	bls	.L1371	@cond_branch
.L1367:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1378:
	.align	2, 0
.L1377:
	.word	0x864
	.word	0x27cd
	.word	gSaveBlock1Ptr
	.word	0x27cc
.Lfe154:
	.size	 sub_80F0B64,.Lfe154-sub_80F0B64
	.align	2, 0
	.globl	sub_80F0BB8
	.type	 sub_80F0BB8,function
	.thumb_func
sub_80F0BB8:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r6, .L1386
.L1383:
	ldr	r1, [r6]
	lsl	r0, r5, #0x3
	add	r0, r0, r5
	lsl	r4, r0, #0x2
	add	r1, r1, r4
	ldr	r0, .L1386+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	bl	GetTVChannelByShowType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L1382	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, r4
	ldr	r1, .L1386+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
.L1382:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x4
	bls	.L1383	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1387:
	.align	2, 0
.L1386:
	.word	gSaveBlock1Ptr
	.word	0x27cc
	.word	0x27cd
.Lfe155:
	.size	 sub_80F0BB8,.Lfe155-sub_80F0BB8
	.align	2, 0
	.type	 sub_80F0C04,function
	.thumb_func
sub_80F0C04:
	push	{r4, r5, lr}
	mov	r3, #0x0
	mov	r2, #0x5
	ldr	r0, .L1400
	ldr	r4, [r0]
	ldr	r5, .L1400+0x4
.L1392:
	lsl	r0, r2, #0x18
	asr	r1, r0, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r4, r0
	add	r0, r0, r5
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1391	@cond_branch
	lsl	r0, r3, #0x18
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r0, r0, r2
	lsr	r3, r0, #0x18
.L1391:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x17
	ble	.L1392	@cond_branch
	mov	r2, #0x0
	lsl	r0, r3, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x5
	sub	r0, r1, r0
	cmp	r2, r0
	bge	.L1396	@cond_branch
	add	r5, r0, #0
.L1398:
	ldr	r0, .L1400
	ldr	r0, [r0]
	ldr	r1, .L1400+0x4
	add	r0, r0, r1
	lsl	r1, r2, #0x18
	asr	r4, r1, #0x18
	mov	r2, #0xa0
	lsl	r2, r2, #0x13
	add	r1, r1, r2
	lsr	r1, r1, #0x18
	bl	DeleteTVShowInArrayByIdx
	add	r4, r4, #0x1
	lsl	r4, r4, #0x18
	lsr	r2, r4, #0x18
	asr	r4, r4, #0x18
	cmp	r4, r5
	blt	.L1398	@cond_branch
.L1396:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1401:
	.align	2, 0
.L1400:
	.word	gSaveBlock1Ptr
	.word	0x27cc
.Lfe156:
	.size	 sub_80F0C04,.Lfe156-sub_80F0C04
	.align	2, 0
	.globl	ReceivePokeNewsData
	.type	 ReceivePokeNewsData,function
	.thumb_func
ReceivePokeNewsData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r0
	add	r7, r1, #0
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	Alloc
	add	r5, r0, #0
	cmp	r5, #0
	beq	.L1403	@cond_branch
	mov	r4, #0x0
.L1407:
	lsl	r0, r4, #0x6
	add	r0, r0, r5
	mov	r1, r4
	mul	r1, r1, r7
	add	r1, r1, r8
	mov	r2, #0x40
	bl	memcpy
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L1407	@cond_branch
	cmp	r6, #0x1
	beq	.L1411	@cond_branch
	cmp	r6, #0x1
	bgt	.L1416	@cond_branch
	cmp	r6, #0
	beq	.L1410	@cond_branch
	b	.L1409
.L1416:
	cmp	r6, #0x2
	beq	.L1412	@cond_branch
	cmp	r6, #0x3
	beq	.L1413	@cond_branch
	b	.L1409
.L1410:
	ldr	r0, .L1418
	ldr	r0, [r0]
	ldr	r1, .L1418+0x4
	add	r0, r0, r1
	add	r1, r5, #0
	add	r1, r1, #0x40
	add	r2, r5, #0
	add	r2, r2, #0x80
	add	r3, r5, #0
	add	r3, r3, #0xc0
	bl	sub_80F0D60
	b	.L1409
.L1419:
	.align	2, 0
.L1418:
	.word	gSaveBlock1Ptr
	.word	0x2b50
.L1411:
	ldr	r0, .L1420
	ldr	r1, [r0]
	ldr	r0, .L1420+0x4
	add	r1, r1, r0
	add	r2, r5, #0
	add	r2, r2, #0x80
	b	.L1417
.L1421:
	.align	2, 0
.L1420:
	.word	gSaveBlock1Ptr
	.word	0x2b50
.L1412:
	add	r1, r5, #0
	add	r1, r1, #0x40
	ldr	r0, .L1422
	ldr	r2, [r0]
	ldr	r0, .L1422+0x4
	add	r2, r2, r0
.L1417:
	add	r3, r5, #0
	add	r3, r3, #0xc0
	add	r0, r5, #0
	bl	sub_80F0D60
	b	.L1409
.L1423:
	.align	2, 0
.L1422:
	.word	gSaveBlock1Ptr
	.word	0x2b50
.L1413:
	add	r1, r5, #0
	add	r1, r1, #0x40
	add	r2, r5, #0
	add	r2, r2, #0x80
	ldr	r0, .L1424
	ldr	r3, [r0]
	ldr	r0, .L1424+0x4
	add	r3, r3, r0
	add	r0, r5, #0
	bl	sub_80F0D60
.L1409:
	bl	sub_80F0EEC
	bl	sub_80F0F24
	add	r0, r5, #0
	bl	Free
.L1403:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1425:
	.align	2, 0
.L1424:
	.word	gSaveBlock1Ptr
	.word	0x2b50
.Lfe157:
	.size	 ReceivePokeNewsData,.Lfe157-ReceivePokeNewsData
	.align	2, 0
	.type	 sub_80F0D60,function
	.thumb_func
sub_80F0D60:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x24
	str	r0, [sp, #0x10]
	str	r1, [sp, #0x14]
	str	r2, [sp, #0x18]
	str	r3, [sp, #0x1c]
	add	r0, sp, #0x10
	str	r0, [sp]
	add	r0, sp, #0x14
	str	r0, [sp, #0x4]
	add	r0, sp, #0x18
	str	r0, [sp, #0x8]
	add	r0, sp, #0x1c
	str	r0, [sp, #0xc]
	bl	GetLinkPlayerCount
	ldr	r1, .L1445
	strb	r0, [r1]
	mov	r0, #0x0
	mov	sl, r0
.L1430:
	mov	r7, #0x0
	mov	r1, sl
	add	r1, r1, #0x1
	str	r1, [sp, #0x20]
	b	.L1444
.L1446:
	.align	2, 0
.L1445:
	.word	sTVShowNewsMixingNumPlayers
.L1434:
	lsl	r4, r7, #0x2
	mov	r1, sp
	add	r0, r1, r4
	ldr	r0, [r0]
	ldr	r0, [r0]
	mov	r1, sl
	bl	sub_80F0ECC
	ldr	r1, .L1447
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r8, r4
	add	r1, r7, #0x1
	mov	r9, r1
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L1433	@cond_branch
	mov	r5, #0x0
	ldr	r1, .L1447+0x4
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	cmp	r5, r0
	bge	.L1433	@cond_branch
	add	r6, r1, #0
.L1439:
	add	r0, r7, r5
	add	r4, r0, #0x1
	ldrb	r1, [r6]
	add	r0, r4, #0
	bl	__modsi3
	lsl	r0, r0, #0x2
	add	r0, r0, sp
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	sub_80EEE30
	ldr	r1, .L1447+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L1438	@cond_branch
	ldrb	r1, [r6]
	add	r0, r4, #0
	bl	__modsi3
	lsl	r0, r0, #0x2
	add	r0, r0, sp
	ldr	r0, [r0]
	mov	r1, sp
	add	r1, r1, r8
	ldr	r1, [r1]
	bl	sub_80F0E58
.L1438:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldrb	r0, [r6]
	sub	r0, r0, #0x1
	cmp	r5, r0
	blt	.L1439	@cond_branch
.L1433:
	mov	r1, r9
	lsl	r0, r1, #0x18
	lsr	r7, r0, #0x18
.L1444:
	ldr	r0, .L1447+0x4
	ldrb	r0, [r0]
	cmp	r7, r0
	bcc	.L1434	@cond_branch
	ldr	r1, [sp, #0x20]
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	cmp	r0, #0xf
	bls	.L1430	@cond_branch
	add	sp, sp, #0x24
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1448:
	.align	2, 0
.L1447:
	.word	sTVShowMixingCurSlot
	.word	sTVShowNewsMixingNumPlayers
	.word	sCurTVShowSlot
.Lfe158:
	.size	 sub_80F0D60,.Lfe158-sub_80F0D60
	.align	2, 0
	.type	 sub_80F0E58,function
	.thumb_func
sub_80F0E58:
	push	{lr}
	ldr	r0, [r0]
	ldr	r1, [r1]
	ldr	r2, .L1450
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	ldr	r2, .L1450+0x4
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	bl	sub_80F0E84
	pop	{r0}
	bx	r0
.L1451:
	.align	2, 0
.L1450:
	.word	sTVShowMixingCurSlot
	.word	sCurTVShowSlot
.Lfe159:
	.size	 sub_80F0E58,.Lfe159-sub_80F0E58
	.align	2, 0
	.type	 sub_80F0E84,function
	.thumb_func
sub_80F0E84:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldrb	r3, [r5]
	add	r0, r3, #0
	cmp	r0, #0
	bne	.L1453	@cond_branch
.L1462:
	mov	r0, #0x0
	b	.L1460
.L1453:
	mov	r1, #0x0
	add	r2, r3, #0
	add	r3, r0, #0
.L1457:
	lsl	r0, r1, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, r3
	beq	.L1462	@cond_branch
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xf
	bls	.L1457	@cond_branch
	lsl	r0, r6, #0x18
	asr	r0, r0, #0x16
	add	r0, r0, r4
	strb	r2, [r0]
	mov	r1, #0x1
	strb	r1, [r0, #0x1]
	ldrh	r1, [r5, #0x2]
	strh	r1, [r0, #0x2]
	mov	r0, #0x1
.L1460:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe160:
	.size	 sub_80F0E84,.Lfe160-sub_80F0E84
	.align	2, 0
	.type	 sub_80F0ECC,function
	.thumb_func
sub_80F0ECC:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L1464	@cond_branch
	lsl	r0, r2, #0x18
	asr	r0, r0, #0x18
	b	.L1465
.L1464:
	mov	r0, #0x1
	neg	r0, r0
.L1465:
	pop	{r1}
	bx	r1
.Lfe161:
	.size	 sub_80F0ECC,.Lfe161-sub_80F0ECC
	.align	2, 0
	.type	 sub_80F0EEC,function
	.thumb_func
sub_80F0EEC:
	push	{r4, lr}
	mov	r4, #0x0
.L1470:
	ldr	r0, .L1473
	ldr	r0, [r0]
	lsl	r1, r4, #0x2
	add	r0, r0, r1
	ldr	r1, .L1473+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bls	.L1469	@cond_branch
	add	r0, r4, #0
	bl	ClearPokemonNewsI
.L1469:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.L1470	@cond_branch
	bl	sub_80EEEB8
	pop	{r4}
	pop	{r0}
	bx	r0
.L1474:
	.align	2, 0
.L1473:
	.word	gSaveBlock1Ptr
	.word	0x2b50
.Lfe162:
	.size	 sub_80F0EEC,.Lfe162-sub_80F0EEC
	.align	2, 0
	.type	 sub_80F0F24,function
	.thumb_func
sub_80F0F24:
	push	{r4, r5, lr}
	ldr	r0, .L1482
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1476	@cond_branch
	mov	r2, #0x0
	ldr	r5, .L1482+0x4
	ldr	r4, .L1482+0x8
	mov	r3, #0x0
.L1480:
	ldr	r0, [r5]
	lsl	r1, r2, #0x2
	add	r0, r0, r1
	add	r0, r0, r4
	strb	r3, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xf
	bls	.L1480	@cond_branch
.L1476:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1483:
	.align	2, 0
.L1482:
	.word	0x864
	.word	gSaveBlock1Ptr
	.word	0x2b51
.Lfe163:
	.size	 sub_80F0F24,.Lfe163-sub_80F0F24
	.align	2, 0
	.type	 sub_80F0F64,function
	.thumb_func
sub_80F0F64:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	add	r5, r1, #0
	mov	r0, #0x2c
	bl	AllocZeroed
	add	r4, r0, #0
	mov	r7, #0x0
.L1488:
	lsl	r0, r7, #0x3
	add	r1, r0, r7
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r1, [r1]
	sub	r1, r1, #0x1
	add	r2, r0, #0
	cmp	r1, #0x28
	bls	.LCB13262
	b	.L1487	@long jump
.LCB13262:
	lsl	r0, r1, #0x2
	ldr	r1, .L1538
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1539:
	.align	2, 0
.L1538:
	.word	.L1532
	.align	2, 0
	.align	2, 0
.L1532:
	.word	.L1491
	.word	.L1491
	.word	.L1494
	.word	.L1487
	.word	.L1517
	.word	.L1512
	.word	.L1507
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1499
	.word	.L1504
	.word	.L1522
	.word	.L1525
	.word	.L1528
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1487
	.word	.L1531
.L1491:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4]
	add	r0, r0, #0x10
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1492	@cond_branch
	ldr	r1, [r4]
	mov	r0, #0x1
	strb	r0, [r1, #0x18]
	b	.L1487
.L1492:
	ldr	r0, [r4]
	b	.L1535
.L1494:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x4]
	add	r0, r0, #0x5
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1495	@cond_branch
	ldr	r1, [r4, #0x4]
	mov	r0, #0x1
	strb	r0, [r1, #0xd]
	b	.L1496
.L1495:
	ldr	r0, [r4, #0x4]
	strb	r5, [r0, #0xd]
.L1496:
	ldr	r0, [r4, #0x4]
	add	r0, r0, #0x10
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1497	@cond_branch
	ldr	r1, [r4, #0x4]
	mov	r0, #0x1
	strb	r0, [r1, #0xe]
	b	.L1487
.L1497:
	ldr	r0, [r4, #0x4]
	strb	r5, [r0, #0xe]
	b	.L1487
.L1499:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x18]
	add	r0, r0, #0x13
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1500	@cond_branch
	ldr	r1, [r4, #0x18]
	mov	r0, #0x1
	strb	r0, [r1, #0x2]
	b	.L1501
.L1500:
	ldr	r0, [r4, #0x18]
	strb	r5, [r0, #0x2]
.L1501:
	ldr	r0, [r4, #0x18]
	add	r0, r0, #0x4
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1502	@cond_branch
	ldr	r1, [r4, #0x18]
	b	.L1536
.L1502:
	ldr	r0, [r4, #0x18]
	strb	r5, [r0, #0x3]
	b	.L1487
.L1504:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x1c]
	add	r0, r0, #0x13
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1505	@cond_branch
	ldr	r1, [r4, #0x1c]
.L1536:
	mov	r0, #0x1
	strb	r0, [r1, #0x3]
	b	.L1487
.L1505:
	ldr	r0, [r4, #0x1c]
	strb	r5, [r0, #0x3]
	b	.L1487
.L1507:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x14]
	add	r0, r0, #0x2
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1508	@cond_branch
	ldr	r1, [r4, #0x14]
	mov	r0, #0x1
	strb	r0, [r1, #0x1d]
	b	.L1509
.L1508:
	ldr	r0, [r4, #0x14]
	strb	r5, [r0, #0x1d]
.L1509:
	ldr	r0, [r4, #0x14]
	add	r0, r0, #0xc
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1510	@cond_branch
	ldr	r1, [r4, #0x14]
	mov	r0, #0x1
	strb	r0, [r1, #0x1e]
	b	.L1487
.L1510:
	ldr	r0, [r4, #0x14]
	strb	r5, [r0, #0x1e]
	b	.L1487
.L1512:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x10]
	add	r0, r0, #0x16
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1513	@cond_branch
	ldr	r1, [r4, #0x10]
	mov	r0, #0x1
	strb	r0, [r1, #0x1e]
	b	.L1514
.L1513:
	ldr	r0, [r4, #0x10]
	strb	r5, [r0, #0x1e]
.L1514:
	ldr	r0, [r4, #0x10]
	add	r0, r0, #0x8
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1515	@cond_branch
	ldr	r1, [r4, #0x10]
	b	.L1537
.L1515:
	ldr	r0, [r4, #0x10]
	strb	r5, [r0, #0x1f]
	b	.L1487
.L1517:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0xc]
	add	r0, r0, #0xf
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1518	@cond_branch
	ldr	r1, [r4, #0xc]
	mov	r0, #0x1
	strb	r0, [r1, #0x1e]
	b	.L1519
.L1518:
	ldr	r0, [r4, #0xc]
	strb	r5, [r0, #0x1e]
.L1519:
	ldr	r0, [r4, #0xc]
	add	r0, r0, #0x4
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1520	@cond_branch
	ldr	r1, [r4, #0xc]
.L1537:
	mov	r0, #0x1
	strb	r0, [r1, #0x1f]
	b	.L1487
.L1520:
	ldr	r0, [r4, #0xc]
	strb	r5, [r0, #0x1f]
	b	.L1487
.L1522:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x8]
	add	r0, r0, #0x13
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1523	@cond_branch
	ldr	r1, [r4, #0x8]
	mov	r0, #0x1
	strb	r0, [r1, #0x2]
	b	.L1487
.L1523:
	ldr	r0, [r4, #0x8]
	strb	r5, [r0, #0x2]
	b	.L1487
.L1525:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x20]
	add	r0, r0, #0x13
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1526	@cond_branch
	ldr	r1, [r4, #0x20]
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	b	.L1487
.L1526:
	ldr	r0, [r4, #0x20]
	strb	r5, [r0, #0x6]
	b	.L1487
.L1528:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x24]
	add	r0, r0, #0x13
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1529	@cond_branch
	ldr	r1, [r4, #0x24]
	mov	r0, #0x1
	strb	r0, [r1, #0xb]
	b	.L1487
.L1529:
	ldr	r0, [r4, #0x24]
	strb	r5, [r0, #0xb]
	b	.L1487
.L1531:
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r6, r0
	str	r0, [r4, #0x28]
.L1535:
	strb	r5, [r0, #0x18]
.L1487:
	add	r7, r7, #0x1
	cmp	r7, #0x17
	bgt	.LCB13620
	b	.L1488	@long jump
.LCB13620:
	add	r0, r4, #0
	bl	Free
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe164:
	.size	 sub_80F0F64,.Lfe164-sub_80F0F64
	.align	2, 0
	.globl	sub_80F1208
	.type	 sub_80F1208,function
	.thumb_func
sub_80F1208:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	sub_80F14F8
	add	r4, r5, #0
	mov	r1, #0xd8
	lsl	r1, r1, #0x2
	add	r0, r4, r1
	cmp	r4, r0
	bcs	.L1542	@cond_branch
.L1544:
	ldrb	r0, [r4]
	cmp	r0, #0x7
	bne	.L1543	@cond_branch
	ldrb	r0, [r4, #0x1d]
	cmp	r0, #0x1
	bne	.L1550	@cond_branch
	ldrb	r0, [r4, #0x1e]
	cmp	r0, #0x1
	bne	.L1547	@cond_branch
	b	.L1543
.L1550:
	ldrb	r0, [r4, #0x1e]
	cmp	r0, #0x1
	bne	.L1543	@cond_branch
.L1547:
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x24
	bl	memset
.L1543:
	add	r4, r4, #0x24
	mov	r1, #0xd8
	lsl	r1, r1, #0x2
	add	r0, r5, r1
	cmp	r4, r0
	bcc	.L1544	@cond_branch
.L1542:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe165:
	.size	 sub_80F1208,.Lfe165-sub_80F1208
	.align	2, 0
	.type	 sub_80F1254,function
	.thumb_func
sub_80F1254:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r4, #0
	mov	r1, #0xd8
	lsl	r1, r1, #0x2
	add	r0, r4, r1
	cmp	r4, r0
	bcs	.L1553	@cond_branch
.L1555:
	ldrb	r0, [r4]
	cmp	r0, #0x7
	bne	.L1554	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0xc
	bl	IsStringJapanese
	cmp	r0, #0
	beq	.L1557	@cond_branch
	mov	r0, #0x1
	b	.L1560
.L1557:
	mov	r0, #0x2
.L1560:
	strb	r0, [r4, #0x1e]
.L1554:
	add	r4, r4, #0x24
	mov	r1, #0xd8
	lsl	r1, r1, #0x2
	add	r0, r5, r1
	cmp	r4, r0
	bcc	.L1555	@cond_branch
.L1553:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe166:
	.size	 sub_80F1254,.Lfe166-sub_80F1254
	.align	2, 0
	.globl	TV_GetStringLanguage
	.type	 TV_GetStringLanguage,function
	.thumb_func
TV_GetStringLanguage:
	push	{lr}
	bl	IsStringJapanese
	mov	r1, #0x2
	cmp	r0, #0
	beq	.L1562	@cond_branch
	mov	r1, #0x1
.L1562:
	add	r0, r1, #0
	pop	{r1}
	bx	r1
.Lfe167:
	.size	 TV_GetStringLanguage,.Lfe167-TV_GetStringLanguage
	.align	2, 0
	.type	 sub_80F12A4,function
	.thumb_func
sub_80F12A4:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r4, #0
	mov	r1, #0xd8
	lsl	r1, r1, #0x2
	add	r0, r4, r1
	cmp	r4, r0
	bcc	.LCB13783
	b	.L1566	@long jump
.LCB13783:
.L1568:
	ldrb	r0, [r4]
	sub	r0, r0, #0x1
	cmp	r0, #0x28
	bls	.LCB13790
	b	.L1567	@long jump
.LCB13790:
	lsl	r0, r0, #0x2
	ldr	r1, .L1610
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1611:
	.align	2, 0
.L1610:
	.word	.L1602
	.align	2, 0
	.align	2, 0
.L1602:
	.word	.L1570
	.word	.L1571
	.word	.L1572
	.word	.L1573
	.word	.L1574
	.word	.L1575
	.word	.L1576
	.word	.L1577
	.word	.L1578
	.word	.L1579
	.word	.L1580
	.word	.L1581
	.word	.L1567
	.word	.L1567
	.word	.L1567
	.word	.L1567
	.word	.L1567
	.word	.L1567
	.word	.L1567
	.word	.L1567
	.word	.L1582
	.word	.L1583
	.word	.L1584
	.word	.L1585
	.word	.L1586
	.word	.L1595
	.word	.L1587
	.word	.L1598
	.word	.L1591
	.word	.L1588
	.word	.L1595
	.word	.L1598
	.word	.L1589
	.word	.L1591
	.word	.L1592
	.word	.L1595
	.word	.L1598
	.word	.L1599
	.word	.L1600
	.word	.L1567
	.word	.L1567
.L1570:
	add	r0, r4, #0
	add	r0, r0, #0x10
	b	.L1605
.L1571:
	add	r0, r4, #0
	add	r0, r0, #0x10
	b	.L1605
.L1572:
	add	r0, r4, #0x5
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0xd]
	add	r0, r4, #0
	add	r0, r0, #0x10
	b	.L1606
.L1573:
	add	r0, r4, #0
	add	r0, r0, #0xb
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x17]
	b	.L1567
.L1574:
	add	r0, r4, #0
	add	r0, r0, #0xf
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1e]
	add	r0, r4, #0x4
	b	.L1607
.L1575:
	add	r0, r4, #0
	add	r0, r0, #0x16
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1e]
	add	r0, r4, #0
	add	r0, r0, #0x8
.L1607:
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1f]
	b	.L1567
.L1576:
	add	r0, r4, #0x2
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1d]
	add	r0, r4, #0
	add	r0, r0, #0xc
	b	.L1608
.L1577:
	add	r0, r4, #0
	add	r0, r0, #0x14
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1d]
	add	r0, r4, #0x4
.L1608:
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1e]
	b	.L1567
.L1578:
	add	r0, r4, #0
	add	r0, r0, #0xc
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x14]
	add	r0, r4, #0x4
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x15]
	b	.L1567
.L1579:
	add	r0, r4, #0x4
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x19]
	add	r0, r4, #0
	add	r0, r0, #0xc
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1a]
	b	.L1567
.L1580:
	add	r0, r4, #0x2
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x17]
	add	r0, r4, #0
	add	r0, r0, #0xc
	b	.L1605
.L1581:
	add	r0, r4, #0x2
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x17]
	add	r0, r4, #0
	add	r0, r0, #0xb
.L1605:
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x18]
	b	.L1567
.L1582:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x2]
	add	r0, r4, #0x4
	b	.L1609
.L1583:
	add	r0, r4, #0
	add	r0, r0, #0x13
.L1609:
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x3]
	b	.L1567
.L1584:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x2]
	b	.L1567
.L1585:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x6]
	b	.L1567
.L1586:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0xb]
	b	.L1567
.L1587:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x9]
	b	.L1567
.L1588:
	add	r0, r4, #0
	add	r0, r0, #0x13
.L1606:
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0xe]
	b	.L1567
.L1589:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x11]
	b	.L1567
.L1591:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x8]
	b	.L1567
.L1592:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0xf]
	add	r0, r4, #0x4
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x10]
	b	.L1567
.L1595:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0xc]
	b	.L1567
.L1598:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x5]
	b	.L1567
.L1599:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1b]
	add	r0, r4, #0x4
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x1c]
	b	.L1567
.L1600:
	add	r0, r4, #0
	add	r0, r0, #0x13
	bl	TV_GetStringLanguage
	strb	r0, [r4, #0x4]
.L1567:
	add	r4, r4, #0x24
	mov	r1, #0xd8
	lsl	r1, r1, #0x2
	add	r0, r5, r1
	cmp	r4, r0
	bcs	.LCB14101
	b	.L1568	@long jump
.LCB14101:
.L1566:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe168:
	.size	 sub_80F12A4,.Lfe168-sub_80F12A4
	.align	2, 0
	.globl	sub_80F14F8
	.type	 sub_80F14F8,function
	.thumb_func
sub_80F14F8:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r4, r5, #0
	mov	r6, #0x17
.L1616:
	ldrb	r0, [r4]
	cmp	r0, #0x17
	beq	.L1620	@cond_branch
	cmp	r0, #0x19
	bne	.L1615	@cond_branch
	ldrb	r0, [r4, #0xa]
	cmp	r0, #0x58
	bls	.L1615	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r2, #0x24
	bl	memset
	b	.L1615
.L1620:
	ldrb	r0, [r4, #0x12]
	cmp	r0, #0x58
	bls	.L1615	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r2, #0x24
	bl	memset
.L1615:
	add	r4, r4, #0x24
	add	r5, r5, #0x24
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L1616	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe169:
	.size	 sub_80F14F8,.Lfe169-sub_80F14F8
	.align	2, 0
	.globl	DoTVShow
	.type	 DoTVShow,function
	.thumb_func
DoTVShow:
	push	{lr}
	ldr	r0, .L1662
	ldr	r2, [r0]
	ldr	r0, .L1662+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldr	r1, .L1662+0x8
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB14193
	b	.L1626	@long jump
.LCB14193:
	sub	r1, r1, #0x1
	add	r0, r2, r1
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x28
	bls	.LCB14201
	b	.L1626	@long jump
.LCB14201:
	lsl	r0, r0, #0x2
	ldr	r1, .L1662+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1663:
	.align	2, 0
.L1662:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cd
	.word	.L1660
	.align	2, 0
	.align	2, 0
.L1660:
	.word	.L1628
	.word	.L1629
	.word	.L1630
	.word	.L1631
	.word	.L1637
	.word	.L1633
	.word	.L1634
	.word	.L1638
	.word	.L1640
	.word	.L1639
	.word	.L1652
	.word	.L1659
	.word	.L1626
	.word	.L1626
	.word	.L1626
	.word	.L1626
	.word	.L1626
	.word	.L1626
	.word	.L1626
	.word	.L1626
	.word	.L1635
	.word	.L1636
	.word	.L1641
	.word	.L1642
	.word	.L1643
	.word	.L1644
	.word	.L1645
	.word	.L1646
	.word	.L1647
	.word	.L1648
	.word	.L1649
	.word	.L1650
	.word	.L1651
	.word	.L1653
	.word	.L1654
	.word	.L1655
	.word	.L1656
	.word	.L1657
	.word	.L1658
	.word	.L1626
	.word	.L1632
.L1628:
	bl	DoTVShowPokemonFanClubLetter
	b	.L1626
.L1629:
	bl	DoTVShowRecentHappenings
	b	.L1626
.L1630:
	bl	DoTVShowPokemonFanClubOpinions
	b	.L1626
.L1631:
	bl	DoTVShowDummiedOut
	b	.L1626
.L1632:
	bl	DoTVShowPokemonNewsMassOutbreak
	b	.L1626
.L1633:
	bl	DoTVShowBravoTrainerPokemonProfile
	b	.L1626
.L1634:
	bl	DoTVShowBravoTrainerBattleTower
	b	.L1626
.L1635:
	bl	DoTVShowPokemonTodaySuccessfulCapture
	b	.L1626
.L1636:
	bl	DoTVShowTodaysSmartShopper
	b	.L1626
.L1637:
	bl	DoTVShowTheNameRaterShow
	b	.L1626
.L1638:
	bl	DoTVShowPokemonContestLiveUpdates
	b	.L1626
.L1639:
	bl	DoTVShowPokemonBattleUpdate
	b	.L1626
.L1640:
	bl	DoTVShow3CheersForPokeblocks
	b	.L1626
.L1641:
	bl	DoTVShowPokemonTodayFailedCapture
	b	.L1626
.L1642:
	bl	DoTVShowPokemonAngler
	b	.L1626
.L1643:
	bl	DoTVShowTheWorldOfMasters
	b	.L1626
.L1644:
	bl	DoTVShowTodaysRivalTrainer
	b	.L1626
.L1645:
	bl	DoTVShowDewfordTrendWatcherNetwork
	b	.L1626
.L1646:
	bl	DoTVShowHoennTreasureInvestigators
	b	.L1626
.L1647:
	bl	DoTVShowFindThatGamer
	b	.L1626
.L1648:
	bl	DoTVShowBreakingNewsTV
	b	.L1626
.L1649:
	bl	DoTVShowSecretBaseVisit
	b	.L1626
.L1650:
	bl	DoTVShowPokemonLotteryWinnerFlashReport
	b	.L1626
.L1651:
	bl	DoTVShowThePokemonBattleSeminar
	b	.L1626
.L1652:
	bl	DoTVShowTrainerFanClubSpecial
	b	.L1626
.L1653:
	bl	DoTVShowTrainerFanClub
	b	.L1626
.L1654:
	bl	DoTVShowSpotTheCuties
	b	.L1626
.L1655:
	bl	DoTVShowPokemonNewsBattleFrontier
	b	.L1626
.L1656:
	bl	DoTVShowWhatsNo1InHoennToday
	b	.L1626
.L1657:
	bl	DoTVShowSecretBaseSecrets
	b	.L1626
.L1658:
	bl	DoTVShowSafariFanClub
	b	.L1626
.L1659:
	bl	DoTVShowPokemonContestLiveUpdates2
.L1626:
	pop	{r0}
	bx	r0
.Lfe170:
	.size	 DoTVShow,.Lfe170-DoTVShow
	.align	2, 0
	.type	 DoTVShowBravoTrainerPokemonProfile,function
	.thumb_func
DoTVShowBravoTrainerPokemonProfile:
	push	{r4, r5, lr}
	ldr	r2, .L1685
	ldr	r0, .L1685+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1685+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L1685+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1685+0x10
	ldrb	r5, [r0]
	cmp	r5, #0x8
	bls	.LCB14377
	b	.L1665	@long jump
.LCB14377:
	lsl	r0, r5, #0x2
	ldr	r1, .L1685+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1686:
	.align	2, 0
.L1685:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L1681
	.align	2, 0
	.align	2, 0
.L1681:
	.word	.L1666
	.word	.L1669
	.word	.L1670
	.word	.L1673
	.word	.L1674
	.word	.L1675
	.word	.L1678
	.word	.L1679
	.word	.L1680
.L1666:
	ldr	r0, .L1687
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	mov	r0, #0x1
	bl	CopyContestCategoryToStringVar
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x1b
	lsr	r1, r1, #0x1e
	mov	r0, #0x2
	bl	CopyContestRankToStringVar
	ldrh	r1, [r4, #0x2]
	mov	r0, #0xb
	mul	r0, r0, r1
	ldr	r1, .L1687+0x4
	add	r0, r0, r1
	add	r1, r4, #0
	add	r1, r1, #0x8
	bl	StringCompare
	cmp	r0, #0
	bne	.L1667	@cond_branch
	ldr	r1, .L1687+0x8
	mov	r0, #0x8
	b	.L1683
.L1688:
	.align	2, 0
.L1687:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	sTVShowState
.L1667:
	ldr	r1, .L1689
	mov	r0, #0x1
	b	.L1683
.L1690:
	.align	2, 0
.L1689:
	.word	sTVShowState
.L1669:
	ldr	r0, .L1691
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1691+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1691+0x8
	add	r1, r4, #0
	add	r1, r1, #0x8
	ldrb	r2, [r4, #0x1f]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	mov	r0, #0x2
	bl	CopyContestCategoryToStringVar
	b	.L1684
.L1692:
	.align	2, 0
.L1691:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
.L1670:
	ldr	r0, .L1693
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x13]
	mov	r0, #0x60
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1671	@cond_branch
	ldr	r1, .L1693+0x4
	mov	r0, #0x3
	b	.L1683
.L1694:
	.align	2, 0
.L1693:
	.word	gStringVar1
	.word	sTVShowState
.L1671:
	ldr	r1, .L1695
	mov	r0, #0x4
	b	.L1683
.L1696:
	.align	2, 0
.L1695:
	.word	sTVShowState
.L1673:
	ldr	r0, .L1697
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1697+0x4
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x1e
	add	r1, r1, #0x1
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldr	r1, .L1697+0x8
	mov	r0, #0x5
	b	.L1683
.L1698:
	.align	2, 0
.L1697:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L1674:
	ldr	r0, .L1699
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1699+0x4
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x1e
	add	r1, r1, #0x1
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldr	r1, .L1699+0x8
	mov	r0, #0x5
	b	.L1683
.L1700:
	.align	2, 0
.L1699:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L1675:
	ldr	r0, .L1701
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	mov	r0, #0x1
	bl	CopyContestCategoryToStringVar
	ldr	r0, .L1701+0x4
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	ldrh	r0, [r4, #0x14]
	cmp	r0, #0
	beq	.L1676	@cond_branch
	ldr	r1, .L1701+0x8
	mov	r0, #0x6
	b	.L1683
.L1702:
	.align	2, 0
.L1701:
	.word	gStringVar1
	.word	gStringVar3
	.word	sTVShowState
.L1676:
	ldr	r1, .L1703
	mov	r0, #0x7
	b	.L1683
.L1704:
	.align	2, 0
.L1703:
	.word	sTVShowState
.L1678:
	ldr	r0, .L1705
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1705+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1705+0x8
	ldrh	r2, [r4, #0x14]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L1705+0xc
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1705+0x10
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	ldr	r1, .L1705+0x14
	mov	r0, #0x7
	b	.L1683
.L1706:
	.align	2, 0
.L1705:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gMoveNames
	.word	gStringVar3
	.word	sTVShowState
.L1679:
	ldr	r0, .L1707
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1707+0x4
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1707+0x8
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
	b	.L1665
.L1708:
	.align	2, 0
.L1707:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
.L1680:
	ldr	r0, .L1709
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1709+0x4
	add	r1, r1, r2
	bl	StringCopy
.L1684:
	ldr	r1, .L1709+0x8
	mov	r0, #0x2
.L1683:
	strb	r0, [r1]
.L1665:
	ldr	r0, .L1709+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1710:
	.align	2, 0
.L1709:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	sTVShowState
	.word	sTVBravoTrainerTextGroup
.Lfe171:
	.size	 DoTVShowBravoTrainerPokemonProfile,.Lfe171-DoTVShowBravoTrainerPokemonProfile
	.align	2, 0
	.type	 DoTVShowBravoTrainerBattleTower,function
	.thumb_func
DoTVShowBravoTrainerBattleTower:
	push	{r4, r5, lr}
	ldr	r2, .L1747
	ldr	r0, .L1747+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1747+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L1747+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1747+0x10
	ldrb	r5, [r0]
	add	r2, r0, #0
	cmp	r5, #0xe
	bls	.LCB14783
	b	.L1712	@long jump
.LCB14783:
	lsl	r0, r5, #0x2
	ldr	r1, .L1747+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1748:
	.align	2, 0
.L1747:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L1742
	.align	2, 0
	.align	2, 0
.L1742:
	.word	.L1713
	.word	.L1716
	.word	.L1721
	.word	.L1724
	.word	.L1727
	.word	.L1730
	.word	.L1731
	.word	.L1732
	.word	.L1735
	.word	.L1735
	.word	.L1735
	.word	.L1736
	.word	.L1740
	.word	.L1740
	.word	.L1741
.L1713:
	ldr	r0, .L1749
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1749+0x4
	ldrh	r2, [r4, #0xa]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1749+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldrh	r0, [r4, #0x16]
	cmp	r0, #0x6
	bls	.L1714	@cond_branch
	ldr	r1, .L1749+0xc
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1712
.L1750:
	.align	2, 0
.L1749:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L1714:
	ldr	r1, .L1751
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L1712
.L1752:
	.align	2, 0
.L1751:
	.word	sTVShowState
.L1716:
	ldrb	r0, [r4, #0x1a]
	cmp	r0, #0x32
	bne	.L1717	@cond_branch
	ldr	r0, .L1753
	ldr	r1, .L1753+0x4
	bl	StringCopy
	b	.L1718
.L1754:
	.align	2, 0
.L1753:
	.word	gStringVar1
	.word	gText_Lv50
.L1717:
	ldr	r0, .L1755
	ldr	r1, .L1755+0x4
	bl	StringCopy
.L1718:
	ldrh	r1, [r4, #0x16]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldrb	r0, [r4, #0x1c]
	cmp	r0, #0x1
	bne	.L1719	@cond_branch
	ldr	r1, .L1755+0x8
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L1712
.L1756:
	.align	2, 0
.L1755:
	.word	gStringVar1
	.word	gText_OpenLevel
	.word	sTVShowState
.L1719:
	ldr	r1, .L1757
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L1712
.L1758:
	.align	2, 0
.L1757:
	.word	sTVShowState
.L1721:
	ldr	r0, .L1759
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x16]
	add	r1, r1, #0x1
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
.L1746:
	ldrb	r0, [r4, #0x1b]
	cmp	r0, #0
	beq	.L1744	@cond_branch
	b	.L1728
.L1760:
	.align	2, 0
.L1759:
	.word	gStringVar1
.L1724:
	ldr	r0, .L1761
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1761+0x4
	ldrh	r2, [r4, #0x14]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1761+0x8
	add	r1, r1, r2
	bl	StringCopy
	b	.L1746
.L1762:
	.align	2, 0
.L1761:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
.L1727:
	ldr	r0, .L1763
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1763+0x4
	ldrh	r2, [r4, #0x14]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1763+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r0, [r4, #0x1b]
	cmp	r0, #0
	bne	.L1728	@cond_branch
.L1744:
	ldr	r1, .L1763+0xc
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L1712
.L1764:
	.align	2, 0
.L1763:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L1728:
	ldr	r1, .L1765
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L1712
.L1766:
	.align	2, 0
.L1765:
	.word	sTVShowState
.L1730:
	ldr	r0, .L1767
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1e]
	b	.L1745
.L1768:
	.align	2, 0
.L1767:
	.word	gStringVar1
.L1731:
	ldr	r0, .L1769
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1e]
	b	.L1745
.L1770:
	.align	2, 0
.L1769:
	.word	gStringVar1
.L1732:
	mov	r0, #0xb
	strb	r0, [r2]
	b	.L1712
.L1735:
	ldr	r0, .L1771
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x1d]
.L1745:
	bl	TVShowConvertInternationalString
	ldr	r1, .L1771+0x4
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L1712
.L1772:
	.align	2, 0
.L1771:
	.word	gStringVar1
	.word	sTVShowState
.L1736:
	ldr	r0, .L1773
	ldrh	r1, [r4, #0x18]
	bl	CopyEasyChatWord
	ldrb	r0, [r4, #0x1b]
	cmp	r0, #0
	bne	.L1737	@cond_branch
	ldr	r1, .L1773+0x4
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L1712
.L1774:
	.align	2, 0
.L1773:
	.word	gStringVar1
	.word	sTVShowState
.L1737:
	ldr	r1, .L1775
	mov	r0, #0xd
	strb	r0, [r1]
	b	.L1712
.L1776:
	.align	2, 0
.L1775:
	.word	sTVShowState
.L1740:
	ldr	r0, .L1777
	ldrh	r1, [r4, #0x18]
	bl	CopyEasyChatWord
	ldr	r0, .L1777+0x4
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1777+0x8
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r1, .L1777+0xc
	mov	r0, #0xe
	strb	r0, [r1]
	b	.L1712
.L1778:
	.align	2, 0
.L1777:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	sTVShowState
.L1741:
	ldr	r0, .L1779
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1779+0x4
	ldrh	r2, [r4, #0xa]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1779+0x8
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
.L1712:
	ldr	r0, .L1779+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1780:
	.align	2, 0
.L1779:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVBravoTrainerBattleTowerTextGroup
.Lfe172:
	.size	 DoTVShowBravoTrainerBattleTower,.Lfe172-DoTVShowBravoTrainerBattleTower
	.align	2, 0
	.type	 DoTVShowTodaysSmartShopper,function
	.thumb_func
DoTVShowTodaysSmartShopper:
	push	{r4, r5, r6, lr}
	ldr	r2, .L1818
	ldr	r0, .L1818+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1818+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L1818+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1818+0x10
	ldrb	r6, [r0]
	add	r2, r0, #0
	cmp	r6, #0xc
	bls	.LCB15219
	b	.L1782	@long jump
.LCB15219:
	lsl	r0, r6, #0x2
	ldr	r1, .L1818+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1819:
	.align	2, 0
.L1818:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L1814
	.align	2, 0
	.align	2, 0
.L1814:
	.word	.L1783
	.word	.L1786
	.word	.L1789
	.word	.L1792
	.word	.L1789
	.word	.L1789
	.word	.L1795
	.word	.L1800
	.word	.L1803
	.word	.L1806
	.word	.L1807
	.word	.L1810
	.word	.L1813
.L1783:
	ldr	r0, .L1820
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1820+0x4
	ldrb	r1, [r5, #0x12]
	mov	r2, #0x0
	bl	GetMapName
	ldrh	r0, [r5, #0xc]
	cmp	r0, #0xfe
	bls	.L1784	@cond_branch
	ldr	r1, .L1820+0x8
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L1782
.L1821:
	.align	2, 0
.L1820:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L1784:
	ldr	r1, .L1822
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1782
.L1823:
	.align	2, 0
.L1822:
	.word	sTVShowState
.L1786:
	ldr	r0, .L1824
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldr	r4, .L1824+0x4
	ldrh	r0, [r5, #0x6]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrh	r1, [r5, #0xc]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldr	r4, .L1824+0x8
	bl	Random
	ldrb	r2, [r4]
	add	r2, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	and	r0, r0, r1
	add	r0, r0, r2
	strb	r0, [r4]
	b	.L1782
.L1825:
	.align	2, 0
.L1824:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L1789:
	ldrh	r0, [r5, #0x8]
	cmp	r0, #0
	beq	.L1790	@cond_branch
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L1782
.L1790:
	mov	r0, #0xa
	strb	r0, [r2]
	b	.L1782
.L1792:
	ldrh	r1, [r5, #0xc]
	add	r1, r1, #0x1
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldrh	r0, [r5, #0x8]
	cmp	r0, #0
	beq	.L1793	@cond_branch
	ldr	r1, .L1826
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L1782
.L1827:
	.align	2, 0
.L1826:
	.word	sTVShowState
.L1793:
	ldr	r1, .L1828
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L1782
.L1829:
	.align	2, 0
.L1828:
	.word	sTVShowState
.L1795:
	ldr	r4, .L1830
	ldrh	r0, [r5, #0x8]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrh	r1, [r5, #0xe]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldrh	r0, [r5, #0xa]
	cmp	r0, #0
	beq	.L1817	@cond_branch
	ldr	r1, .L1830+0x4
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L1782
.L1831:
	.align	2, 0
.L1830:
	.word	gStringVar2
	.word	sTVShowState
.L1800:
	ldr	r4, .L1832
	ldrh	r0, [r5, #0xa]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrh	r1, [r5, #0x10]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
.L1817:
	ldrb	r0, [r5, #0x2]
	cmp	r0, #0x1
	beq	.L1816	@cond_branch
	ldr	r1, .L1832+0x4
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L1782
.L1833:
	.align	2, 0
.L1832:
	.word	gStringVar2
	.word	sTVShowState
.L1803:
	ldrh	r0, [r5, #0xc]
	cmp	r0, #0xfe
	bls	.L1808	@cond_branch
	mov	r0, #0xc
	strb	r0, [r2]
	b	.L1782
.L1806:
	mov	r0, #0x1
	add	r1, r5, #0
	bl	sub_80EF40C
	bl	TVShowDone
	b	.L1782
.L1807:
	ldrb	r0, [r5, #0x2]
	cmp	r0, #0x1
	bne	.L1808	@cond_branch
	mov	r0, #0x8
	strb	r0, [r2]
	b	.L1782
.L1808:
	mov	r0, #0x9
	strb	r0, [r2]
	b	.L1782
.L1810:
	ldr	r0, .L1834
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldr	r4, .L1834+0x4
	ldrh	r0, [r5, #0x6]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r0, [r5, #0x2]
	cmp	r0, #0x1
	bne	.L1811	@cond_branch
.L1816:
	ldr	r1, .L1834+0x8
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L1782
.L1835:
	.align	2, 0
.L1834:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L1811:
	ldr	r1, .L1836
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L1782
.L1837:
	.align	2, 0
.L1836:
	.word	sTVShowState
.L1813:
	ldr	r0, .L1838
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L1782:
	ldr	r0, .L1838+0x4
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1839:
	.align	2, 0
.L1838:
	.word	gStringVar1
	.word	sTVTodaysSmartShopperTextGroup
.Lfe173:
	.size	 DoTVShowTodaysSmartShopper,.Lfe173-DoTVShowTodaysSmartShopper
	.align	2, 0
	.type	 DoTVShowTheNameRaterShow,function
	.thumb_func
DoTVShowTheNameRaterShow:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	ldr	r2, .L1874
	ldr	r0, .L1874+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1874+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L1874+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1874+0x10
	ldrb	r6, [r0]
	add	r2, r0, #0
	cmp	r6, #0x12
	bls	.LCB15599
	b	.L1841	@long jump
.LCB15599:
	lsl	r0, r6, #0x2
	ldr	r1, .L1874+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1875:
	.align	2, 0
.L1874:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L1871
	.align	2, 0
	.align	2, 0
.L1871:
	.word	.L1842
	.word	.L1849
	.word	.L1855
	.word	.L1849
	.word	.L1849
	.word	.L1849
	.word	.L1849
	.word	.L1849
	.word	.L1849
	.word	.L1863
	.word	.L1863
	.word	.L1863
	.word	.L1869
	.word	.L1864
	.word	.L1865
	.word	.L1866
	.word	.L1867
	.word	.L1868
	.word	.L1870
.L1842:
	ldr	r0, .L1876
	add	r1, r5, #0
	add	r1, r1, #0xf
	ldrb	r2, [r5, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1876+0x4
	ldrh	r2, [r5, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1876+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1876+0xc
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x1f]
	bl	TVShowConvertInternationalString
	ldr	r4, .L1876+0x10
	add	r0, r5, #0
	bl	TV_GetNicknameSumMod8
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L1841
.L1877:
	.align	2, 0
.L1876:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L1849:
	ldrb	r0, [r5, #0x1a]
	cmp	r0, #0
	bne	.L1850	@cond_branch
	mov	r0, #0x9
	strb	r0, [r2]
	b	.L1841
.L1850:
	cmp	r0, #0x1
	bne	.L1852	@cond_branch
	mov	r0, #0xa
	strb	r0, [r2]
	b	.L1841
.L1852:
	cmp	r0, #0x2
	beq	.LCB15688
	b	.L1841	@long jump
.LCB15688:
	mov	r0, #0xb
	strb	r0, [r2]
	b	.L1841
.L1855:
	ldr	r0, .L1878
	add	r1, r5, #0
	add	r1, r1, #0xf
	ldrb	r2, [r5, #0x1e]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r5, #0x1a]
	cmp	r0, #0
	bne	.L1856	@cond_branch
	ldr	r1, .L1878+0x4
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L1841
.L1879:
	.align	2, 0
.L1878:
	.word	gStringVar1
	.word	sTVShowState
.L1856:
	cmp	r0, #0x1
	bne	.L1858	@cond_branch
	ldr	r1, .L1880
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L1841
.L1881:
	.align	2, 0
.L1880:
	.word	sTVShowState
.L1858:
	cmp	r0, #0x2
	beq	.LCB15739
	b	.L1841	@long jump
.LCB15739:
	ldr	r1, .L1882
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L1841
.L1883:
	.align	2, 0
.L1882:
	.word	sTVShowState
.L1863:
	ldr	r0, .L1884
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x1f]
	bl	TVShowConvertInternationalString
	mov	r4, #0x0
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	TV_GetNicknameSubstring
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	TV_GetNicknameSubstring
	ldr	r1, .L1884+0x4
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L1841
.L1885:
	.align	2, 0
.L1884:
	.word	gStringVar1
	.word	sTVShowState
.L1864:
	ldr	r0, .L1886
	add	r1, r5, #0
	add	r1, r1, #0xf
	ldrb	r2, [r5, #0x1e]
	bl	TVShowConvertInternationalString
	mov	r4, #0x0
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x0
	bl	TV_GetNicknameSubstring
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x1
	bl	TV_GetNicknameSubstring
	ldr	r1, .L1886+0x4
	mov	r0, #0xe
	strb	r0, [r1]
	b	.L1841
.L1887:
	.align	2, 0
.L1886:
	.word	gStringVar1
	.word	sTVShowState
.L1865:
	mov	r4, #0x0
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x1
	bl	TV_GetNicknameSubstring
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x0
	b	.L1873
.L1866:
	mov	r0, #0x0
	str	r0, [sp]
	str	r5, [sp, #0x4]
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x1
	bl	TV_GetNicknameSubstring
	ldr	r0, .L1888
	ldrh	r2, [r5, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1888+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrh	r0, [r5, #0x2]
	str	r0, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x2
	bl	TV_GetNicknameSubstring
	ldr	r1, .L1888+0x8
	mov	r0, #0x10
	strb	r0, [r1]
	b	.L1841
.L1889:
	.align	2, 0
.L1888:
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L1867:
	ldrh	r0, [r5, #0x2]
	str	r0, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	TV_GetNicknameSubstring
	mov	r0, #0x0
	str	r0, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x1
	bl	TV_GetNicknameSubstring
	ldr	r1, .L1890
	mov	r0, #0x11
	strb	r0, [r1]
	b	.L1841
.L1891:
	.align	2, 0
.L1890:
	.word	sTVShowState
.L1868:
	mov	r0, #0x0
	str	r0, [sp]
	str	r5, [sp, #0x4]
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x1
	bl	TV_GetNicknameSubstring
	ldr	r0, .L1892
	ldrh	r2, [r5, #0x1c]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1892+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrh	r0, [r5, #0x1c]
	str	r0, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x2
.L1873:
	bl	TV_GetNicknameSubstring
	ldr	r1, .L1892+0x8
	mov	r0, #0x12
	strb	r0, [r1]
	b	.L1841
.L1893:
	.align	2, 0
.L1892:
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L1869:
	mov	r6, #0x12
	strb	r6, [r2]
.L1870:
	ldr	r0, .L1894
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x1f]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L1841:
	ldr	r0, .L1894+0x4
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1895:
	.align	2, 0
.L1894:
	.word	gStringVar1
	.word	sTVNameRaterTextGroup
.Lfe174:
	.size	 DoTVShowTheNameRaterShow,.Lfe174-DoTVShowTheNameRaterShow
	.align	2, 0
	.type	 DoTVShowPokemonTodaySuccessfulCapture,function
	.thumb_func
DoTVShowPokemonTodaySuccessfulCapture:
	push	{r4, r5, r6, lr}
	ldr	r2, .L1918
	ldr	r0, .L1918+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1918+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L1918+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1918+0x10
	ldrb	r6, [r0]
	add	r2, r0, #0
	cmp	r6, #0xb
	bls	.LCB16006
	b	.L1897	@long jump
.LCB16006:
	lsl	r0, r6, #0x2
	ldr	r1, .L1918+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1919:
	.align	2, 0
.L1918:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L1914
	.align	2, 0
	.align	2, 0
.L1914:
	.word	.L1898
	.word	.L1901
	.word	.L1902
	.word	.L1905
	.word	.L1906
	.word	.L1907
	.word	.L1908
	.word	.L1910
	.word	.L1910
	.word	.L1912
	.word	.L1912
	.word	.L1913
.L1898:
	ldr	r0, .L1920
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1920+0x4
	ldrh	r2, [r5, #0x10]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1920+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1920+0xc
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r5, #0xf]
	cmp	r0, #0x1
	bne	.L1899	@cond_branch
	ldr	r1, .L1920+0x10
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L1897
.L1921:
	.align	2, 0
.L1920:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L1899:
	ldr	r1, .L1922
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1897
.L1923:
	.align	2, 0
.L1922:
	.word	sTVShowState
.L1901:
	mov	r0, #0x2
	strb	r0, [r2]
	b	.L1897
.L1902:
	ldr	r4, .L1924
	ldrb	r0, [r5, #0xf]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r1, [r5, #0x12]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldrb	r0, [r5, #0x12]
	cmp	r0, #0x3
	bhi	.L1903	@cond_branch
	ldr	r1, .L1924+0x4
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L1897
.L1925:
	.align	2, 0
.L1924:
	.word	gStringVar2
	.word	sTVShowState
.L1903:
	ldr	r1, .L1926
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L1897
.L1927:
	.align	2, 0
.L1926:
	.word	sTVShowState
.L1905:
	ldr	r0, .L1928
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1928+0x4
	ldrh	r2, [r5, #0x10]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1928+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1928+0xc
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	b	.L1916
.L1929:
	.align	2, 0
.L1928:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L1906:
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L1897
.L1907:
	ldr	r0, .L1930
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1930+0x4
	ldrh	r2, [r5, #0x10]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1930+0x8
	add	r1, r1, r2
	bl	StringCopy
.L1916:
	ldr	r1, .L1930+0xc
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L1897
.L1931:
	.align	2, 0
.L1930:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L1908:
	ldr	r0, .L1932
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1932+0x4
	ldrh	r2, [r5, #0x10]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1932+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1932+0xc
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldr	r4, .L1932+0x10
	bl	Random
	ldrb	r2, [r4]
	add	r2, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	and	r0, r0, r1
	add	r0, r0, r2
	strb	r0, [r4]
	b	.L1897
.L1933:
	.align	2, 0
.L1932:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L1910:
	ldr	r0, .L1934
	ldrh	r1, [r5, #0x10]
	mov	r4, #0xb
	mul	r1, r1, r4
	ldr	r2, .L1934+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1934+0x8
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r5, #0x10]
	mov	r0, #0x2
	bl	TV_GetSomeOtherSpeciesAlreadySeenByPlayer_AndPrintName
	b	.L1917
.L1935:
	.align	2, 0
.L1934:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
.L1912:
	ldr	r0, .L1936
	ldrh	r1, [r5, #0x10]
	mov	r4, #0xb
	mul	r1, r1, r4
	ldr	r2, .L1936+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1936+0x8
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
.L1917:
	ldr	r0, .L1936+0xc
	strb	r4, [r0]
	b	.L1897
.L1937:
	.align	2, 0
.L1936:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	sTVShowState
.L1913:
	bl	TVShowDone
.L1897:
	ldr	r0, .L1938
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1939:
	.align	2, 0
.L1938:
	.word	sTVPokemonTodaySuccessfulTextGroup
.Lfe175:
	.size	 DoTVShowPokemonTodaySuccessfulCapture,.Lfe175-DoTVShowPokemonTodaySuccessfulCapture
	.align	2, 0
	.type	 DoTVShowPokemonTodayFailedCapture,function
	.thumb_func
DoTVShowPokemonTodayFailedCapture:
	push	{r4, r5, lr}
	ldr	r2, .L1955
	ldr	r0, .L1955+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1955+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L1955+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1955+0x10
	ldrb	r5, [r0]
	cmp	r5, #0x6
	bls	.LCB16367
	b	.L1941	@long jump
.LCB16367:
	lsl	r0, r5, #0x2
	ldr	r1, .L1955+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1956:
	.align	2, 0
.L1955:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L1953
	.align	2, 0
	.align	2, 0
.L1953:
	.word	.L1942
	.word	.L1943
	.word	.L1947
	.word	.L1947
	.word	.L1951
	.word	.L1951
	.word	.L1952
.L1942:
	ldr	r0, .L1957
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1957+0x4
	ldrh	r2, [r4, #0xc]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1957+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L1957+0xc
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1941
.L1958:
	.align	2, 0
.L1957:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L1943:
	ldr	r0, .L1959
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1959+0x4
	ldrb	r1, [r4, #0x12]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r0, .L1959+0x8
	ldrh	r2, [r4, #0xe]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1959+0xc
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r0, [r4, #0x11]
	cmp	r0, #0x1
	bne	.L1944	@cond_branch
	ldr	r1, .L1959+0x10
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L1941
.L1960:
	.align	2, 0
.L1959:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gSpeciesNames
	.word	sTVShowState
.L1944:
	ldr	r1, .L1961
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L1941
.L1962:
	.align	2, 0
.L1961:
	.word	sTVShowState
.L1947:
	ldr	r0, .L1963
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x2]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x10]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1948	@cond_branch
	ldr	r1, .L1963+0x4
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L1941
.L1964:
	.align	2, 0
.L1963:
	.word	gStringVar1
	.word	sTVShowState
.L1948:
	ldr	r1, .L1965
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L1941
.L1966:
	.align	2, 0
.L1965:
	.word	sTVShowState
.L1951:
	ldr	r0, .L1967
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r1, .L1967+0x4
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L1941
.L1968:
	.align	2, 0
.L1967:
	.word	gStringVar1
	.word	sTVShowState
.L1952:
	bl	TVShowDone
.L1941:
	ldr	r0, .L1969
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1970:
	.align	2, 0
.L1969:
	.word	sTVPokemonTodayFailedTextGroup
.Lfe176:
	.size	 DoTVShowPokemonTodayFailedCapture,.Lfe176-DoTVShowPokemonTodayFailedCapture
	.align	2, 0
	.type	 DoTVShowPokemonFanClubLetter,function
	.thumb_func
DoTVShowPokemonFanClubLetter:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L1987
	ldr	r0, .L1987+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1987+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L1987+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1987+0x10
	ldrb	r7, [r0]
	add	r6, r0, #0
	cmp	r7, #0x33
	bls	.LCB16597
	b	.L1972	@long jump
.LCB16597:
	lsl	r0, r7, #0x2
	ldr	r1, .L1987+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1988:
	.align	2, 0
.L1987:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L1985
	.align	2, 0
	.align	2, 0
.L1985:
	.word	.L1973
	.word	.L1974
	.word	.L1977
	.word	.L1978
	.word	.L1981
	.word	.L1981
	.word	.L1981
	.word	.L1982
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1972
	.word	.L1983
	.word	.L1984
.L1973:
	ldr	r0, .L1989
	add	r1, r5, #0
	add	r1, r1, #0x10
	ldrb	r2, [r5, #0x18]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1989+0x4
	ldrh	r2, [r5, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1989+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L1989+0xc
	mov	r0, #0x32
	strb	r0, [r1]
	b	.L1972
.L1990:
	.align	2, 0
.L1989:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L1974:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	and	r0, r0, r1
	add	r2, r0, #0x1
	cmp	r2, #0x1
	bne	.L1975	@cond_branch
	ldr	r1, .L1991
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L1972
.L1992:
	.align	2, 0
.L1991:
	.word	sTVShowState
.L1975:
	ldr	r1, .L1993
	add	r0, r2, #0x2
	strb	r0, [r1]
	b	.L1972
.L1994:
	.align	2, 0
.L1993:
	.word	sTVShowState
.L1977:
	mov	r0, #0x33
	strb	r0, [r6]
	b	.L1972
.L1978:
	bl	Random
	ldrb	r4, [r6]
	add	r4, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	add	r0, r0, r4
	strb	r0, [r6]
	b	.L1972
.L1981:
	add	r0, r5, #0
	bl	TV_FanClubLetter_RandomWordToStringVar3
	ldr	r1, .L1995
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L1972
.L1996:
	.align	2, 0
.L1995:
	.word	sTVShowState
.L1982:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1f
	bl	__umodsi3
	add	r0, r0, #0x46
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	mov	r0, #0x2
	add	r1, r2, #0
	bl	TV_PrintIntToStringVar
	bl	TVShowDone
	b	.L1972
.L1983:
	ldr	r4, .L1997
	add	r1, r5, #0x4
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertEasyChatWordsToString
	add	r0, r4, #0
	bl	ShowFieldMessage
	ldr	r1, .L1997+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1971
.L1998:
	.align	2, 0
.L1997:
	.word	gStringVar4
	.word	sTVShowState
.L1984:
	ldr	r4, .L1999
	add	r1, r5, #0x4
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertEasyChatWordsToString
	add	r0, r4, #0
	bl	ShowFieldMessage
	ldr	r1, .L1999+0x4
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L1971
.L2000:
	.align	2, 0
.L1999:
	.word	gStringVar4
	.word	sTVShowState
.L1972:
	ldr	r0, .L2001
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
.L1971:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2002:
	.align	2, 0
.L2001:
	.word	sTVFanClubTextGroup
.Lfe177:
	.size	 DoTVShowPokemonFanClubLetter,.Lfe177-DoTVShowPokemonFanClubLetter
	.align	2, 0
	.type	 DoTVShowRecentHappenings,function
	.thumb_func
DoTVShowRecentHappenings:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L2014
	ldr	r0, .L2014+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2014+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L2014+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2014+0x10
	ldrb	r6, [r0]
	add	r7, r0, #0
	cmp	r6, #0x32
	bls	.LCB16829
	b	.L2004	@long jump
.LCB16829:
	lsl	r0, r6, #0x2
	ldr	r1, .L2014+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2015:
	.align	2, 0
.L2014:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2012
	.align	2, 0
	.align	2, 0
.L2012:
	.word	.L2005
	.word	.L2006
	.word	.L2009
	.word	.L2009
	.word	.L2009
	.word	.L2010
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2004
	.word	.L2011
.L2005:
	ldr	r0, .L2016
	add	r1, r5, #0
	add	r1, r1, #0x10
	ldrb	r2, [r5, #0x18]
	bl	TVShowConvertInternationalString
	add	r0, r5, #0
	bl	TV_FanClubLetter_RandomWordToStringVar3
	ldr	r1, .L2016+0x4
	mov	r0, #0x32
	strb	r0, [r1]
	b	.L2004
.L2017:
	.align	2, 0
.L2016:
	.word	gStringVar1
	.word	sTVShowState
.L2006:
	bl	Random
	ldrb	r4, [r7]
	add	r4, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	add	r0, r0, r4
	strb	r0, [r7]
	b	.L2004
.L2009:
	mov	r0, #0x5
	strb	r0, [r7]
	b	.L2004
.L2010:
	bl	TVShowDone
	b	.L2004
.L2011:
	ldr	r4, .L2018
	add	r1, r5, #0x4
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertEasyChatWordsToString
	add	r0, r4, #0
	bl	ShowFieldMessage
	ldr	r1, .L2018+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2003
.L2019:
	.align	2, 0
.L2018:
	.word	gStringVar4
	.word	sTVShowState
.L2004:
	ldr	r0, .L2020
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
.L2003:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2021:
	.align	2, 0
.L2020:
	.word	sTVRecentHappeninssTextGroup
.Lfe178:
	.size	 DoTVShowRecentHappenings,.Lfe178-DoTVShowRecentHappenings
	.align	2, 0
	.type	 DoTVShowPokemonFanClubOpinions,function
	.thumb_func
DoTVShowPokemonFanClubOpinions:
	push	{r4, r5, r6, lr}
	ldr	r2, .L2032
	ldr	r0, .L2032+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2032+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2032+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r6, .L2032+0x10
	ldrb	r5, [r6]
	cmp	r5, #0x3
	bgt	.L2031	@cond_branch
	cmp	r5, #0x1
	bge	.L2027	@cond_branch
	cmp	r5, #0
	beq	.L2024	@cond_branch
	b	.L2023
.L2033:
	.align	2, 0
.L2032:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
.L2031:
	cmp	r5, #0x4
	beq	.L2028	@cond_branch
	b	.L2023
.L2024:
	ldr	r0, .L2034
	add	r1, r4, #0x5
	ldrb	r2, [r4, #0xd]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2034+0x4
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2034+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2034+0xc
	add	r1, r4, #0
	add	r1, r1, #0x10
	ldrb	r2, [r4, #0xe]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x4]
	lsr	r0, r0, #0x4
	add	r0, r0, #0x1
	strb	r0, [r6]
	b	.L2023
.L2035:
	.align	2, 0
.L2034:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L2027:
	ldr	r0, .L2036
	add	r1, r4, #0x5
	ldrb	r2, [r4, #0xd]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2036+0x4
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2036+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2036+0xc
	ldrh	r1, [r4, #0x1c]
	bl	CopyEasyChatWord
	mov	r0, #0x4
	strb	r0, [r6]
	b	.L2023
.L2037:
	.align	2, 0
.L2036:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L2028:
	ldr	r0, .L2038
	add	r1, r4, #0x5
	ldrb	r2, [r4, #0xd]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2038+0x4
	ldrh	r1, [r4, #0x1e]
	bl	CopyEasyChatWord
	bl	TVShowDone
.L2023:
	ldr	r0, .L2038+0x8
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2039:
	.align	2, 0
.L2038:
	.word	gStringVar1
	.word	gStringVar3
	.word	sTVFanClubOpinionsTextGroup
.Lfe179:
	.size	 DoTVShowPokemonFanClubOpinions,.Lfe179-DoTVShowPokemonFanClubOpinions
	.align	2, 0
	.type	 DoTVShowDummiedOut,function
	.thumb_func
DoTVShowDummiedOut:
	bx	lr
.Lfe180:
	.size	 DoTVShowDummiedOut,.Lfe180-DoTVShowDummiedOut
	.align	2, 0
	.type	 DoTVShowPokemonNewsMassOutbreak,function
	.thumb_func
DoTVShowPokemonNewsMassOutbreak:
	push	{r4, lr}
	ldr	r2, .L2042
	ldr	r0, .L2042+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2042+0x8
	add	r0, r0, r1
	ldr	r4, [r2]
	add	r4, r4, r0
	ldr	r0, .L2042+0xc
	ldrb	r1, [r4, #0x10]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r0, .L2042+0x10
	ldrh	r2, [r4, #0xc]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2042+0x14
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
	bl	StartMassOutbreak
	ldr	r1, .L2042+0x18
	ldr	r0, .L2042+0x1c
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	ShowFieldMessage
	pop	{r4}
	pop	{r0}
	bx	r0
.L2043:
	.align	2, 0
.L2042:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVMassOutbreakTextGroup
	.word	sTVShowState
.Lfe181:
	.size	 DoTVShowPokemonNewsMassOutbreak,.Lfe181-DoTVShowPokemonNewsMassOutbreak
	.align	2, 0
	.type	 DoTVShowPokemonContestLiveUpdates,function
	.thumb_func
DoTVShowPokemonContestLiveUpdates:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L2188
	ldr	r0, .L2188+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2188+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r6, r1, r0
	ldr	r1, .L2188+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2188+0x10
	ldrb	r7, [r0]
	add	r2, r0, #0
	cmp	r7, #0x20
	bls	.LCB17192
	b	.L2045	@long jump
.LCB17192:
	lsl	r0, r7, #0x2
	ldr	r1, .L2188+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2189:
	.align	2, 0
.L2188:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2179
	.align	2, 0
	.align	2, 0
.L2179:
	.word	.L2046
	.word	.L2053
	.word	.L2068
	.word	.L2083
	.word	.L2098
	.word	.L2121
	.word	.L2122
	.word	.L2123
	.word	.L2124
	.word	.L2133
	.word	.L2134
	.word	.L2135
	.word	.L2136
	.word	.L2137
	.word	.L2138
	.word	.L2147
	.word	.L2148
	.word	.L2149
	.word	.L2150
	.word	.L2151
	.word	.L2152
	.word	.L2153
	.word	.L2154
	.word	.L2155
	.word	.L2170
	.word	.L2171
	.word	.L2177
	.word	.L2177
	.word	.L2172
	.word	.L2173
	.word	.L2177
	.word	.L2177
	.word	.L2178
.L2046:
	ldr	r0, .L2190
	ldrb	r1, [r6, #0x1c]
	bl	BufferContestName
	ldr	r0, .L2190+0x4
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2190+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2190+0xc
	add	r1, r6, #0
	add	r1, r1, #0x14
	ldrb	r2, [r6, #0x1d]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r6, #0xd]
	ldrb	r1, [r6, #0xe]
	cmp	r0, r1
	bne	.L2047	@cond_branch
	cmp	r0, #0
	bne	.L2048	@cond_branch
	ldr	r1, .L2190+0x10
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2045
.L2191:
	.align	2, 0
.L2190:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2048:
	ldr	r1, .L2192
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2045
.L2193:
	.align	2, 0
.L2192:
	.word	sTVShowState
.L2047:
	cmp	r0, r1
	bls	.L2051	@cond_branch
	ldr	r1, .L2194
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2045
.L2195:
	.align	2, 0
.L2194:
	.word	sTVShowState
.L2051:
	ldr	r1, .L2196
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2045
.L2197:
	.align	2, 0
.L2196:
	.word	sTVShowState
.L2053:
	ldr	r0, .L2198
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2198+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r1, [r6, #0xf]
	cmp	r1, #0x8
	bne	.LCB17319
	b	.L2111	@long jump
.LCB17319:
	cmp	r1, #0x8
	bgt	.L2065	@cond_branch
.L2186:
	cmp	r1, #0x2
	bne	.LCB17324
	b	.L2109	@long jump
.LCB17324:
	cmp	r1, #0x2
	bgt	.LCB17326
	b	.L2184	@long jump
.LCB17326:
	b	.L2119
.L2199:
	.align	2, 0
.L2198:
	.word	gStringVar2
	.word	gSpeciesNames
.L2065:
	cmp	r1, #0x20
	bne	.LCB17338
	b	.L2113	@long jump
.LCB17338:
	cmp	r1, #0x20
	bgt	.LCB17340
	b	.L2185	@long jump
.LCB17340:
	cmp	r1, #0x40
	bne	.LCB17342
	b	.L2114	@long jump
.LCB17342:
	cmp	r1, #0x80
	beq	.LCB17344
	b	.L2045	@long jump
.LCB17344:
	b	.L2115
.L2068:
	ldr	r0, .L2200
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2200+0x4
	add	r1, r1, r2
	bl	StringCopy
.L2187:
	ldrb	r1, [r6, #0xf]
	cmp	r1, #0x8
	bne	.LCB17363
	b	.L2111	@long jump
.LCB17363:
	cmp	r1, #0x8
	ble	.L2186	@cond_branch
	b	.L2065
.L2201:
	.align	2, 0
.L2200:
	.word	gStringVar2
	.word	gSpeciesNames
.L2083:
	ldr	r0, .L2202
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2202+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2202+0x8
	add	r1, r6, #0
	add	r1, r1, #0x14
	ldrb	r2, [r6, #0x1d]
	bl	TVShowConvertInternationalString
	b	.L2187
.L2203:
	.align	2, 0
.L2202:
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L2098:
	ldrb	r0, [r6, #0x1c]
	cmp	r0, #0x4
	bhi	.L2099	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L2204
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2205:
	.align	2, 0
.L2204:
	.word	.L2105
	.align	2, 0
	.align	2, 0
.L2105:
	.word	.L2100
	.word	.L2101
	.word	.L2102
	.word	.L2103
	.word	.L2104
.L2100:
	ldr	r0, .L2206
	ldr	r1, .L2206+0x4
	bl	StringCopy
	b	.L2099
.L2207:
	.align	2, 0
.L2206:
	.word	gStringVar1
	.word	gText_Cool
.L2101:
	ldr	r0, .L2208
	ldr	r1, .L2208+0x4
	bl	StringCopy
	b	.L2099
.L2209:
	.align	2, 0
.L2208:
	.word	gStringVar1
	.word	gText_Beauty
.L2102:
	ldr	r0, .L2210
	ldr	r1, .L2210+0x4
	bl	StringCopy
	b	.L2099
.L2211:
	.align	2, 0
.L2210:
	.word	gStringVar1
	.word	gText_Cute
.L2103:
	ldr	r0, .L2212
	ldr	r1, .L2212+0x4
	bl	StringCopy
	b	.L2099
.L2213:
	.align	2, 0
.L2212:
	.word	gStringVar1
	.word	gText_Smart
.L2104:
	ldr	r0, .L2214
	ldr	r1, .L2214+0x4
	bl	StringCopy
.L2099:
	ldr	r0, .L2214+0x8
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2214+0xc
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r1, [r6, #0xf]
	cmp	r1, #0x8
	beq	.L2111	@cond_branch
	cmp	r1, #0x8
	bgt	.L2118	@cond_branch
	cmp	r1, #0x2
	beq	.L2109	@cond_branch
	cmp	r1, #0x2
	bgt	.L2119	@cond_branch
.L2184:
	cmp	r1, #0x1
	beq	.L2108	@cond_branch
	b	.L2045
.L2215:
	.align	2, 0
.L2214:
	.word	gStringVar1
	.word	gText_Tough
	.word	gStringVar2
	.word	gSpeciesNames
.L2119:
	cmp	r1, #0x4
	beq	.L2110	@cond_branch
	b	.L2045
.L2118:
	cmp	r1, #0x20
	beq	.L2113	@cond_branch
	cmp	r1, #0x20
	bgt	.L2120	@cond_branch
.L2185:
	cmp	r1, #0x10
	beq	.L2112	@cond_branch
	b	.L2045
.L2120:
	cmp	r1, #0x40
	beq	.L2114	@cond_branch
	cmp	r1, #0x80
	beq	.L2115	@cond_branch
	b	.L2045
.L2108:
	ldr	r1, .L2216
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L2045
.L2217:
	.align	2, 0
.L2216:
	.word	sTVShowState
.L2109:
	ldr	r1, .L2218
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2045
.L2219:
	.align	2, 0
.L2218:
	.word	sTVShowState
.L2110:
	ldr	r1, .L2220
	mov	r0, #0xe
	strb	r0, [r1]
	b	.L2045
.L2221:
	.align	2, 0
.L2220:
	.word	sTVShowState
.L2111:
	ldr	r1, .L2222
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L2045
.L2223:
	.align	2, 0
.L2222:
	.word	sTVShowState
.L2112:
	ldr	r1, .L2224
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2045
.L2225:
	.align	2, 0
.L2224:
	.word	sTVShowState
.L2113:
	ldr	r1, .L2226
	mov	r0, #0x14
	strb	r0, [r1]
	b	.L2045
.L2227:
	.align	2, 0
.L2226:
	.word	sTVShowState
.L2114:
	ldr	r1, .L2228
	mov	r0, #0x15
	strb	r0, [r1]
	b	.L2045
.L2229:
	.align	2, 0
.L2228:
	.word	sTVShowState
.L2115:
	ldr	r1, .L2230
	mov	r0, #0x16
	strb	r0, [r1]
	b	.L2045
.L2231:
	.align	2, 0
.L2230:
	.word	sTVShowState
.L2121:
	ldr	r0, .L2232
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2232+0x4
	b	.L2181
.L2233:
	.align	2, 0
.L2232:
	.word	gStringVar2
	.word	gSpeciesNames
.L2122:
	ldr	r0, .L2234
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2234+0x4
	b	.L2181
.L2235:
	.align	2, 0
.L2234:
	.word	gStringVar2
	.word	gSpeciesNames
.L2123:
	ldr	r0, .L2236
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2236+0x4
	b	.L2181
.L2237:
	.align	2, 0
.L2236:
	.word	gStringVar2
	.word	gSpeciesNames
.L2124:
	ldr	r0, .L2238
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2238+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r0, [r6, #0x1c]
	cmp	r0, #0x4
	bls	.LCB17715
	b	.L2045	@long jump
.LCB17715:
	lsl	r0, r0, #0x2
	ldr	r1, .L2238+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2239:
	.align	2, 0
.L2238:
	.word	gStringVar2
	.word	gSpeciesNames
	.word	.L2131
	.align	2, 0
	.align	2, 0
.L2131:
	.word	.L2126
	.word	.L2127
	.word	.L2128
	.word	.L2129
	.word	.L2130
.L2126:
	ldr	r1, .L2240
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L2045
.L2241:
	.align	2, 0
.L2240:
	.word	sTVShowState
.L2127:
	ldr	r1, .L2242
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L2045
.L2243:
	.align	2, 0
.L2242:
	.word	sTVShowState
.L2128:
	ldr	r1, .L2244
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L2045
.L2245:
	.align	2, 0
.L2244:
	.word	sTVShowState
.L2129:
	ldr	r1, .L2246
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L2045
.L2247:
	.align	2, 0
.L2246:
	.word	sTVShowState
.L2130:
	ldr	r1, .L2248
	mov	r0, #0xd
	strb	r0, [r1]
	b	.L2045
.L2249:
	.align	2, 0
.L2248:
	.word	sTVShowState
.L2133:
	ldr	r0, .L2250
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2250+0x4
	b	.L2181
.L2251:
	.align	2, 0
.L2250:
	.word	gStringVar2
	.word	gSpeciesNames
.L2134:
	ldr	r0, .L2252
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2252+0x4
	b	.L2181
.L2253:
	.align	2, 0
.L2252:
	.word	gStringVar2
	.word	gSpeciesNames
.L2135:
	ldr	r0, .L2254
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2254+0x4
	b	.L2181
.L2255:
	.align	2, 0
.L2254:
	.word	gStringVar2
	.word	gSpeciesNames
.L2136:
	ldr	r0, .L2256
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2256+0x4
	b	.L2181
.L2257:
	.align	2, 0
.L2256:
	.word	gStringVar2
	.word	gSpeciesNames
.L2137:
	ldr	r0, .L2258
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2258+0x4
	b	.L2181
.L2259:
	.align	2, 0
.L2258:
	.word	gStringVar2
	.word	gSpeciesNames
.L2138:
	ldr	r0, .L2260
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2260+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r0, [r6, #0x1c]
	cmp	r0, #0x4
	bls	.LCB17893
	b	.L2045	@long jump
.LCB17893:
	lsl	r0, r0, #0x2
	ldr	r1, .L2260+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2261:
	.align	2, 0
.L2260:
	.word	gStringVar2
	.word	gSpeciesNames
	.word	.L2145
	.align	2, 0
	.align	2, 0
.L2145:
	.word	.L2140
	.word	.L2141
	.word	.L2142
	.word	.L2143
	.word	.L2144
.L2140:
	ldr	r1, .L2262
	mov	r0, #0xf
	strb	r0, [r1]
	b	.L2045
.L2263:
	.align	2, 0
.L2262:
	.word	sTVShowState
.L2141:
	ldr	r1, .L2264
	mov	r0, #0x10
	strb	r0, [r1]
	b	.L2045
.L2265:
	.align	2, 0
.L2264:
	.word	sTVShowState
.L2142:
	ldr	r1, .L2266
	mov	r0, #0x11
	strb	r0, [r1]
	b	.L2045
.L2267:
	.align	2, 0
.L2266:
	.word	sTVShowState
.L2143:
	ldr	r1, .L2268
	mov	r0, #0x12
	strb	r0, [r1]
	b	.L2045
.L2269:
	.align	2, 0
.L2268:
	.word	sTVShowState
.L2144:
	ldr	r1, .L2270
	mov	r0, #0x13
	strb	r0, [r1]
	b	.L2045
.L2271:
	.align	2, 0
.L2270:
	.word	sTVShowState
.L2147:
	ldr	r0, .L2272
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2272+0x4
	b	.L2181
.L2273:
	.align	2, 0
.L2272:
	.word	gStringVar2
	.word	gSpeciesNames
.L2148:
	ldr	r0, .L2274
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2274+0x4
	b	.L2181
.L2275:
	.align	2, 0
.L2274:
	.word	gStringVar2
	.word	gSpeciesNames
.L2149:
	ldr	r0, .L2276
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2276+0x4
	b	.L2181
.L2277:
	.align	2, 0
.L2276:
	.word	gStringVar2
	.word	gSpeciesNames
.L2150:
	ldr	r0, .L2278
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2278+0x4
	b	.L2181
.L2279:
	.align	2, 0
.L2278:
	.word	gStringVar2
	.word	gSpeciesNames
.L2151:
	ldr	r0, .L2280
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2280+0x4
	b	.L2181
.L2281:
	.align	2, 0
.L2280:
	.word	gStringVar2
	.word	gSpeciesNames
.L2152:
	ldr	r0, .L2282
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2282+0x4
	b	.L2181
.L2283:
	.align	2, 0
.L2282:
	.word	gStringVar2
	.word	gSpeciesNames
.L2153:
	ldr	r0, .L2284
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2284+0x4
	b	.L2181
.L2285:
	.align	2, 0
.L2284:
	.word	gStringVar2
	.word	gSpeciesNames
.L2154:
	ldr	r0, .L2286
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2286+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2286+0x8
	ldrh	r2, [r6, #0x10]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L2286+0xc
.L2181:
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L2286+0x10
	mov	r0, #0x17
	strb	r0, [r1]
	b	.L2045
.L2287:
	.align	2, 0
.L2286:
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	gMoveNames
	.word	sTVShowState
.L2155:
	ldr	r0, .L2288
	ldrh	r1, [r6, #0x12]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L2288+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2288+0x8
	add	r1, r6, #0x4
	ldrb	r2, [r6, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2288+0xc
	ldrh	r1, [r6, #0x2]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldrb	r0, [r6, #0xc]
	cmp	r0, #0x8
	beq	.L2160	@cond_branch
	cmp	r0, #0x8
	bgt	.L2167	@cond_branch
	cmp	r0, #0x2
	beq	.L2158	@cond_branch
	cmp	r0, #0x2
	bgt	.L2168	@cond_branch
	cmp	r0, #0x1
	beq	.L2157	@cond_branch
	b	.L2045
.L2289:
	.align	2, 0
.L2288:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gStringVar3
.L2168:
	cmp	r0, #0x4
	beq	.L2159	@cond_branch
	b	.L2045
.L2167:
	cmp	r0, #0x20
	beq	.L2162	@cond_branch
	cmp	r0, #0x20
	bgt	.L2169	@cond_branch
	cmp	r0, #0x10
	beq	.L2161	@cond_branch
	b	.L2045
.L2169:
	cmp	r0, #0x40
	beq	.L2163	@cond_branch
	cmp	r0, #0x80
	beq	.L2164	@cond_branch
	b	.L2045
.L2157:
	ldr	r1, .L2290
	mov	r0, #0x1f
	strb	r0, [r1]
	b	.L2045
.L2291:
	.align	2, 0
.L2290:
	.word	sTVShowState
.L2158:
	ldr	r1, .L2292
	mov	r0, #0x1e
	strb	r0, [r1]
	b	.L2045
.L2293:
	.align	2, 0
.L2292:
	.word	sTVShowState
.L2159:
	ldr	r1, .L2294
	mov	r0, #0x1d
	strb	r0, [r1]
	b	.L2045
.L2295:
	.align	2, 0
.L2294:
	.word	sTVShowState
.L2160:
	ldr	r1, .L2296
	mov	r0, #0x1c
	strb	r0, [r1]
	b	.L2045
.L2297:
	.align	2, 0
.L2296:
	.word	sTVShowState
.L2161:
	ldr	r1, .L2298
	mov	r0, #0x1b
	strb	r0, [r1]
	b	.L2045
.L2299:
	.align	2, 0
.L2298:
	.word	sTVShowState
.L2162:
	ldr	r1, .L2300
	mov	r0, #0x1a
	strb	r0, [r1]
	b	.L2045
.L2301:
	.align	2, 0
.L2300:
	.word	sTVShowState
.L2163:
	ldr	r1, .L2302
	mov	r0, #0x19
	strb	r0, [r1]
	b	.L2045
.L2303:
	.align	2, 0
.L2302:
	.word	sTVShowState
.L2164:
	ldr	r1, .L2304
	mov	r0, #0x18
	strb	r0, [r1]
	b	.L2045
.L2305:
	.align	2, 0
.L2304:
	.word	sTVShowState
.L2170:
	ldr	r0, .L2306
	ldrh	r2, [r6, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2306+0x4
	add	r1, r1, r2
	bl	StringCopy
	b	.L2182
.L2307:
	.align	2, 0
.L2306:
	.word	gStringVar1
	.word	gSpeciesNames
.L2171:
	ldr	r0, .L2308
	add	r1, r6, #0x4
	ldrb	r2, [r6, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2308+0x4
	ldrh	r2, [r6, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2308+0x8
	add	r1, r1, r2
	bl	StringCopy
	b	.L2182
.L2309:
	.align	2, 0
.L2308:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
.L2172:
	mov	r0, #0x20
	strb	r0, [r2]
	b	.L2045
.L2173:
	ldr	r0, .L2310
	add	r1, r6, #0
	add	r1, r1, #0x14
	ldrb	r2, [r6, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2310+0x4
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2310+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2310+0xc
	b	.L2183
.L2311:
	.align	2, 0
.L2310:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L2177:
	ldr	r0, .L2312
.L2183:
	add	r1, r6, #0x4
	ldrb	r2, [r6, #0x1e]
	bl	TVShowConvertInternationalString
.L2182:
	ldr	r1, .L2312+0x4
	mov	r0, #0x20
	strb	r0, [r1]
	b	.L2045
.L2313:
	.align	2, 0
.L2312:
	.word	gStringVar1
	.word	sTVShowState
.L2178:
	ldr	r0, .L2314
	add	r1, r6, #0
	add	r1, r1, #0x14
	ldrb	r2, [r6, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2314+0x4
	ldrh	r2, [r6, #0x12]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2314+0x8
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
.L2045:
	ldr	r0, .L2314+0xc
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2315:
	.align	2, 0
.L2314:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVContestLiveUpdatesTextGroup
.Lfe182:
	.size	 DoTVShowPokemonContestLiveUpdates,.Lfe182-DoTVShowPokemonContestLiveUpdates
	.align	2, 0
	.type	 DoTVShowPokemonBattleUpdate,function
	.thumb_func
DoTVShowPokemonBattleUpdate:
	push	{r4, r5, lr}
	ldr	r2, .L2336
	ldr	r0, .L2336+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2336+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2336+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2336+0x10
	ldrb	r5, [r0]
	add	r2, r0, #0
	cmp	r5, #0x7
	bls	.LCB18465
	b	.L2317	@long jump
.LCB18465:
	lsl	r0, r5, #0x2
	ldr	r1, .L2336+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2337:
	.align	2, 0
.L2336:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2334
	.align	2, 0
	.align	2, 0
.L2334:
	.word	.L2318
	.word	.L2325
	.word	.L2328
	.word	.L2329
	.word	.L2330
	.word	.L2331
	.word	.L2332
	.word	.L2333
.L2318:
	ldrb	r1, [r4, #0x18]
	cmp	r1, #0
	bge	.LCB18492
	b	.L2317	@long jump
.LCB18492:
	cmp	r1, #0x1
	ble	.L2321	@cond_branch
	cmp	r1, #0x2
	beq	.L2322	@cond_branch
	b	.L2317
.L2321:
	mov	r0, #0x1
	strb	r0, [r2]
	b	.L2317
.L2322:
	mov	r0, #0x5
	strb	r0, [r2]
	b	.L2317
.L2325:
	ldr	r0, .L2338
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x19]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2338+0x4
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1a]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x18]
	cmp	r0, #0
	bne	.L2326	@cond_branch
	ldr	r0, .L2338+0x8
	ldr	r1, .L2338+0xc
	bl	StringCopy
	b	.L2327
.L2339:
	.align	2, 0
.L2338:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gText_Single
.L2326:
	ldr	r0, .L2340
	ldr	r1, .L2340+0x4
	bl	StringCopy
.L2327:
	ldr	r1, .L2340+0x8
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2317
.L2341:
	.align	2, 0
.L2340:
	.word	gStringVar3
	.word	gText_Double
	.word	sTVShowState
.L2328:
	ldr	r0, .L2342
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x19]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2342+0x4
	ldrh	r2, [r4, #0x16]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2342+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2342+0xc
	ldrh	r2, [r4, #0x14]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L2342+0x10
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L2342+0x14
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2317
.L2343:
	.align	2, 0
.L2342:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	gMoveNames
	.word	sTVShowState
.L2329:
	ldr	r0, .L2344
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1a]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2344+0x4
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2344+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L2344+0xc
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2317
.L2345:
	.align	2, 0
.L2344:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVShowState
.L2330:
	ldr	r0, .L2346
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x19]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2346+0x4
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1a]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
	b	.L2317
.L2347:
	.align	2, 0
.L2346:
	.word	gStringVar1
	.word	gStringVar2
.L2331:
	ldr	r0, .L2348
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x19]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2348+0x4
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1a]
	bl	TVShowConvertInternationalString
	ldr	r1, .L2348+0x8
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2317
.L2349:
	.align	2, 0
.L2348:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L2332:
	ldr	r0, .L2350
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x19]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2350+0x4
	ldrh	r2, [r4, #0x16]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2350+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2350+0xc
	ldrh	r2, [r4, #0x14]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L2350+0x10
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L2350+0x14
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L2317
.L2351:
	.align	2, 0
.L2350:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	gMoveNames
	.word	sTVShowState
.L2333:
	ldr	r0, .L2352
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x19]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2352+0x4
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1a]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2352+0x8
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2352+0xc
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
.L2317:
	ldr	r0, .L2352+0x10
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2353:
	.align	2, 0
.L2352:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gSpeciesNames
	.word	sTVPokemonBattleUpdateTextGroup
.Lfe183:
	.size	 DoTVShowPokemonBattleUpdate,.Lfe183-DoTVShowPokemonBattleUpdate
	.align	2, 0
	.type	 DoTVShow3CheersForPokeblocks,function
	.thumb_func
DoTVShow3CheersForPokeblocks:
	push	{r4, r5, lr}
	ldr	r2, .L2391
	ldr	r0, .L2391+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2391+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2391+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2391+0x10
	ldrb	r5, [r0]
	cmp	r5, #0x5
	bls	.LCB18816
	b	.L2355	@long jump
.LCB18816:
	lsl	r0, r5, #0x2
	ldr	r1, .L2391+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2392:
	.align	2, 0
.L2391:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2388
	.align	2, 0
	.align	2, 0
.L2388:
	.word	.L2356
	.word	.L2359
	.word	.L2372
	.word	.L2373
	.word	.L2386
	.word	.L2387
.L2356:
	ldr	r0, .L2393
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x14]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0x14
	bls	.L2357	@cond_branch
	ldr	r1, .L2393+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2355
.L2394:
	.align	2, 0
.L2393:
	.word	gStringVar1
	.word	sTVShowState
.L2357:
	ldr	r1, .L2395
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2355
.L2396:
	.align	2, 0
.L2395:
	.word	sTVShowState
.L2359:
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	cmp	r0, #0x4
	bhi	.L2360	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L2397
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2398:
	.align	2, 0
.L2397:
	.word	.L2366
	.align	2, 0
	.align	2, 0
.L2366:
	.word	.L2361
	.word	.L2362
	.word	.L2363
	.word	.L2364
	.word	.L2365
.L2361:
	ldr	r0, .L2399
	ldr	r1, .L2399+0x4
	bl	StringCopy
	b	.L2360
.L2400:
	.align	2, 0
.L2399:
	.word	gStringVar1
	.word	gText_Spicy2
.L2362:
	ldr	r0, .L2401
	ldr	r1, .L2401+0x4
	bl	StringCopy
	b	.L2360
.L2402:
	.align	2, 0
.L2401:
	.word	gStringVar1
	.word	gText_Dry2
.L2363:
	ldr	r0, .L2403
	ldr	r1, .L2403+0x4
	bl	StringCopy
	b	.L2360
.L2404:
	.align	2, 0
.L2403:
	.word	gStringVar1
	.word	gText_Sweet2
.L2364:
	ldr	r0, .L2405
	ldr	r1, .L2405+0x4
	bl	StringCopy
	b	.L2360
.L2406:
	.align	2, 0
.L2405:
	.word	gStringVar1
	.word	gText_Bitter2
.L2365:
	ldr	r0, .L2407
	ldr	r1, .L2407+0x4
	bl	StringCopy
.L2360:
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0x18
	bls	.L2368	@cond_branch
	ldr	r0, .L2407+0x8
	ldr	r1, .L2407+0xc
	bl	StringCopy
	b	.L2369
.L2408:
	.align	2, 0
.L2407:
	.word	gStringVar1
	.word	gText_Sour2
	.word	gStringVar2
	.word	gText_Excellent
.L2368:
	cmp	r0, #0x16
	bls	.L2370	@cond_branch
	ldr	r0, .L2409
	ldr	r1, .L2409+0x4
	bl	StringCopy
	b	.L2369
.L2410:
	.align	2, 0
.L2409:
	.word	gStringVar2
	.word	gText_VeryGood
.L2370:
	ldr	r0, .L2411
	ldr	r1, .L2411+0x4
	bl	StringCopy
.L2369:
	ldr	r0, .L2411+0x8
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x14]
	bl	TVShowConvertInternationalString
	ldr	r1, .L2411+0xc
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2355
.L2412:
	.align	2, 0
.L2411:
	.word	gStringVar2
	.word	gText_Good
	.word	gStringVar3
	.word	sTVShowState
.L2372:
	ldr	r0, .L2413
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x15]
	b	.L2390
.L2414:
	.align	2, 0
.L2413:
	.word	gStringVar1
.L2373:
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	cmp	r0, #0x4
	bhi	.L2374	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L2415
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2416:
	.align	2, 0
.L2415:
	.word	.L2380
	.align	2, 0
	.align	2, 0
.L2380:
	.word	.L2375
	.word	.L2376
	.word	.L2377
	.word	.L2378
	.word	.L2379
.L2375:
	ldr	r0, .L2417
	ldr	r1, .L2417+0x4
	bl	StringCopy
	b	.L2374
.L2418:
	.align	2, 0
.L2417:
	.word	gStringVar1
	.word	gText_Spicy2
.L2376:
	ldr	r0, .L2419
	ldr	r1, .L2419+0x4
	bl	StringCopy
	b	.L2374
.L2420:
	.align	2, 0
.L2419:
	.word	gStringVar1
	.word	gText_Dry2
.L2377:
	ldr	r0, .L2421
	ldr	r1, .L2421+0x4
	bl	StringCopy
	b	.L2374
.L2422:
	.align	2, 0
.L2421:
	.word	gStringVar1
	.word	gText_Sweet2
.L2378:
	ldr	r0, .L2423
	ldr	r1, .L2423+0x4
	bl	StringCopy
	b	.L2374
.L2424:
	.align	2, 0
.L2423:
	.word	gStringVar1
	.word	gText_Bitter2
.L2379:
	ldr	r0, .L2425
	ldr	r1, .L2425+0x4
	bl	StringCopy
.L2374:
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0x10
	bls	.L2382	@cond_branch
	ldr	r0, .L2425+0x8
	ldr	r1, .L2425+0xc
	bl	StringCopy
	b	.L2383
.L2426:
	.align	2, 0
.L2425:
	.word	gStringVar1
	.word	gText_Sour2
	.word	gStringVar2
	.word	gText_SoSo
.L2382:
	cmp	r0, #0xd
	bls	.L2384	@cond_branch
	ldr	r0, .L2427
	ldr	r1, .L2427+0x4
	bl	StringCopy
	b	.L2383
.L2428:
	.align	2, 0
.L2427:
	.word	gStringVar2
	.word	gText_Bad
.L2384:
	ldr	r0, .L2429
	ldr	r1, .L2429+0x4
	bl	StringCopy
.L2383:
	ldr	r0, .L2429+0x8
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x14]
	bl	TVShowConvertInternationalString
	ldr	r1, .L2429+0xc
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2355
.L2430:
	.align	2, 0
.L2429:
	.word	gStringVar2
	.word	gText_TheWorst
	.word	gStringVar3
	.word	sTVShowState
.L2386:
	ldr	r0, .L2431
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x15]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2431+0x4
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x14]
.L2390:
	bl	TVShowConvertInternationalString
	ldr	r1, .L2431+0x8
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2355
.L2432:
	.align	2, 0
.L2431:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L2387:
	bl	TVShowDone
.L2355:
	ldr	r0, .L2433
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2434:
	.align	2, 0
.L2433:
	.word	sTV3CheersForPokeblocksTextGroup
.Lfe184:
	.size	 DoTVShow3CheersForPokeblocks,.Lfe184-DoTVShow3CheersForPokeblocks
	.align	2, 0
	.globl	DoTVShowInSearchOfTrainers
	.type	 DoTVShowInSearchOfTrainers,function
	.thumb_func
DoTVShowInSearchOfTrainers:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L2458
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L2458+0x4
	ldrb	r7, [r0]
	add	r2, r0, #0
	cmp	r7, #0x8
	bls	.LCB19288
	b	.L2436	@long jump
.LCB19288:
	lsl	r0, r7, #0x2
	ldr	r1, .L2458+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2459:
	.align	2, 0
.L2458:
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2456
	.align	2, 0
	.align	2, 0
.L2456:
	.word	.L2437
	.word	.L2440
	.word	.L2441
	.word	.L2450
	.word	.L2454
	.word	.L2454
	.word	.L2454
	.word	.L2454
	.word	.L2455
.L2437:
	ldr	r0, .L2460
	ldr	r4, .L2460+0x4
	ldr	r1, [r4]
	ldr	r2, .L2460+0x8
	add	r1, r1, r2
	ldrb	r1, [r1]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r0, [r4]
	ldr	r1, .L2460+0xc
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bls	.L2438	@cond_branch
	ldr	r1, .L2460+0x10
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2436
.L2461:
	.align	2, 0
.L2460:
	.word	gStringVar1
	.word	gSaveBlock1Ptr
	.word	0x2bac
	.word	0x2bad
	.word	sTVShowState
.L2438:
	ldr	r1, .L2462
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2436
.L2463:
	.align	2, 0
.L2462:
	.word	sTVShowState
.L2440:
	mov	r0, #0x2
	strb	r0, [r2]
	b	.L2436
.L2441:
	ldr	r0, .L2464
	ldr	r0, [r0]
	ldr	r1, .L2464+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2442	@cond_branch
	mov	r0, #0x4
	strb	r0, [r2]
	b	.L2436
.L2465:
	.align	2, 0
.L2464:
	.word	gSaveBlock1Ptr
	.word	0x2bae
.L2442:
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2444	@cond_branch
	mov	r0, #0x5
	strb	r0, [r2]
	b	.L2436
.L2444:
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2446	@cond_branch
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L2436
.L2446:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2448	@cond_branch
	mov	r0, #0x7
	strb	r0, [r2]
	b	.L2436
.L2448:
	mov	r0, #0x3
	strb	r0, [r2]
	b	.L2436
.L2450:
	ldr	r0, .L2466
	ldr	r4, .L2466+0x4
	ldr	r1, [r4]
	ldr	r2, .L2466+0x8
	add	r1, r1, r2
	ldrh	r1, [r1]
	mov	r6, #0xb
	mul	r1, r1, r6
	ldr	r5, .L2466+0xc
	add	r1, r1, r5
	bl	StringCopy
	ldr	r0, .L2466+0x10
	ldr	r1, [r4]
	ldr	r2, .L2466+0x14
	add	r1, r1, r2
	ldrh	r2, [r1]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L2466+0x18
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2466+0x1c
	ldr	r1, [r4]
	ldr	r2, .L2466+0x20
	add	r1, r1, r2
	ldrh	r1, [r1]
	mul	r1, r1, r6
	add	r1, r1, r5
	bl	StringCopy
	ldr	r1, .L2466+0x24
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L2436
.L2467:
	.align	2, 0
.L2466:
	.word	gStringVar1
	.word	gSaveBlock1Ptr
	.word	0x2ba4
	.word	gSpeciesNames
	.word	gStringVar2
	.word	0x2ba8
	.word	gMoveNames
	.word	gStringVar3
	.word	0x2ba6
	.word	sTVShowState
.L2454:
	mov	r0, #0x8
	strb	r0, [r2]
	b	.L2436
.L2455:
	ldr	r0, .L2468
	ldr	r4, .L2468+0x4
	ldr	r1, [r4]
	ldr	r2, .L2468+0x8
	add	r1, r1, r2
	ldrh	r1, [r1]
	bl	CopyEasyChatWord
	ldr	r0, .L2468+0xc
	ldr	r1, [r4]
	ldr	r2, .L2468+0x10
	add	r1, r1, r2
	ldrh	r1, [r1]
	mov	r6, #0xb
	mul	r1, r1, r6
	ldr	r5, .L2468+0x14
	add	r1, r1, r5
	bl	StringCopy
	ldr	r0, .L2468+0x18
	ldr	r1, [r4]
	ldr	r2, .L2468+0x1c
	add	r1, r1, r2
	ldrh	r1, [r1]
	mul	r1, r1, r6
	add	r1, r1, r5
	bl	StringCopy
	ldr	r1, .L2468+0x20
	mov	r0, #0x1
	strh	r0, [r1]
	ldr	r1, .L2468+0x24
	mov	r0, #0x0
	strb	r0, [r1]
	bl	TakeTVShowInSearchOfTrainersOffTheAir
.L2436:
	ldr	r0, .L2468+0x28
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2469:
	.align	2, 0
.L2468:
	.word	gStringVar1
	.word	gSaveBlock1Ptr
	.word	0x2baa
	.word	gStringVar2
	.word	0x2ba4
	.word	gSpeciesNames
	.word	gStringVar3
	.word	0x2ba6
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	sTVInSearchOfTrainersTextGroup
.Lfe185:
	.size	 DoTVShowInSearchOfTrainers,.Lfe185-DoTVShowInSearchOfTrainers
	.align	2, 0
	.type	 DoTVShowPokemonAngler,function
	.thumb_func
DoTVShowPokemonAngler:
	push	{r4, r5, lr}
	ldr	r2, .L2478
	ldr	r0, .L2478+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2478+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r0, .L2478+0xc
	mov	r1, #0x0
	strh	r1, [r0]
	ldrb	r0, [r4, #0x2]
	ldrb	r2, [r4, #0x3]
	cmp	r0, r2
	bcs	.L2471	@cond_branch
	ldr	r0, .L2478+0x10
	strb	r1, [r0]
	b	.L2472
.L2479:
	.align	2, 0
.L2478:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
.L2471:
	ldr	r1, .L2480
	mov	r0, #0x1
	strb	r0, [r1]
	add	r0, r1, #0
.L2472:
	ldrb	r5, [r0]
	cmp	r5, #0
	beq	.L2474	@cond_branch
	cmp	r5, #0x1
	beq	.L2475	@cond_branch
	b	.L2473
.L2481:
	.align	2, 0
.L2480:
	.word	sTVShowState
.L2474:
	ldr	r0, .L2482
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x6]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2482+0x4
	ldrh	r2, [r4, #0x4]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2482+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r1, [r4, #0x3]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	bl	TVShowDone
	b	.L2473
.L2483:
	.align	2, 0
.L2482:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
.L2475:
	ldr	r0, .L2484
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x6]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2484+0x4
	ldrh	r2, [r4, #0x4]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2484+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r1, [r4, #0x2]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	bl	TVShowDone
.L2473:
	ldr	r0, .L2484+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2485:
	.align	2, 0
.L2484:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	sTVPokemonAnslerTextGroup
.Lfe186:
	.size	 DoTVShowPokemonAngler,.Lfe186-DoTVShowPokemonAngler
	.align	2, 0
	.type	 DoTVShowTheWorldOfMasters,function
	.thumb_func
DoTVShowTheWorldOfMasters:
	push	{r4, r5, r6, lr}
	ldr	r2, .L2494
	ldr	r0, .L2494+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2494+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2494+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r6, .L2494+0x10
	ldrb	r5, [r6]
	cmp	r5, #0x1
	beq	.L2489	@cond_branch
	cmp	r5, #0x1
	bgt	.L2493	@cond_branch
	cmp	r5, #0
	beq	.L2488	@cond_branch
	b	.L2487
.L2495:
	.align	2, 0
.L2494:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
.L2493:
	cmp	r5, #0x2
	beq	.L2490	@cond_branch
	b	.L2487
.L2488:
	ldr	r0, .L2496
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xb]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x6]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	mov	r0, #0x1
	strb	r0, [r6]
	b	.L2487
.L2497:
	.align	2, 0
.L2496:
	.word	gStringVar1
.L2489:
	ldr	r0, .L2498
	ldrh	r2, [r4, #0x8]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2498+0x4
	add	r1, r1, r2
	bl	StringCopy
	mov	r0, #0x2
	strb	r0, [r6]
	b	.L2487
.L2499:
	.align	2, 0
.L2498:
	.word	gStringVar1
	.word	gSpeciesNames
.L2490:
	ldr	r0, .L2500
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xb]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2500+0x4
	ldrb	r1, [r4, #0xa]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r0, .L2500+0x8
	ldrh	r2, [r4, #0x4]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2500+0xc
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
.L2487:
	ldr	r0, .L2500+0x10
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2501:
	.align	2, 0
.L2500:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gSpeciesNames
	.word	sTVWorldOfMastersTextGroup
.Lfe187:
	.size	 DoTVShowTheWorldOfMasters,.Lfe187-DoTVShowTheWorldOfMasters
	.align	2, 0
	.type	 DoTVShowTodaysRivalTrainer,function
	.thumb_func
DoTVShowTodaysRivalTrainer:
	push	{r4, r5, lr}
	ldr	r2, .L2552
	ldr	r0, .L2552+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2552+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2552+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2552+0x10
	ldrb	r5, [r0]
	add	r2, r0, #0
	cmp	r5, #0xa
	bls	.LCB19885
	b	.L2503	@long jump
.LCB19885:
	lsl	r0, r5, #0x2
	ldr	r1, .L2552+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2553:
	.align	2, 0
.L2552:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2546
	.align	2, 0
	.align	2, 0
.L2546:
	.word	.L2504
	.word	.L2528
	.word	.L2533
	.word	.L2538
	.word	.L2541
	.word	.L2544
	.word	.L2545
	.word	.L2516
	.word	.L2519
	.word	.L2522
	.word	.L2525
.L2504:
	ldrb	r0, [r4, #0x7]
	cmp	r0, #0x56
	beq	.L2507	@cond_branch
	cmp	r0, #0x57
	beq	.L2508	@cond_branch
	mov	r0, #0x7
	strb	r0, [r2]
	b	.L2503
.L2507:
	mov	r0, #0x8
	strb	r0, [r2]
	b	.L2503
.L2508:
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L2554
	cmp	r1, r0
	bgt	.L2513	@cond_branch
	sub	r0, r0, #0x2
	cmp	r1, r0
	blt	.L2513	@cond_branch
	mov	r0, #0xa
	strb	r0, [r2]
	b	.L2503
.L2555:
	.align	2, 0
.L2554:
	.word	0x117
.L2513:
	mov	r0, #0x9
	strb	r0, [r2]
	b	.L2503
.L2516:
	ldr	r0, .L2556
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xc]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldr	r0, .L2556+0x4
	ldrb	r1, [r4, #0x7]
	mov	r2, #0x0
	bl	GetMapName
.L2551:
	ldrb	r0, [r4, #0x4]
	cmp	r0, #0
	bne	.L2548	@cond_branch
	b	.L2526
.L2557:
	.align	2, 0
.L2556:
	.word	gStringVar1
	.word	gStringVar3
.L2519:
	ldr	r0, .L2558
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xc]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	b	.L2551
.L2559:
	.align	2, 0
.L2558:
	.word	gStringVar1
.L2522:
	ldr	r0, .L2560
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xc]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	b	.L2551
.L2561:
	.align	2, 0
.L2560:
	.word	gStringVar1
.L2525:
	ldr	r0, .L2562
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xc]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldrb	r0, [r4, #0x4]
	cmp	r0, #0
	beq	.L2526	@cond_branch
.L2548:
	ldr	r1, .L2562+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2503
.L2563:
	.align	2, 0
.L2562:
	.word	gStringVar1
	.word	sTVShowState
.L2526:
	ldr	r1, .L2564
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2503
.L2565:
	.align	2, 0
.L2564:
	.word	sTVShowState
.L2528:
	ldrb	r1, [r4, #0x4]
	mov	r0, #0x0
	bl	TV_PrintIntToStringVar
	ldr	r0, .L2566
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2550	@cond_branch
	ldr	r0, [r4, #0x4]
	ldr	r1, .L2566+0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L2549	@cond_branch
	b	.L2535
.L2567:
	.align	2, 0
.L2566:
	.word	0x8a8
	.word	0xffff00
.L2533:
	ldr	r0, .L2568
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L2550	@cond_branch
	ldr	r0, [r4, #0x4]
	ldr	r1, .L2568+0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L2535	@cond_branch
.L2549:
	ldr	r1, .L2568+0x8
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2503
.L2569:
	.align	2, 0
.L2568:
	.word	0x8a8
	.word	0xffff00
	.word	sTVShowState
.L2535:
	ldr	r1, .L2570
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2503
.L2571:
	.align	2, 0
.L2570:
	.word	sTVShowState
.L2538:
	ldrh	r0, [r4, #0x8]
	cmp	r0, #0
	bne	.L2539	@cond_branch
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L2503
.L2539:
	mov	r0, #0x5
	strb	r0, [r2]
	b	.L2503
.L2541:
	ldrb	r1, [r4, #0x6]
	mov	r0, #0x0
	bl	TV_PrintIntToStringVar
	ldrb	r1, [r4, #0x5]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldrh	r0, [r4, #0x8]
	cmp	r0, #0
	beq	.L2550	@cond_branch
	ldr	r1, .L2572
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2503
.L2573:
	.align	2, 0
.L2572:
	.word	sTVShowState
.L2544:
	ldrh	r1, [r4, #0x8]
	mov	r0, #0x0
	bl	TV_PrintIntToStringVar
.L2550:
	ldr	r1, .L2574
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2503
.L2575:
	.align	2, 0
.L2574:
	.word	sTVShowState
.L2545:
	ldr	r0, .L2576
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xc]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L2503:
	ldr	r0, .L2576+0x4
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2577:
	.align	2, 0
.L2576:
	.word	gStringVar1
	.word	sTVTodaysRivalTrainerTextGroup
.Lfe188:
	.size	 DoTVShowTodaysRivalTrainer,.Lfe188-DoTVShowTodaysRivalTrainer
	.align	2, 0
	.type	 DoTVShowDewfordTrendWatcherNetwork,function
	.thumb_func
DoTVShowDewfordTrendWatcherNetwork:
	push	{r4, r5, lr}
	ldr	r2, .L2593
	ldr	r0, .L2593+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2593+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2593+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2593+0x10
	ldrb	r5, [r0]
	cmp	r5, #0x6
	bls	.LCB20278
	b	.L2579	@long jump
.LCB20278:
	lsl	r0, r5, #0x2
	ldr	r1, .L2593+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2594:
	.align	2, 0
.L2593:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2591
	.align	2, 0
	.align	2, 0
.L2591:
	.word	.L2580
	.word	.L2584
	.word	.L2584
	.word	.L2585
	.word	.L2589
	.word	.L2589
	.word	.L2590
.L2580:
	ldr	r0, .L2595
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldr	r0, .L2595+0x4
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	ldrb	r0, [r4, #0x8]
	cmp	r0, #0
	bne	.L2581	@cond_branch
	ldr	r1, .L2595+0x8
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2579
.L2596:
	.align	2, 0
.L2595:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L2581:
	ldr	r1, .L2597
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2579
.L2598:
	.align	2, 0
.L2597:
	.word	sTVShowState
.L2584:
	ldr	r0, .L2599
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldr	r0, .L2599+0x4
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	ldr	r0, .L2599+0x8
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x9]
	bl	TVShowConvertInternationalString
	ldr	r1, .L2599+0xc
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2579
.L2600:
	.align	2, 0
.L2599:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	sTVShowState
.L2585:
	ldr	r0, .L2601
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldr	r0, .L2601+0x4
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	ldrb	r0, [r4, #0x8]
	cmp	r0, #0
	bne	.L2586	@cond_branch
	ldr	r1, .L2601+0x8
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2579
.L2602:
	.align	2, 0
.L2601:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L2586:
	ldr	r1, .L2603
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2579
.L2604:
	.align	2, 0
.L2603:
	.word	sTVShowState
.L2589:
	ldr	r0, .L2605
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldr	r0, .L2605+0x4
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	ldr	r0, .L2605+0x8
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x9]
	bl	TVShowConvertInternationalString
	ldr	r1, .L2605+0xc
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2579
.L2606:
	.align	2, 0
.L2605:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	sTVShowState
.L2590:
	ldr	r0, .L2607
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldr	r0, .L2607+0x4
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	bl	TVShowDone
.L2579:
	ldr	r0, .L2607+0x8
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2608:
	.align	2, 0
.L2607:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVDewfordTrendWatcherNetworkTextGroup
.Lfe189:
	.size	 DoTVShowDewfordTrendWatcherNetwork,.Lfe189-DoTVShowDewfordTrendWatcherNetwork
	.align	2, 0
	.type	 DoTVShowHoennTreasureInvestigators,function
	.thumb_func
DoTVShowHoennTreasureInvestigators:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L2625
	ldr	r0, .L2625+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2625+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L2625+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r7, .L2625+0x10
	ldrb	r6, [r7]
	cmp	r6, #0x1
	beq	.L2620	@cond_branch
	cmp	r6, #0x1
	bgt	.L2624	@cond_branch
	cmp	r6, #0
	beq	.L2611	@cond_branch
	b	.L2610
.L2626:
	.align	2, 0
.L2625:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
.L2624:
	cmp	r6, #0x2
	beq	.L2621	@cond_branch
	b	.L2610
.L2611:
	ldr	r4, .L2627
	ldrh	r0, [r5, #0x2]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r0, [r5, #0x4]
	cmp	r0, #0x57
	bne	.L2612	@cond_branch
	ldrh	r1, [r5, #0x6]
	ldr	r0, .L2627+0x4
	cmp	r1, r0
	bgt	.L2617	@cond_branch
	sub	r0, r0, #0x2
	cmp	r1, r0
	blt	.L2617	@cond_branch
	mov	r0, #0x2
	strb	r0, [r7]
	b	.L2610
.L2628:
	.align	2, 0
.L2627:
	.word	gStringVar1
	.word	0x117
.L2617:
	ldr	r1, .L2629
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2610
.L2630:
	.align	2, 0
.L2629:
	.word	sTVShowState
.L2612:
	mov	r0, #0x1
	strb	r0, [r7]
	b	.L2610
.L2620:
	ldr	r4, .L2631
	ldrh	r0, [r5, #0x2]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, .L2631+0x4
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x5]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2631+0x8
	ldrb	r1, [r5, #0x4]
	mov	r2, #0x0
	bl	GetMapName
	bl	TVShowDone
	b	.L2610
.L2632:
	.align	2, 0
.L2631:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
.L2621:
	ldr	r4, .L2633
	ldrh	r0, [r5, #0x2]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, .L2633+0x4
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x5]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L2610:
	ldr	r0, .L2633+0x8
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2634:
	.align	2, 0
.L2633:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVHoennTreasureInvestisatorsTextGroup
.Lfe190:
	.size	 DoTVShowHoennTreasureInvestigators,.Lfe190-DoTVShowHoennTreasureInvestigators
	.align	2, 0
	.type	 DoTVShowFindThatGamer,function
	.thumb_func
DoTVShowFindThatGamer:
	push	{r4, r5, lr}
	ldr	r2, .L2666
	ldr	r0, .L2666+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2666+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2666+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2666+0x10
	ldrb	r5, [r0]
	cmp	r5, #0x1
	beq	.L2645	@cond_branch
	cmp	r5, #0x1
	bgt	.L2665	@cond_branch
	cmp	r5, #0
	beq	.L2637	@cond_branch
	b	.L2636
.L2667:
	.align	2, 0
.L2666:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
.L2665:
	cmp	r5, #0x2
	beq	.L2651	@cond_branch
	cmp	r5, #0x3
	bne	.LCB20703
	b	.L2657	@long jump
.LCB20703:
	b	.L2636
.L2637:
	ldr	r0, .L2668
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x8]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0
	beq	.L2639	@cond_branch
	cmp	r0, #0x1
	beq	.L2640	@cond_branch
	b	.L2638
.L2669:
	.align	2, 0
.L2668:
	.word	gStringVar1
.L2639:
	ldr	r0, .L2670
	ldr	r1, .L2670+0x4
	bl	StringCopy
	b	.L2638
.L2671:
	.align	2, 0
.L2670:
	.word	gStringVar2
	.word	gText_Slots
.L2640:
	ldr	r0, .L2672
	ldr	r1, .L2672+0x4
	bl	StringCopy
.L2638:
	ldrb	r1, [r4, #0x2]
	cmp	r1, #0x1
	bne	.L2643	@cond_branch
	ldr	r0, .L2672+0x8
	strb	r1, [r0]
	b	.L2636
.L2673:
	.align	2, 0
.L2672:
	.word	gStringVar2
	.word	gText_Roulette
	.word	sTVShowState
.L2643:
	ldr	r1, .L2674
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2636
.L2675:
	.align	2, 0
.L2674:
	.word	sTVShowState
.L2645:
	ldr	r0, .L2676
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x8]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0
	beq	.L2647	@cond_branch
	cmp	r0, #0x1
	beq	.L2648	@cond_branch
	b	.L2646
.L2677:
	.align	2, 0
.L2676:
	.word	gStringVar1
.L2647:
	ldr	r0, .L2678
	ldr	r1, .L2678+0x4
	bl	StringCopy
	b	.L2646
.L2679:
	.align	2, 0
.L2678:
	.word	gStringVar2
	.word	gText_Slots
.L2648:
	ldr	r0, .L2680
	ldr	r1, .L2680+0x4
	bl	StringCopy
.L2646:
	ldrh	r1, [r4, #0x4]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	bl	TVShowDone
	b	.L2636
.L2681:
	.align	2, 0
.L2680:
	.word	gStringVar2
	.word	gText_Roulette
.L2651:
	ldr	r0, .L2682
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x8]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0
	beq	.L2653	@cond_branch
	cmp	r0, #0x1
	beq	.L2654	@cond_branch
	b	.L2652
.L2683:
	.align	2, 0
.L2682:
	.word	gStringVar1
.L2653:
	ldr	r0, .L2684
	ldr	r1, .L2684+0x4
	bl	StringCopy
	b	.L2652
.L2685:
	.align	2, 0
.L2684:
	.word	gStringVar2
	.word	gText_Slots
.L2654:
	ldr	r0, .L2686
	ldr	r1, .L2686+0x4
	bl	StringCopy
.L2652:
	ldrh	r1, [r4, #0x4]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldr	r1, .L2686+0x8
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2636
.L2687:
	.align	2, 0
.L2686:
	.word	gStringVar2
	.word	gText_Roulette
	.word	sTVShowState
.L2657:
	ldr	r0, .L2688
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x8]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x3]
	cmp	r1, #0
	beq	.L2659	@cond_branch
	cmp	r1, #0x1
	beq	.L2660	@cond_branch
	b	.L2658
.L2689:
	.align	2, 0
.L2688:
	.word	gStringVar1
.L2659:
	ldr	r0, .L2690
	ldr	r1, .L2690+0x4
	bl	StringCopy
	b	.L2658
.L2691:
	.align	2, 0
.L2690:
	.word	gStringVar2
	.word	gText_Roulette
.L2660:
	ldr	r0, .L2692
	ldr	r1, .L2692+0x4
	bl	StringCopy
.L2658:
	bl	TVShowDone
.L2636:
	ldr	r0, .L2692+0x8
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2693:
	.align	2, 0
.L2692:
	.word	gStringVar2
	.word	gText_Slots
	.word	sTVFindThatGamerTextGroup
.Lfe191:
	.size	 DoTVShowFindThatGamer,.Lfe191-DoTVShowFindThatGamer
	.align	2, 0
	.type	 DoTVShowBreakingNewsTV,function
	.thumb_func
DoTVShowBreakingNewsTV:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L2723
	ldr	r0, .L2723+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2723+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r6, r1, r0
	ldr	r1, .L2723+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2723+0x10
	ldrb	r7, [r0]
	add	r2, r0, #0
	cmp	r7, #0xc
	bls	.LCB21008
	b	.L2695	@long jump
.LCB21008:
	lsl	r0, r7, #0x2
	ldr	r1, .L2723+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2724:
	.align	2, 0
.L2723:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2720
	.align	2, 0
	.align	2, 0
.L2720:
	.word	.L2696
	.word	.L2699
	.word	.L2700
	.word	.L2701
	.word	.L2702
	.word	.L2703
	.word	.L2704
	.word	.L2714
	.word	.L2716
	.word	.L2718
	.word	.L2718
	.word	.L2719
	.word	.L2715
.L2696:
	ldrb	r0, [r6, #0x5]
	cmp	r0, #0
	bne	.L2697	@cond_branch
	mov	r0, #0x1
	strb	r0, [r2]
	b	.L2695
.L2697:
	mov	r0, #0x5
	strb	r0, [r2]
	b	.L2695
.L2699:
	ldr	r0, .L2725
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2725+0x4
	ldrh	r2, [r6, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2725+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2725+0xc
	ldrb	r1, [r6, #0x4]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r1, .L2725+0x10
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2695
.L2726:
	.align	2, 0
.L2725:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2700:
	ldr	r0, .L2727
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2727+0x4
	ldrh	r1, [r6, #0x2]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L2727+0x8
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2727+0xc
	ldrh	r1, [r6, #0xa]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldr	r1, .L2727+0x10
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2695
.L2728:
	.align	2, 0
.L2727:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2701:
	ldrh	r1, [r6, #0x8]
	mov	r0, #0x0
	bl	TV_PrintIntToStringVar
	ldr	r4, .L2729
	ldrh	r0, [r6, #0x6]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, .L2729+0x4
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2695
.L2730:
	.align	2, 0
.L2729:
	.word	gStringVar2
	.word	sTVShowState
.L2702:
	ldr	r0, .L2731
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2731+0x4
	ldrb	r1, [r6, #0x4]
	mov	r2, #0x0
	bl	GetMapName
	bl	TVShowDone
	b	.L2695
.L2732:
	.align	2, 0
.L2731:
	.word	gStringVar1
	.word	gStringVar2
.L2703:
	ldr	r0, .L2733
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2733+0x4
	ldrh	r2, [r6, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2733+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2733+0xc
	ldrb	r1, [r6, #0x4]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r1, .L2733+0x10
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2695
.L2734:
	.align	2, 0
.L2733:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2704:
	ldr	r0, .L2735
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2735+0x4
	ldrh	r1, [r6, #0x2]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L2735+0x8
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2735+0xc
	ldrh	r1, [r6, #0xa]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldrb	r0, [r6, #0x5]
	cmp	r0, #0x2
	beq	.L2709	@cond_branch
	cmp	r0, #0x2
	bgt	.L2713	@cond_branch
	cmp	r0, #0x1
	beq	.L2706	@cond_branch
	b	.L2695
.L2736:
	.align	2, 0
.L2735:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L2713:
	cmp	r0, #0x3
	beq	.L2710	@cond_branch
	b	.L2695
.L2706:
	ldrh	r0, [r6, #0xc]
	cmp	r0, #0
	bne	.L2707	@cond_branch
	ldr	r1, .L2737
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L2695
.L2738:
	.align	2, 0
.L2737:
	.word	sTVShowState
.L2707:
	ldr	r1, .L2739
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L2695
.L2740:
	.align	2, 0
.L2739:
	.word	sTVShowState
.L2709:
	ldr	r1, .L2741
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L2695
.L2742:
	.align	2, 0
.L2741:
	.word	sTVShowState
.L2710:
	ldr	r1, .L2743
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L2695
.L2744:
	.align	2, 0
.L2743:
	.word	sTVShowState
.L2714:
	ldr	r0, .L2745
	ldrh	r2, [r6, #0xc]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L2745+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2745+0x8
	ldrh	r2, [r6, #0xa]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2745+0xc
	add	r1, r1, r2
	b	.L2722
.L2746:
	.align	2, 0
.L2745:
	.word	gStringVar1
	.word	gMoveNames
	.word	gStringVar2
	.word	gSpeciesNames
.L2715:
	ldr	r0, .L2747
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2747+0x4
	ldrh	r1, [r6, #0x2]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L2747+0x8
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2747+0xc
	ldrh	r1, [r6, #0xa]
	mul	r1, r1, r5
	add	r1, r1, r4
.L2722:
	bl	StringCopy
	ldr	r1, .L2747+0x10
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L2695
.L2748:
	.align	2, 0
.L2747:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2716:
	ldr	r0, .L2749
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2749+0x4
	ldrb	r1, [r6, #0x4]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r1, .L2749+0x8
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L2695
.L2750:
	.align	2, 0
.L2749:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L2718:
	ldr	r0, .L2751
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2751+0x4
	ldrh	r1, [r6, #0x2]
	mov	r4, #0xb
	mul	r1, r1, r4
	ldr	r2, .L2751+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2751+0xc
	ldrb	r1, [r6, #0x4]
	mov	r2, #0x0
	bl	GetMapName
	ldr	r0, .L2751+0x10
	strb	r4, [r0]
	b	.L2695
.L2752:
	.align	2, 0
.L2751:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2719:
	ldr	r0, .L2753
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xe]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L2695:
	ldr	r0, .L2753+0x4
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2754:
	.align	2, 0
.L2753:
	.word	gStringVar1
	.word	sTVBreakinsNewsTextGroup
.Lfe192:
	.size	 DoTVShowBreakingNewsTV,.Lfe192-DoTVShowBreakingNewsTV
	.align	2, 0
	.type	 DoTVShowSecretBaseVisit,function
	.thumb_func
DoTVShowSecretBaseVisit:
	push	{r4, r5, r6, lr}
	ldr	r2, .L2791
	ldr	r0, .L2791+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2791+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L2791+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2791+0x10
	ldrb	r6, [r0]
	add	r2, r0, #0
	cmp	r6, #0xd
	bls	.LCB21514
	b	.L2756	@long jump
.LCB21514:
	lsl	r0, r6, #0x2
	ldr	r1, .L2791+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2792:
	.align	2, 0
.L2791:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2788
	.align	2, 0
	.align	2, 0
.L2788:
	.word	.L2757
	.word	.L2760
	.word	.L2775
	.word	.L2763
	.word	.L2775
	.word	.L2771
	.word	.L2772
	.word	.L2775
	.word	.L2776
	.word	.L2786
	.word	.L2786
	.word	.L2786
	.word	.L2786
	.word	.L2787
.L2757:
	ldr	r0, .L2793
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0xc]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r5, #0x3]
	cmp	r0, #0
	bne	.L2758	@cond_branch
	ldr	r1, .L2793+0x4
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2756
.L2794:
	.align	2, 0
.L2793:
	.word	gStringVar1
	.word	sTVShowState
.L2758:
	ldr	r1, .L2795
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2756
.L2796:
	.align	2, 0
.L2795:
	.word	sTVShowState
.L2760:
	ldr	r0, .L2797
	ldrb	r1, [r5, #0x4]
	lsl	r1, r1, #0x5
	ldr	r2, .L2797+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r0, [r5, #0x3]
	cmp	r0, #0x1
	bne	.L2761	@cond_branch
	ldr	r1, .L2797+0x8
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2756
.L2798:
	.align	2, 0
.L2797:
	.word	gStringVar2
	.word	gDecorations+0x1
	.word	sTVShowState
.L2761:
	ldr	r1, .L2799
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2756
.L2800:
	.align	2, 0
.L2799:
	.word	sTVShowState
.L2763:
	ldr	r0, .L2801
	ldrb	r1, [r5, #0x5]
	lsl	r1, r1, #0x5
	ldr	r2, .L2801+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r1, [r5, #0x3]
	cmp	r1, #0x3
	beq	.L2766	@cond_branch
	cmp	r1, #0x3
	bgt	.L2770	@cond_branch
	cmp	r1, #0x2
	beq	.L2765	@cond_branch
	b	.L2756
.L2802:
	.align	2, 0
.L2801:
	.word	gStringVar2
	.word	gDecorations+0x1
.L2770:
	cmp	r1, #0x4
	beq	.L2767	@cond_branch
	b	.L2756
.L2765:
	ldr	r1, .L2803
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L2756
.L2804:
	.align	2, 0
.L2803:
	.word	sTVShowState
.L2766:
	ldr	r1, .L2805
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2756
.L2806:
	.align	2, 0
.L2805:
	.word	sTVShowState
.L2767:
	ldr	r1, .L2807
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2756
.L2808:
	.align	2, 0
.L2807:
	.word	sTVShowState
.L2771:
	ldr	r0, .L2809
	ldrb	r1, [r5, #0x6]
	lsl	r1, r1, #0x5
	ldr	r4, .L2809+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2809+0x8
	ldrb	r1, [r5, #0x7]
	lsl	r1, r1, #0x5
	add	r1, r1, r4
	b	.L2790
.L2810:
	.align	2, 0
.L2809:
	.word	gStringVar2
	.word	gDecorations+0x1
	.word	gStringVar3
.L2772:
	ldr	r0, .L2811
	ldrb	r1, [r5, #0x6]
	lsl	r1, r1, #0x5
	ldr	r2, .L2811+0x4
	add	r1, r1, r2
.L2790:
	bl	StringCopy
	ldr	r1, .L2811+0x8
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L2756
.L2812:
	.align	2, 0
.L2811:
	.word	gStringVar2
	.word	gDecorations+0x1
	.word	sTVShowState
.L2775:
	mov	r0, #0x8
	strb	r0, [r2]
	b	.L2756
.L2776:
	ldr	r0, .L2813
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0xc]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r5, #0x2]
	cmp	r1, #0x18
	bhi	.L2777	@cond_branch
	ldr	r1, .L2813+0x4
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L2756
.L2814:
	.align	2, 0
.L2813:
	.word	gStringVar1
	.word	sTVShowState
.L2777:
	cmp	r1, #0x31
	bhi	.L2779	@cond_branch
	ldr	r1, .L2815
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L2756
.L2816:
	.align	2, 0
.L2815:
	.word	sTVShowState
.L2779:
	cmp	r1, #0x45
	bhi	.L2781	@cond_branch
	ldr	r1, .L2817
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L2756
.L2818:
	.align	2, 0
.L2817:
	.word	sTVShowState
.L2781:
	ldr	r1, .L2819
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L2756
.L2820:
	.align	2, 0
.L2819:
	.word	sTVShowState
.L2786:
	ldr	r0, .L2821
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0xc]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2821+0x4
	ldrh	r2, [r5, #0x8]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2821+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2821+0xc
	ldrh	r1, [r5, #0xa]
	mov	r4, #0xd
	mul	r1, r1, r4
	ldr	r2, .L2821+0x10
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2821+0x14
	strb	r4, [r0]
	b	.L2756
.L2822:
	.align	2, 0
.L2821:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	gMoveNames
	.word	sTVShowState
.L2787:
	bl	TVShowDone
.L2756:
	ldr	r0, .L2823
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2824:
	.align	2, 0
.L2823:
	.word	sTVSecretBaseVisitTextGroup
.Lfe193:
	.size	 DoTVShowSecretBaseVisit,.Lfe193-DoTVShowSecretBaseVisit
	.align	2, 0
	.type	 DoTVShowPokemonLotteryWinnerFlashReport,function
	.thumb_func
DoTVShowPokemonLotteryWinnerFlashReport:
	push	{r4, r5, r6, lr}
	ldr	r2, .L2832
	ldr	r0, .L2832+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2832+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L2832+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2832+0x10
	ldrb	r6, [r0]
	ldr	r0, .L2832+0x14
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x5]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r5, #0x4]
	cmp	r0, #0
	bne	.L2826	@cond_branch
	ldr	r0, .L2832+0x18
	ldr	r1, .L2832+0x1c
	bl	StringCopy
	b	.L2827
.L2833:
	.align	2, 0
.L2832:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	gStringVar1
	.word	gStringVar2
	.word	gText_Jackpot
.L2826:
	cmp	r0, #0x1
	bne	.L2828	@cond_branch
	ldr	r0, .L2834
	ldr	r1, .L2834+0x4
	bl	StringCopy
	b	.L2827
.L2835:
	.align	2, 0
.L2834:
	.word	gStringVar2
	.word	gText_First
.L2828:
	cmp	r0, #0x2
	bne	.L2830	@cond_branch
	ldr	r0, .L2836
	ldr	r1, .L2836+0x4
	bl	StringCopy
	b	.L2827
.L2837:
	.align	2, 0
.L2836:
	.word	gStringVar2
	.word	gText_Second
.L2830:
	ldr	r0, .L2838
	ldr	r1, .L2838+0x4
	bl	StringCopy
.L2827:
	ldr	r4, .L2838+0x8
	ldrh	r0, [r5, #0x2]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	bl	TVShowDone
	ldr	r1, .L2838+0xc
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L2839:
	.align	2, 0
.L2838:
	.word	gStringVar2
	.word	gText_Third
	.word	gStringVar3
	.word	sTVPokemonLotteryWinnerFlashReportTextGroup
.Lfe194:
	.size	 DoTVShowPokemonLotteryWinnerFlashReport,.Lfe194-DoTVShowPokemonLotteryWinnerFlashReport
	.align	2, 0
	.type	 DoTVShowThePokemonBattleSeminar,function
	.thumb_func
DoTVShowThePokemonBattleSeminar:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L2860
	ldr	r0, .L2860+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2860+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r6, r1, r0
	ldr	r1, .L2860+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2860+0x10
	ldrb	r7, [r0]
	cmp	r7, #0x6
	bls	.LCB22026
	b	.L2841	@long jump
.LCB22026:
	lsl	r0, r7, #0x2
	ldr	r1, .L2860+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2861:
	.align	2, 0
.L2860:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2856
	.align	2, 0
	.align	2, 0
.L2856:
	.word	.L2842
	.word	.L2843
	.word	.L2844
	.word	.L2852
	.word	.L2853
	.word	.L2854
	.word	.L2855
.L2842:
	ldr	r0, .L2862
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0x11]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2862+0x4
	ldrh	r1, [r6, #0x6]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L2862+0x8
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2862+0xc
	ldrh	r1, [r6, #0x4]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldr	r1, .L2862+0x10
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2841
.L2863:
	.align	2, 0
.L2862:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	sTVShowState
.L2843:
	ldr	r0, .L2864
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0x11]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2864+0x4
	ldrh	r2, [r6, #0x4]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2864+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L2864+0xc
	ldrh	r2, [r6, #0x2]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L2864+0x10
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L2864+0x14
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2841
.L2865:
	.align	2, 0
.L2864:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	gMoveNames
	.word	sTVShowState
.L2844:
	ldr	r0, .L2866
	ldrh	r2, [r6, #0x6]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L2866+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r1, [r6, #0x10]
	cmp	r1, #0x2
	beq	.L2847	@cond_branch
	cmp	r1, #0x2
	bgt	.L2851	@cond_branch
	cmp	r1, #0x1
	beq	.L2846	@cond_branch
	b	.L2858
.L2867:
	.align	2, 0
.L2866:
	.word	gStringVar1
	.word	gSpeciesNames
.L2851:
	cmp	r1, #0x3
	beq	.L2848	@cond_branch
	b	.L2858
.L2846:
	ldr	r1, .L2868
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2841
.L2869:
	.align	2, 0
.L2868:
	.word	sTVShowState
.L2847:
	ldr	r1, .L2870
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2841
.L2871:
	.align	2, 0
.L2870:
	.word	sTVShowState
.L2848:
	ldr	r0, .L2872
	strb	r1, [r0]
	b	.L2841
.L2873:
	.align	2, 0
.L2872:
	.word	sTVShowState
.L2852:
	ldr	r0, .L2874
	ldrh	r1, [r6, #0x8]
	mov	r5, #0xd
	mul	r1, r1, r5
	ldr	r4, .L2874+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2874+0x8
	ldrh	r1, [r6, #0xa]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2874+0xc
	ldrh	r1, [r6, #0xc]
	mul	r1, r1, r5
	add	r1, r1, r4
	b	.L2859
.L2875:
	.align	2, 0
.L2874:
	.word	gStringVar1
	.word	gMoveNames
	.word	gStringVar2
	.word	gStringVar3
.L2853:
	ldr	r0, .L2876
	ldrh	r1, [r6, #0x8]
	mov	r5, #0xd
	mul	r1, r1, r5
	ldr	r4, .L2876+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2876+0x8
	ldrh	r1, [r6, #0xa]
	mul	r1, r1, r5
	add	r1, r1, r4
	b	.L2859
.L2877:
	.align	2, 0
.L2876:
	.word	gStringVar1
	.word	gMoveNames
	.word	gStringVar2
.L2854:
	ldr	r0, .L2878
	ldrh	r2, [r6, #0x8]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L2878+0x4
	add	r1, r1, r2
.L2859:
	bl	StringCopy
.L2858:
	ldr	r1, .L2878+0x8
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2841
.L2879:
	.align	2, 0
.L2878:
	.word	gStringVar2
	.word	gMoveNames
	.word	sTVShowState
.L2855:
	ldr	r0, .L2880
	ldrh	r1, [r6, #0xe]
	mov	r5, #0xd
	mul	r1, r1, r5
	ldr	r4, .L2880+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L2880+0x8
	ldrh	r1, [r6, #0x2]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	bl	TVShowDone
.L2841:
	ldr	r0, .L2880+0xc
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L2881:
	.align	2, 0
.L2880:
	.word	gStringVar1
	.word	gMoveNames
	.word	gStringVar2
	.word	sTVThePokemonBattleSeminarTextGroup
.Lfe195:
	.size	 DoTVShowThePokemonBattleSeminar,.Lfe195-DoTVShowThePokemonBattleSeminar
	.align	2, 0
	.type	 DoTVShowTrainerFanClubSpecial,function
	.thumb_func
DoTVShowTrainerFanClubSpecial:
	push	{r4, r5, lr}
	ldr	r2, .L2898
	ldr	r0, .L2898+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2898+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2898+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2898+0x10
	ldrb	r5, [r0]
	cmp	r5, #0x5
	bls	.LCB22349
	b	.L2883	@long jump
.LCB22349:
	lsl	r0, r5, #0x2
	ldr	r1, .L2898+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2899:
	.align	2, 0
.L2898:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2896
	.align	2, 0
	.align	2, 0
.L2896:
	.word	.L2884
	.word	.L2894
	.word	.L2894
	.word	.L2893
	.word	.L2894
	.word	.L2895
.L2884:
	ldr	r0, .L2900
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x18]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2900+0x4
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x17]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2900+0x8
	ldrh	r1, [r4, #0x14]
	bl	CopyEasyChatWord
	ldrb	r1, [r4, #0x16]
	cmp	r1, #0x59
	bls	.L2885	@cond_branch
	ldr	r1, .L2900+0xc
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2883
.L2901:
	.align	2, 0
.L2900:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	sTVShowState
.L2885:
	cmp	r1, #0x45
	bls	.L2887	@cond_branch
	ldr	r1, .L2902
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2883
.L2903:
	.align	2, 0
.L2902:
	.word	sTVShowState
.L2887:
	cmp	r1, #0x1d
	bls	.L2889	@cond_branch
	ldr	r1, .L2904
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2883
.L2905:
	.align	2, 0
.L2904:
	.word	sTVShowState
.L2889:
	ldr	r1, .L2906
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2883
.L2907:
	.align	2, 0
.L2906:
	.word	sTVShowState
.L2893:
.L2894:
	ldr	r0, .L2908
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x18]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2908+0x4
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x17]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x16]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldr	r1, .L2908+0x8
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2883
.L2909:
	.align	2, 0
.L2908:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L2895:
	ldr	r0, .L2910
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x18]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2910+0x4
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x17]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2910+0x8
	ldrh	r1, [r4, #0x14]
	bl	CopyEasyChatWord
	bl	TVShowDone
.L2883:
	ldr	r0, .L2910+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2911:
	.align	2, 0
.L2910:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	sTVTrainerFanClubSpecialTextGroup
.Lfe196:
	.size	 DoTVShowTrainerFanClubSpecial,.Lfe196-DoTVShowTrainerFanClubSpecial
	.align	2, 0
	.type	 DoTVShowTrainerFanClub,function
	.thumb_func
DoTVShowTrainerFanClub:
	push	{r4, r5, lr}
	ldr	r2, .L2941
	ldr	r0, .L2941+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L2941+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L2941+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L2941+0x10
	ldrb	r5, [r0]
	add	r2, r0, #0
	cmp	r5, #0xb
	bls	.LCB22579
	b	.L2913	@long jump
.LCB22579:
	lsl	r0, r5, #0x2
	ldr	r1, .L2941+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2942:
	.align	2, 0
.L2941:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L2939
	.align	2, 0
	.align	2, 0
.L2939:
	.word	.L2914
	.word	.L2937
	.word	.L2937
	.word	.L2937
	.word	.L2937
	.word	.L2937
	.word	.L2937
	.word	.L2937
	.word	.L2937
	.word	.L2936
	.word	.L2937
	.word	.L2938
.L2914:
	ldr	r0, .L2943
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x8]
	bl	TVShowConvertInternationalString
	add	r0, r4, #0
	add	r0, r0, #0x23
	ldrb	r0, [r0]
	lsl	r0, r0, #0x8
	add	r1, r4, #0
	add	r1, r1, #0x22
	ldrb	r1, [r1]
	add	r0, r0, r1
	mov	r1, #0xa
	bl	__umodsi3
	cmp	r0, #0x9
	bls	.LCB22625
	b	.L2913	@long jump
.LCB22625:
	lsl	r0, r0, #0x2
	ldr	r1, .L2943+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2944:
	.align	2, 0
.L2943:
	.word	gStringVar1
	.word	.L2926
	.align	2, 0
	.align	2, 0
.L2926:
	.word	.L2916
	.word	.L2917
	.word	.L2918
	.word	.L2919
	.word	.L2920
	.word	.L2921
	.word	.L2922
	.word	.L2923
	.word	.L2924
	.word	.L2925
.L2916:
	ldr	r1, .L2945
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2913
.L2946:
	.align	2, 0
.L2945:
	.word	sTVShowState
.L2917:
	ldr	r1, .L2947
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2913
.L2948:
	.align	2, 0
.L2947:
	.word	sTVShowState
.L2918:
	ldr	r1, .L2949
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2913
.L2950:
	.align	2, 0
.L2949:
	.word	sTVShowState
.L2919:
	ldr	r1, .L2951
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2913
.L2952:
	.align	2, 0
.L2951:
	.word	sTVShowState
.L2920:
	ldr	r1, .L2953
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2913
.L2954:
	.align	2, 0
.L2953:
	.word	sTVShowState
.L2921:
	ldr	r1, .L2955
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2913
.L2956:
	.align	2, 0
.L2955:
	.word	sTVShowState
.L2922:
	ldr	r1, .L2957
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L2913
.L2958:
	.align	2, 0
.L2957:
	.word	sTVShowState
.L2923:
	ldr	r1, .L2959
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L2913
.L2960:
	.align	2, 0
.L2959:
	.word	sTVShowState
.L2924:
	ldr	r1, .L2961
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L2913
.L2962:
	.align	2, 0
.L2961:
	.word	sTVShowState
.L2925:
	ldr	r1, .L2963
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L2913
.L2964:
	.align	2, 0
.L2963:
	.word	sTVShowState
.L2936:
.L2937:
	mov	r0, #0xb
	strb	r0, [r2]
	b	.L2913
.L2938:
	ldr	r0, .L2965
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x8]
	bl	TVShowConvertInternationalString
	ldr	r0, .L2965+0x4
	ldrh	r1, [r4, #0x4]
	bl	CopyEasyChatWord
	ldr	r0, .L2965+0x8
	ldrh	r1, [r4, #0x6]
	bl	CopyEasyChatWord
	bl	TVShowDone
.L2913:
	ldr	r0, .L2965+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L2966:
	.align	2, 0
.L2965:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	sTVTrainerFanClubTextGroup
.Lfe197:
	.size	 DoTVShowTrainerFanClub,.Lfe197-DoTVShowTrainerFanClub
	.align	2, 0
	.type	 DoTVShowSpotTheCuties,function
	.thumb_func
DoTVShowSpotTheCuties:
	push	{r4, r5, lr}
	ldr	r2, .L3019
	ldr	r0, .L3019+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L3019+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L3019+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L3019+0x10
	ldrb	r5, [r0]
	cmp	r5, #0xf
	bls	.LCB22845
	b	.L2968	@long jump
.LCB22845:
	lsl	r0, r5, #0x2
	ldr	r1, .L3019+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3020:
	.align	2, 0
.L3019:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L3017
	.align	2, 0
	.align	2, 0
.L3017:
	.word	.L2969
	.word	.L2976
	.word	.L2976
	.word	.L2976
	.word	.L2977
	.word	.L3015
	.word	.L3015
	.word	.L3015
	.word	.L3015
	.word	.L3015
	.word	.L3015
	.word	.L3015
	.word	.L3015
	.word	.L3015
	.word	.L3015
	.word	.L3016
.L2969:
	ldr	r0, .L3021
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xf]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3021+0x4
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x10]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x2]
	cmp	r1, #0x9
	bhi	.L2970	@cond_branch
	ldr	r1, .L3021+0x8
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L2968
.L3022:
	.align	2, 0
.L3021:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L2970:
	cmp	r1, #0x13
	bhi	.L2972	@cond_branch
	ldr	r1, .L3023
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L2968
.L3024:
	.align	2, 0
.L3023:
	.word	sTVShowState
.L2972:
	ldr	r1, .L3025
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L2968
.L3026:
	.align	2, 0
.L3025:
	.word	sTVShowState
.L2976:
	ldr	r0, .L3027
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xf]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3027+0x4
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x10]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x2]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldr	r1, .L3027+0x8
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L2968
.L3028:
	.align	2, 0
.L3027:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L2977:
	ldr	r0, .L3029
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x10]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0x18
	bls	.LCB22975
	b	.L2968	@long jump
.LCB22975:
	lsl	r0, r0, #0x2
	ldr	r1, .L3029+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3030:
	.align	2, 0
.L3029:
	.word	gStringVar2
	.word	.L3004
	.align	2, 0
	.align	2, 0
.L3004:
	.word	.L2979
	.word	.L2983
	.word	.L2983
	.word	.L2983
	.word	.L2983
	.word	.L2987
	.word	.L2987
	.word	.L2987
	.word	.L2987
	.word	.L2991
	.word	.L2991
	.word	.L2991
	.word	.L2991
	.word	.L2995
	.word	.L2995
	.word	.L2995
	.word	.L2995
	.word	.L2999
	.word	.L2999
	.word	.L2999
	.word	.L2999
	.word	.L3000
	.word	.L3001
	.word	.L3002
	.word	.L3003
.L2979:
	ldr	r1, .L3031
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L2968
.L3032:
	.align	2, 0
.L3031:
	.word	sTVShowState
.L2983:
	ldr	r1, .L3033
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L2968
.L3034:
	.align	2, 0
.L3033:
	.word	sTVShowState
.L2987:
	ldr	r1, .L3035
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L2968
.L3036:
	.align	2, 0
.L3035:
	.word	sTVShowState
.L2991:
	ldr	r1, .L3037
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L2968
.L3038:
	.align	2, 0
.L3037:
	.word	sTVShowState
.L2995:
	ldr	r1, .L3039
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L2968
.L3040:
	.align	2, 0
.L3039:
	.word	sTVShowState
.L2999:
	ldr	r1, .L3041
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L2968
.L3042:
	.align	2, 0
.L3041:
	.word	sTVShowState
.L3000:
	ldr	r1, .L3043
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L2968
.L3044:
	.align	2, 0
.L3043:
	.word	sTVShowState
.L3001:
	ldr	r1, .L3045
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L2968
.L3046:
	.align	2, 0
.L3045:
	.word	sTVShowState
.L3002:
	ldr	r1, .L3047
	mov	r0, #0xd
	strb	r0, [r1]
	b	.L2968
.L3048:
	.align	2, 0
.L3047:
	.word	sTVShowState
.L3003:
	ldr	r1, .L3049
	mov	r0, #0xe
	strb	r0, [r1]
	b	.L2968
.L3050:
	.align	2, 0
.L3049:
	.word	sTVShowState
.L3015:
	ldr	r0, .L3051
	add	r1, r4, #0x4
	ldrb	r2, [r4, #0x10]
	bl	TVShowConvertInternationalString
	ldr	r1, .L3051+0x4
	mov	r0, #0xf
	strb	r0, [r1]
	b	.L2968
.L3052:
	.align	2, 0
.L3051:
	.word	gStringVar2
	.word	sTVShowState
.L3016:
	bl	TVShowDone
.L2968:
	ldr	r0, .L3053
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L3054:
	.align	2, 0
.L3053:
	.word	sTVCutiesTextGroup
.Lfe198:
	.size	 DoTVShowSpotTheCuties,.Lfe198-DoTVShowSpotTheCuties
	.align	2, 0
	.type	 DoTVShowPokemonNewsBattleFrontier,function
	.thumb_func
DoTVShowPokemonNewsBattleFrontier:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L3095
	ldr	r0, .L3095+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L3095+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r6, r1, r0
	ldr	r1, .L3095+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L3095+0x10
	ldrb	r7, [r0]
	add	r2, r0, #0
	cmp	r7, #0x12
	bls	.LCB23179
	b	.L3056	@long jump
.LCB23179:
	lsl	r0, r7, #0x2
	ldr	r1, .L3095+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3096:
	.align	2, 0
.L3095:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L3092
	.align	2, 0
	.align	2, 0
.L3092:
	.word	.L3057
	.word	.L3086
	.word	.L3075
	.word	.L3076
	.word	.L3077
	.word	.L3086
	.word	.L3086
	.word	.L3086
	.word	.L3086
	.word	.L3086
	.word	.L3086
	.word	.L3086
	.word	.L3085
	.word	.L3086
	.word	.L3087
	.word	.L3088
	.word	.L3089
	.word	.L3090
	.word	.L3091
.L3057:
	ldrb	r0, [r6, #0xd]
	sub	r0, r0, #0x1
	cmp	r0, #0xc
	bls	.LCB23207
	b	.L3056	@long jump
.LCB23207:
	lsl	r0, r0, #0x2
	ldr	r1, .L3097
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3098:
	.align	2, 0
.L3097:
	.word	.L3072
	.align	2, 0
	.align	2, 0
.L3072:
	.word	.L3059
	.word	.L3060
	.word	.L3061
	.word	.L3062
	.word	.L3063
	.word	.L3064
	.word	.L3065
	.word	.L3066
	.word	.L3067
	.word	.L3068
	.word	.L3069
	.word	.L3070
	.word	.L3071
.L3059:
	mov	r0, #0x1
	strb	r0, [r2]
	b	.L3056
.L3060:
	mov	r0, #0x2
	strb	r0, [r2]
	b	.L3056
.L3061:
	mov	r0, #0x3
	strb	r0, [r2]
	b	.L3056
.L3062:
	mov	r0, #0x4
	strb	r0, [r2]
	b	.L3056
.L3063:
	mov	r0, #0x5
	strb	r0, [r2]
	b	.L3056
.L3064:
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L3056
.L3065:
	mov	r0, #0x7
	strb	r0, [r2]
	b	.L3056
.L3066:
	mov	r0, #0x8
	strb	r0, [r2]
	b	.L3056
.L3067:
	mov	r0, #0x9
	strb	r0, [r2]
	b	.L3056
.L3068:
	mov	r0, #0xa
	strb	r0, [r2]
	b	.L3056
.L3069:
	mov	r0, #0xb
	strb	r0, [r2]
	b	.L3056
.L3070:
	mov	r0, #0xc
	strb	r0, [r2]
	b	.L3056
.L3071:
	mov	r0, #0xd
	strb	r0, [r2]
	b	.L3056
.L3075:
	ldr	r0, .L3099
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xc]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r6, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldr	r1, .L3099+0x4
	mov	r0, #0x10
	strb	r0, [r1]
	b	.L3056
.L3100:
	.align	2, 0
.L3099:
	.word	gStringVar1
	.word	sTVShowState
.L3076:
.L3077:
	ldr	r0, .L3101
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xc]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r6, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldr	r1, .L3101+0x4
	mov	r0, #0xf
	strb	r0, [r1]
	b	.L3056
.L3102:
	.align	2, 0
.L3101:
	.word	gStringVar1
	.word	sTVShowState
.L3085:
.L3086:
	ldr	r0, .L3103
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xc]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r6, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldr	r1, .L3103+0x4
	mov	r0, #0xe
	strb	r0, [r1]
	b	.L3056
.L3104:
	.align	2, 0
.L3103:
	.word	gStringVar1
	.word	sTVShowState
.L3087:
	ldr	r0, .L3105
	ldrh	r1, [r6, #0x4]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L3105+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L3105+0x8
	ldrh	r1, [r6, #0x6]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L3105+0xc
	ldrh	r1, [r6, #0x8]
	mul	r1, r1, r5
	add	r1, r1, r4
	b	.L3094
.L3106:
	.align	2, 0
.L3105:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gStringVar3
.L3088:
	ldr	r0, .L3107
	ldrh	r1, [r6, #0x4]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L3107+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L3107+0x8
	ldrh	r1, [r6, #0x6]
	mul	r1, r1, r5
	add	r1, r1, r4
	b	.L3094
.L3108:
	.align	2, 0
.L3107:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
.L3089:
	ldr	r0, .L3109
	ldrh	r1, [r6, #0x4]
	mov	r5, #0xb
	mul	r1, r1, r5
	ldr	r4, .L3109+0x4
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L3109+0x8
	ldrh	r1, [r6, #0x6]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldr	r0, .L3109+0xc
	ldrh	r1, [r6, #0x8]
	mul	r1, r1, r5
	add	r1, r1, r4
	bl	StringCopy
	ldr	r1, .L3109+0x10
	mov	r0, #0x11
	strb	r0, [r1]
	b	.L3056
.L3110:
	.align	2, 0
.L3109:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gStringVar3
	.word	sTVShowState
.L3090:
	ldr	r0, .L3111
	ldrh	r2, [r6, #0xa]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L3111+0x4
	add	r1, r1, r2
.L3094:
	bl	StringCopy
	ldr	r1, .L3111+0x8
	mov	r0, #0x12
	strb	r0, [r1]
	b	.L3056
.L3112:
	.align	2, 0
.L3111:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	sTVShowState
.L3091:
	ldr	r0, .L3113
	add	r1, r6, #0
	add	r1, r1, #0x13
	ldrb	r2, [r6, #0xc]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L3056:
	ldr	r0, .L3113+0x4
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L3114:
	.align	2, 0
.L3113:
	.word	gStringVar1
	.word	sTVPokemonNewsBattleFrontierTextGroup
.Lfe199:
	.size	 DoTVShowPokemonNewsBattleFrontier,.Lfe199-DoTVShowPokemonNewsBattleFrontier
	.align	2, 0
	.type	 DoTVShowWhatsNo1InHoennToday,function
	.thumb_func
DoTVShowWhatsNo1InHoennToday:
	push	{r4, r5, lr}
	ldr	r2, .L3138
	ldr	r0, .L3138+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L3138+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L3138+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L3138+0x10
	ldrb	r5, [r0]
	cmp	r5, #0x8
	bls	.LCB23596
	b	.L3116	@long jump
.LCB23596:
	lsl	r0, r5, #0x2
	ldr	r1, .L3138+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3139:
	.align	2, 0
.L3138:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L3136
	.align	2, 0
	.align	2, 0
.L3136:
	.word	.L3117
	.word	.L3134
	.word	.L3134
	.word	.L3134
	.word	.L3134
	.word	.L3134
	.word	.L3133
	.word	.L3134
	.word	.L3135
.L3117:
	ldr	r0, .L3140
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x5]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x4]
	cmp	r0, #0x6
	bhi	.L3116	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L3140+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3141:
	.align	2, 0
.L3140:
	.word	gStringVar1
	.word	.L3126
	.align	2, 0
	.align	2, 0
.L3126:
	.word	.L3119
	.word	.L3120
	.word	.L3121
	.word	.L3122
	.word	.L3123
	.word	.L3124
	.word	.L3125
.L3119:
	ldr	r1, .L3142
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L3116
.L3143:
	.align	2, 0
.L3142:
	.word	sTVShowState
.L3120:
	ldr	r1, .L3144
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L3116
.L3145:
	.align	2, 0
.L3144:
	.word	sTVShowState
.L3121:
	ldr	r1, .L3146
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L3116
.L3147:
	.align	2, 0
.L3146:
	.word	sTVShowState
.L3122:
	ldr	r1, .L3148
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L3116
.L3149:
	.align	2, 0
.L3148:
	.word	sTVShowState
.L3123:
	ldr	r1, .L3150
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L3116
.L3151:
	.align	2, 0
.L3150:
	.word	sTVShowState
.L3124:
	ldr	r1, .L3152
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L3116
.L3153:
	.align	2, 0
.L3152:
	.word	sTVShowState
.L3125:
	ldr	r1, .L3154
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L3116
.L3155:
	.align	2, 0
.L3154:
	.word	sTVShowState
.L3133:
.L3134:
	ldr	r0, .L3156
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x5]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldr	r1, .L3156+0x4
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L3116
.L3157:
	.align	2, 0
.L3156:
	.word	gStringVar1
	.word	sTVShowState
.L3135:
	ldr	r0, .L3158
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x5]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L3116:
	ldr	r0, .L3158+0x4
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L3159:
	.align	2, 0
.L3158:
	.word	gStringVar1
	.word	sTVWhatsNo1InHoennTodayTextGroup
.Lfe200:
	.size	 DoTVShowWhatsNo1InHoennToday,.Lfe200-DoTVShowWhatsNo1InHoennToday
	.align	2, 0
	.globl	TVShowGetFlagCount
	.type	 TVShowGetFlagCount,function
	.thumb_func
TVShowGetFlagCount:
	push	{r4, lr}
	mov	r1, #0x0
	mov	r2, #0x0
	ldr	r3, [r0, #0xc]
	mov	r4, #0x1
.L3164:
	add	r0, r3, #0
	lsr	r0, r0, r1
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L3163	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L3163:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x1f
	bls	.L3164	@cond_branch
	add	r0, r2, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe201:
	.size	 TVShowGetFlagCount,.Lfe201-TVShowGetFlagCount
	.align	2, 0
	.type	 SecretBaseSecrets_GetStateForFlagNumber,function
	.thumb_func
SecretBaseSecrets_GetStateForFlagNumber:
	push	{r4, r5, r6, lr}
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	mov	r2, #0x0
	mov	r3, #0x0
	ldr	r1, [r0, #0xc]
	mov	r5, #0x1
	ldr	r6, .L3176
.L3171:
	add	r0, r1, #0
	lsr	r0, r0, r2
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L3170	@cond_branch
	cmp	r3, r4
	bne	.L3173	@cond_branch
	add	r0, r2, r6
	ldrb	r0, [r0]
	b	.L3175
.L3177:
	.align	2, 0
.L3176:
	.word	sTVSecretBaseSecretsStateLookup
.L3173:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
.L3170:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x1f
	bls	.L3171	@cond_branch
	mov	r0, #0x0
.L3175:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe202:
	.size	 SecretBaseSecrets_GetStateForFlagNumber,.Lfe202-SecretBaseSecrets_GetStateForFlagNumber
	.align	2, 0
	.type	 DoTVShowSecretBaseSecrets,function
	.thumb_func
DoTVShowSecretBaseSecrets:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r2, .L3259
	ldr	r0, .L3259+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L3259+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r5, r1, r0
	ldr	r1, .L3259+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L3259+0x10
	ldrb	r2, [r0]
	mov	r9, r2
	add	r2, r0, #0
	mov	r0, r9
	cmp	r0, #0x2b
	bls	.LCB23943
	b	.L3179	@long jump
.LCB23943:
	lsl	r0, r0, #0x2
	ldr	r1, .L3259+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3260:
	.align	2, 0
.L3259:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L3253
	.align	2, 0
	.align	2, 0
.L3253:
	.word	.L3180
	.word	.L3183
	.word	.L3197
	.word	.L3206
	.word	.L3213
	.word	.L3212
	.word	.L3213
	.word	.L3214
	.word	.L3215
	.word	.L3216
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3226
	.word	.L3227
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3252
	.word	.L3251
	.word	.L3252
.L3180:
	ldr	r0, .L3261
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x1c]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3261+0x4
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x1b]
	bl	TVShowConvertInternationalString
	add	r0, r5, #0
	bl	TVShowGetFlagCount
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0
	bne	.L3181	@cond_branch
	ldr	r1, .L3261+0x8
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L3179
.L3262:
	.align	2, 0
.L3261:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L3181:
	mov	r0, #0x1
	strb	r0, [r5, #0x12]
	bl	Random
	ldr	r4, .L3263
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	bl	__modsi3
	strb	r0, [r4]
	ldrb	r1, [r4]
	b	.L3255
.L3264:
	.align	2, 0
.L3263:
	.word	sTVSecretBaseSecretsRandomValues
.L3183:
	ldr	r0, .L3265
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x1b]
	bl	TVShowConvertInternationalString
	add	r0, r5, #0
	bl	TVShowGetFlagCount
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x1
	beq	.L3256	@cond_branch
	cmp	r6, #0x2
	beq	.L3186	@cond_branch
	mov	r4, #0x0
	b	.L3193
.L3266:
	.align	2, 0
.L3265:
	.word	gStringVar2
.L3186:
	strb	r6, [r5, #0x12]
	ldr	r0, .L3267
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L3187	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x1
	b	.L3257
.L3268:
	.align	2, 0
.L3267:
	.word	sTVSecretBaseSecretsRandomValues
.L3187:
	add	r0, r5, #0
	mov	r1, #0x0
	b	.L3257
.L3193:
	bl	Random
	ldr	r7, .L3269
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	bl	__modsi3
	strb	r0, [r7, #0x1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r7]
	cmp	r0, r1
	bne	.L3191	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L3269+0x4
	cmp	r4, r0
	bls	.L3193	@cond_branch
.L3191:
	mov	r0, #0x2
	strb	r0, [r5, #0x12]
	ldrb	r1, [r7, #0x1]
	b	.L3255
.L3270:
	.align	2, 0
.L3269:
	.word	sTVSecretBaseSecretsRandomValues
	.word	0xfffe
.L3197:
	ldr	r0, .L3271
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x1b]
	bl	TVShowConvertInternationalString
	add	r0, r5, #0
	bl	TVShowGetFlagCount
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x2
	bne	.L3198	@cond_branch
.L3256:
	ldr	r1, .L3271+0x4
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L3179
.L3272:
	.align	2, 0
.L3271:
	.word	gStringVar2
	.word	sTVShowState
.L3198:
	mov	r4, #0x0
	ldr	r7, .L3273
	ldr	r2, .L3273+0x4
	mov	r8, r2
.L3203:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	bl	__modsi3
	strb	r0, [r7, #0x2]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r7]
	cmp	r0, r1
	beq	.L3202	@cond_branch
	ldrb	r2, [r7, #0x1]
	cmp	r0, r2
	bne	.L3201	@cond_branch
.L3202:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, r8
	bls	.L3203	@cond_branch
.L3201:
	mov	r0, #0x3
	strb	r0, [r5, #0x12]
	ldr	r0, .L3273
	ldrb	r1, [r0, #0x2]
.L3255:
	add	r0, r5, #0
.L3257:
	bl	SecretBaseSecrets_GetStateForFlagNumber
	ldr	r1, .L3273+0x8
	strb	r0, [r1]
	b	.L3179
.L3274:
	.align	2, 0
.L3273:
	.word	sTVSecretBaseSecretsRandomValues
	.word	0xfffe
	.word	sTVShowState
.L3206:
	ldr	r0, .L3275
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x1c]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3275+0x4
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x1b]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r5, #0x2]
	mov	r0, #0x2
	bl	TV_PrintIntToStringVar
	ldrh	r0, [r5, #0x2]
	cmp	r0, #0x1e
	bhi	.L3207	@cond_branch
	ldr	r1, .L3275+0x8
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L3179
.L3276:
	.align	2, 0
.L3275:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L3207:
	cmp	r0, #0x64
	bhi	.L3209	@cond_branch
	ldr	r1, .L3277
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L3179
.L3278:
	.align	2, 0
.L3277:
	.word	sTVShowState
.L3209:
	ldr	r1, .L3279
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L3179
.L3280:
	.align	2, 0
.L3279:
	.word	sTVShowState
.L3212:
.L3213:
	ldr	r0, .L3281
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x1c]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3281+0x4
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x1b]
	bl	TVShowConvertInternationalString
	ldr	r1, .L3281+0x8
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L3179
.L3282:
	.align	2, 0
.L3281:
	.word	gStringVar1
	.word	gStringVar2
	.word	sTVShowState
.L3214:
	ldr	r0, .L3283
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x1c]
	bl	TVShowConvertInternationalString
	ldr	r0, .L3283+0x4
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x1b]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
	b	.L3179
.L3284:
	.align	2, 0
.L3283:
	.word	gStringVar1
	.word	gStringVar2
.L3215:
	mov	r0, #0x3
	b	.L3258
.L3216:
	mov	r0, #0x3
	b	.L3258
.L3226:
	ldr	r4, .L3285
	ldrh	r0, [r5, #0x10]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, .L3285+0x4
	ldrb	r0, [r5, #0x12]
	strb	r0, [r1]
	b	.L3179
.L3286:
	.align	2, 0
.L3285:
	.word	gStringVar2
	.word	sTVShowState
.L3227:
	add	r0, r5, #0
	add	r0, r0, #0x22
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L3228	@cond_branch
	mov	r0, #0x16
	b	.L3258
.L3228:
	mov	r0, #0x15
	b	.L3258
.L3251:
.L3252:
	ldrb	r0, [r5, #0x12]
.L3258:
	strb	r0, [r2]
.L3179:
	ldr	r0, .L3287
	mov	r2, r9
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L3288:
	.align	2, 0
.L3287:
	.word	sTVSecretBaseSecretsTextGroup
.Lfe203:
	.size	 DoTVShowSecretBaseSecrets,.Lfe203-DoTVShowSecretBaseSecrets
	.align	2, 0
	.type	 DoTVShowSafariFanClub,function
	.thumb_func
DoTVShowSafariFanClub:
	push	{r4, r5, lr}
	ldr	r2, .L3315
	ldr	r0, .L3315+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L3315+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L3315+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L3315+0x10
	ldrb	r5, [r0]
	add	r2, r0, #0
	cmp	r5, #0xa
	bls	.LCB24501
	b	.L3290	@long jump
.LCB24501:
	lsl	r0, r5, #0x2
	ldr	r1, .L3315+0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L3316:
	.align	2, 0
.L3315:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	.L3312
	.align	2, 0
	.align	2, 0
.L3312:
	.word	.L3291
	.word	.L3296
	.word	.L3299
	.word	.L3300
	.word	.L3310
	.word	.L3302
	.word	.L3305
	.word	.L3308
	.word	.L3309
	.word	.L3310
	.word	.L3311
.L3291:
	ldrb	r1, [r4, #0x2]
	cmp	r1, #0
	bne	.L3292	@cond_branch
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L3290
.L3292:
	cmp	r1, #0x3
	bhi	.L3294	@cond_branch
	mov	r0, #0x5
	strb	r0, [r2]
	b	.L3290
.L3294:
	mov	r0, #0x1
	strb	r0, [r2]
	b	.L3290
.L3296:
	ldr	r0, .L3317
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x4]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0
	bne	.L3297	@cond_branch
	ldr	r1, .L3317+0x4
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L3290
.L3318:
	.align	2, 0
.L3317:
	.word	gStringVar1
	.word	sTVShowState
.L3297:
	ldr	r1, .L3319
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L3290
.L3320:
	.align	2, 0
.L3319:
	.word	sTVShowState
.L3299:
	ldrb	r1, [r4, #0x3]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldr	r1, .L3321
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L3290
.L3322:
	.align	2, 0
.L3321:
	.word	sTVShowState
.L3300:
	mov	r0, #0x4
	strb	r0, [r2]
	b	.L3290
.L3302:
	ldr	r0, .L3323
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x4]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x2]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0
	beq	.L3314	@cond_branch
	b	.L3306
.L3324:
	.align	2, 0
.L3323:
	.word	gStringVar1
.L3305:
	ldr	r0, .L3325
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x4]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0
	bne	.L3306	@cond_branch
.L3314:
	ldr	r1, .L3325+0x4
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L3290
.L3326:
	.align	2, 0
.L3325:
	.word	gStringVar1
	.word	sTVShowState
.L3306:
	ldr	r1, .L3327
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L3290
.L3328:
	.align	2, 0
.L3327:
	.word	sTVShowState
.L3308:
	ldrb	r1, [r4, #0x3]
	mov	r0, #0x1
	bl	TV_PrintIntToStringVar
	ldr	r1, .L3329
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L3290
.L3330:
	.align	2, 0
.L3329:
	.word	sTVShowState
.L3309:
	mov	r0, #0x9
	strb	r0, [r2]
	b	.L3290
.L3310:
	ldr	r0, .L3331
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x4]
	bl	TVShowConvertInternationalString
	ldr	r1, .L3331+0x4
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L3290
.L3332:
	.align	2, 0
.L3331:
	.word	gStringVar1
	.word	sTVShowState
.L3311:
	bl	TVShowDone
.L3290:
	ldr	r0, .L3333
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L3334:
	.align	2, 0
.L3333:
	.word	sTVSafariFanClubTextGroup
.Lfe204:
	.size	 DoTVShowSafariFanClub,.Lfe204-DoTVShowSafariFanClub
	.align	2, 0
	.type	 DoTVShowPokemonContestLiveUpdates2,function
	.thumb_func
DoTVShowPokemonContestLiveUpdates2:
	push	{r4, r5, r6, lr}
	ldr	r2, .L3348
	ldr	r0, .L3348+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L3348+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	add	r4, r1, r0
	ldr	r1, .L3348+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r6, .L3348+0x10
	ldrb	r5, [r6]
	cmp	r5, #0x2
	bgt	.L3347	@cond_branch
	cmp	r5, #0x1
	bge	.L3343	@cond_branch
	cmp	r5, #0
	beq	.L3337	@cond_branch
	b	.L3336
.L3349:
	.align	2, 0
.L3348:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cc
	.word	gSpecialVar_Result
	.word	sTVShowState
.L3347:
	cmp	r5, #0x3
	beq	.L3344	@cond_branch
	b	.L3336
.L3337:
	ldr	r0, .L3350
	ldrb	r1, [r4, #0xa]
	bl	BufferContestName
	ldrb	r1, [r4, #0x16]
	cmp	r1, #0x1
	bne	.L3338	@cond_branch
	strb	r1, [r6]
	b	.L3336
.L3351:
	.align	2, 0
.L3350:
	.word	gStringVar1
.L3338:
	cmp	r1, #0
	bne	.L3340	@cond_branch
	mov	r0, #0x2
	strb	r0, [r6]
	b	.L3336
.L3340:
	mov	r0, #0x3
	strb	r0, [r6]
	b	.L3336
.L3343:
	ldr	r0, .L3352
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x17]
	bl	TVShowConvertInternationalString
.L3344:
	ldr	r0, .L3352+0x4
	add	r1, r4, #0
	add	r1, r1, #0xb
	ldrb	r2, [r4, #0x18]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L3336:
	ldr	r0, .L3352+0x8
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L3353:
	.align	2, 0
.L3352:
	.word	gStringVar3
	.word	gStringVar2
	.word	sTVPokemonContestLiveUpdates2TextGroup
.Lfe205:
	.size	 DoTVShowPokemonContestLiveUpdates2,.Lfe205-DoTVShowPokemonContestLiveUpdates2
	.align	2, 0
	.globl	TVShowDone
	.type	 TVShowDone,function
	.thumb_func
TVShowDone:
	ldr	r1, .L3355
	mov	r0, #0x1
	strh	r0, [r1]
	ldr	r1, .L3355+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L3355+0x8
	ldr	r2, [r0]
	ldr	r0, .L3355+0xc
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldr	r0, .L3355+0x10
	add	r2, r2, r0
	mov	r0, #0x0
	strb	r0, [r2]
	bx	lr
.L3356:
	.align	2, 0
.L3355:
	.word	gSpecialVar_Result
	.word	sTVShowState
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x27cd
.Lfe206:
	.size	 TVShowDone,.Lfe206-TVShowDone
	.align	2, 0
	.globl	ResetTVShowState
	.type	 ResetTVShowState,function
	.thumb_func
ResetTVShowState:
	ldr	r1, .L3358
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L3359:
	.align	2, 0
.L3358:
	.word	sTVShowState
.Lfe207:
	.size	 ResetTVShowState,.Lfe207-ResetTVShowState
	.comm	sCurTVShowSlot, 4	@ 1
	.comm	sTV_SecretBaseVisitMovesTemp, 16	@ 16
	.comm	sTV_DecorationsBuffer, 16	@ 16
	.comm	sTV_SecretBaseVisitMonsTemp, 80	@ 80

	.lcomm	sTVShowMixingNumPlayers,1

	.lcomm	sTVShowNewsMixingNumPlayers,1

	.lcomm	sTVShowMixingCurSlot,1
.text
	.align	2, 0


@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	sub_8124F2C
	.type	 sub_8124F2C,function
	.thumb_func
sub_8124F2C:
	push	{lr}
	ldr	r2, .L18
	ldr	r1, [r0, #0x4]
	str	r1, [r2]
	ldr	r2, .L18+0x4
	ldrb	r1, [r0, #0x1f]
	strb	r1, [r2]
	ldr	r2, .L18+0x8
	ldrb	r1, [r0, #0x19]
	strb	r1, [r2]
	ldr	r2, .L18+0xc
	ldrb	r1, [r0, #0x1a]
	strb	r1, [r2]
	ldr	r2, .L18+0x10
	ldrb	r1, [r0, #0x1b]
	strb	r1, [r2]
	ldr	r2, .L18+0x14
	ldrb	r1, [r0, #0x1c]
	strb	r1, [r2]
	ldr	r2, .L18+0x18
	ldrb	r1, [r0, #0x1d]
	strb	r1, [r2]
	ldr	r2, .L18+0x1c
	ldrb	r1, [r0, #0x1e]
	strb	r1, [r2]
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	cmp	r0, #0x22
	bls	.LCB35
	b	.L3	@long jump
.LCB35:
	lsl	r0, r0, #0x2
	ldr	r1, .L18+0x20
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L19:
	.align	2, 0
.L18:
	.word	gUnknown_03006168
	.word	gUnknown_0300617C
	.word	gUnknown_03006164
	.word	gUnknown_03006178
	.word	gUnknown_03006174
	.word	gUnknown_0300616C
	.word	gUnknown_03006180
	.word	gUnknown_03006170
	.word	.L16
	.align	2, 0
	.align	2, 0
.L16:
	.word	.L4
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L14
	.word	.L3
	.word	.L5
	.word	.L6
	.word	.L7
	.word	.L9
	.word	.L3
	.word	.L10
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L3
	.word	.L11
	.word	.L8
	.word	.L12
	.word	.L13
	.word	.L3
	.word	.L3
	.word	.L15
.L4:
	bl	sub_8125230
	b	.L3
.L5:
	bl	sub_81252E8
	b	.L3
.L6:
	bl	sub_81254E0
	ldr	r0, .L20
	ldrb	r0, [r0]
	bl	sub_81253A4
	b	.L3
.L21:
	.align	2, 0
.L20:
	.word	gUnknown_0300617C
.L7:
	bl	sub_81254E0
	bl	sub_8125630
	bl	sub_8125448
.L8:
	bl	sub_8125630
	b	.L3
.L9:
	bl	sub_81254E0
	bl	sub_81257F8
	bl	sub_81257F8
	bl	sub_81258A0
	bl	sub_8125448
	b	.L3
.L10:
	bl	sub_81256C8
	b	.L3
.L11:
	bl	sub_81254E0
	b	.L3
.L12:
	bl	sub_81257F8
	b	.L3
.L13:
	bl	sub_81258A0
	b	.L3
.L14:
	bl	sub_8125250
	mov	r0, #0x3
	bl	sub_81250B8
	b	.L3
.L15:
	bl	sub_81254E0
	bl	sub_81257F8
	bl	sub_81258A0
	bl	sub_8125448
	bl	sub_81252E8
	bl	sub_81252E8
	mov	r0, #0x2
	bl	sub_81250B8
	mov	r0, #0x4
	bl	sub_8125170
.L3:
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 sub_8124F2C,.Lfe1-sub_8124F2C
	.align	2, 0
	.type	 sub_81250B8,function
	.thumb_func
sub_81250B8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r2, #0x0
	ldr	r0, .L35
	mov	r8, r0
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.L24	@cond_branch
	ldr	r1, .L35+0x4
	mov	ip, r1
	ldr	r3, .L35+0x8
	mov	sl, r3
	ldr	r0, .L35+0xc
	mov	r9, r0
.L26:
	ldr	r1, .L35+0x10
	ldrb	r0, [r1]
	add	r0, r0, r2
	mov	r3, sl
	ldrb	r1, [r3]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	ldr	r3, .L35+0x14
	ldr	r1, [r3]
	add	r1, r1, r0
	mov	r3, r9
	ldrb	r0, [r3]
	lsl	r0, r0, #0x1
	add	r3, r1, r0
	mov	r4, #0x0
	add	r5, r2, #0x1
	mov	r0, ip
	ldrb	r0, [r0]
	cmp	r4, r0
	bcs	.L25	@cond_branch
	mov	r6, #0x80
	lsl	r6, r6, #0x8
.L30:
	ldrh	r1, [r3]
	add	r0, r6, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L29	@cond_branch
	mov	r0, #0x1f
	and	r0, r0, r1
	add	r0, r0, r7
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x1f
	bls	.L32	@cond_branch
	mov	r2, #0x1f
.L32:
	lsl	r0, r2, #0xa
	lsl	r1, r2, #0x5
	orr	r0, r0, r1
	orr	r0, r0, r2
	strh	r0, [r3]
.L29:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r3, r3, #0x2
	mov	r1, ip
	ldrb	r1, [r1]
	cmp	r4, r1
	bcc	.L30	@cond_branch
.L25:
	lsl	r0, r5, #0x18
	lsr	r2, r0, #0x18
	mov	r3, r8
	ldrb	r3, [r3]
	cmp	r2, r3
	bcc	.L26	@cond_branch
.L24:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L36:
	.align	2, 0
.L35:
	.word	gUnknown_0300616C
	.word	gUnknown_03006174
	.word	gUnknown_03006180
	.word	gUnknown_03006164
	.word	gUnknown_03006178
	.word	gUnknown_03006168
.Lfe2:
	.size	 sub_81250B8,.Lfe2-sub_81250B8
	.align	2, 0
	.type	 sub_8125170,function
	.thumb_func
sub_8125170:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r2, #0x0
	ldr	r0, .L50
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.L39	@cond_branch
	ldr	r1, .L50+0x4
	mov	sl, r1
.L41:
	ldr	r3, .L50+0x8
	ldrb	r0, [r3]
	add	r0, r0, r2
	ldr	r3, .L50+0xc
	ldrb	r1, [r3]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	ldr	r3, .L50+0x10
	ldr	r1, [r3]
	add	r1, r1, r0
	ldr	r3, .L50+0x14
	ldrb	r0, [r3]
	lsl	r0, r0, #0x1
	add	r3, r1, r0
	mov	r5, #0x0
	add	r7, r2, #0x1
	mov	r0, sl
	ldrb	r0, [r0]
	cmp	r5, r0
	bcs	.L40	@cond_branch
	mov	r1, #0x80
	lsl	r1, r1, #0x8
	mov	r9, r1
	mov	r0, #0x1f
	mov	ip, r0
	mov	r1, r8
	sub	r6, r0, r1
.L45:
	ldrh	r1, [r3]
	mov	r0, r9
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L44	@cond_branch
	mov	r4, #0x1f
	mov	r2, ip
	and	r2, r2, r1
	cmp	r2, r6
	ble	.L47	@cond_branch
	mov	r1, r8
	lsr	r0, r1, #0x1
	sub	r0, r4, r0
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L47:
	lsl	r0, r2, #0xa
	lsl	r1, r2, #0x5
	orr	r0, r0, r1
	orr	r0, r0, r2
	strh	r0, [r3]
.L44:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r3, r3, #0x2
	mov	r0, sl
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L45	@cond_branch
.L40:
	lsl	r0, r7, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L50
	ldrb	r1, [r1]
	cmp	r2, r1
	bcc	.L41	@cond_branch
.L39:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L51:
	.align	2, 0
.L50:
	.word	gUnknown_0300616C
	.word	gUnknown_03006174
	.word	gUnknown_03006178
	.word	gUnknown_03006180
	.word	gUnknown_03006168
	.word	gUnknown_03006164
.Lfe3:
	.size	 sub_8125170,.Lfe3-sub_8125170
	.align	2, 0
	.type	 sub_8125230,function
	.thumb_func
sub_8125230:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r5, .L58
.L56:
	lsl	r0, r4, #0x10
	lsr	r0, r0, #0x10
	bl	sub_8125954
	add	r4, r4, #0x1
	cmp	r4, r5
	bls	.L56	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L59:
	.align	2, 0
.L58:
	.word	0xc7f
.Lfe4:
	.size	 sub_8125230,.Lfe4-sub_8125230
	.align	2, 0
	.type	 sub_8125250,function
	.thumb_func
sub_8125250:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	mov	r2, #0x0
	ldr	r0, .L72
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.L62	@cond_branch
	ldr	r0, .L72+0x4
	mov	r8, r0
	ldr	r3, .L72+0x8
.L64:
	ldr	r0, .L72+0xc
	ldrb	r1, [r0]
	add	r1, r1, r2
	ldr	r0, .L72+0x10
	ldrb	r0, [r0]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r4, r8
	ldr	r1, [r4]
	add	r1, r1, r0
	ldr	r0, .L72+0x14
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r4, r1, r0
	mov	r5, #0x0
	add	r6, r2, #0x1
	ldrb	r0, [r3]
	cmp	r5, r0
	bcs	.L63	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	add	r7, r0, #0
.L68:
	ldrh	r0, [r4]
	and	r0, r0, r7
	cmp	r0, #0
	bne	.L67	@cond_branch
	add	r0, r4, #0
	str	r3, [sp]
	bl	ConvertColorToGrayscale
	strh	r0, [r4]
	ldr	r3, [sp]
.L67:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r4, r4, #0x2
	ldrb	r0, [r3]
	cmp	r5, r0
	bcc	.L68	@cond_branch
.L63:
	lsl	r0, r6, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L72
	ldrb	r0, [r0]
	cmp	r2, r0
	bcc	.L64	@cond_branch
.L62:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L73:
	.align	2, 0
.L72:
	.word	gUnknown_0300616C
	.word	gUnknown_03006168
	.word	gUnknown_03006174
	.word	gUnknown_03006178
	.word	gUnknown_03006180
	.word	gUnknown_03006164
.Lfe5:
	.size	 sub_8125250,.Lfe5-sub_8125250
	.align	2, 0
	.type	 sub_81252E8,function
	.thumb_func
sub_81252E8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	mov	r2, #0x0
	ldr	r0, .L85
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.L76	@cond_branch
	ldr	r0, .L85+0x4
	mov	r8, r0
	ldr	r3, .L85+0x8
.L78:
	ldr	r0, .L85+0xc
	ldrb	r1, [r0]
	ldrb	r0, [r3]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r4, r8
	ldr	r1, [r4]
	add	r1, r1, r0
	ldr	r0, .L85+0x10
	ldrb	r0, [r0]
	add	r0, r0, r2
	lsl	r0, r0, #0x1
	add	r4, r1, r0
	ldrh	r1, [r4]
	mov	r0, sp
	strh	r1, [r0]
	mov	r5, #0x1
	ldrb	r0, [r3]
	lsl	r0, r0, #0x1
	add	r4, r4, r0
	ldr	r0, .L85+0x14
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	add	r7, r2, #0x1
	cmp	r5, r0
	bge	.L77	@cond_branch
	ldr	r6, .L85+0x8
.L81:
	ldrh	r0, [r4]
	mov	r2, #0x80
	lsl	r2, r2, #0x8
	add	r1, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L82	@cond_branch
	ldrb	r2, [r6]
	lsl	r2, r2, #0x1
	add	r2, r4, r2
	mov	r0, sp
	add	r1, r4, #0
	str	r3, [sp, #0x4]
	bl	sub_8125E18
	strh	r0, [r4]
	mov	r1, sp
	strh	r0, [r1]
	ldr	r3, [sp, #0x4]
.L82:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r4, r4, r0
	ldr	r0, .L85+0x14
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r5, r0
	blt	.L81	@cond_branch
.L77:
	lsl	r0, r7, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L85
	ldrb	r0, [r0]
	cmp	r2, r0
	bcc	.L78	@cond_branch
.L76:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L86:
	.align	2, 0
.L85:
	.word	gUnknown_03006174
	.word	gUnknown_03006168
	.word	gUnknown_03006180
	.word	gUnknown_03006178
	.word	gUnknown_03006164
	.word	gUnknown_0300616C
.Lfe6:
	.size	 sub_81252E8,.Lfe6-sub_81252E8
	.align	2, 0
	.type	 sub_81253A4,function
	.thumb_func
sub_81253A4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r2, #0x0
	ldr	r0, .L99
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.L89	@cond_branch
	ldr	r0, .L99+0x4
	mov	r9, r0
	ldr	r3, .L99+0x8
.L91:
	ldr	r0, .L99+0xc
	ldrb	r1, [r0]
	add	r1, r1, r2
	ldr	r0, .L99+0x10
	ldrb	r0, [r0]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r4, r9
	ldr	r1, [r4]
	add	r1, r1, r0
	ldr	r0, .L99+0x14
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r4, r1, r0
	mov	r5, #0x0
	add	r6, r2, #0x1
	ldrb	r0, [r3]
	cmp	r5, r0
	bcs	.L90	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	add	r7, r0, #0
.L95:
	ldrh	r0, [r4]
	and	r0, r0, r7
	cmp	r0, #0
	bne	.L94	@cond_branch
	add	r0, r4, #0
	mov	r1, r8
	str	r3, [sp]
	bl	ConvertCoolColor
	strh	r0, [r4]
	ldr	r3, [sp]
.L94:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r4, r4, #0x2
	ldrb	r0, [r3]
	cmp	r5, r0
	bcc	.L95	@cond_branch
.L90:
	lsl	r0, r6, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L99
	ldrb	r0, [r0]
	cmp	r2, r0
	bcc	.L91	@cond_branch
.L89:
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L100:
	.align	2, 0
.L99:
	.word	gUnknown_0300616C
	.word	gUnknown_03006168
	.word	gUnknown_03006174
	.word	gUnknown_03006178
	.word	gUnknown_03006180
	.word	gUnknown_03006164
.Lfe7:
	.size	 sub_81253A4,.Lfe7-sub_81253A4
	.align	2, 0
	.type	 sub_8125448,function
	.thumb_func
sub_8125448:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	mov	r2, #0x0
	ldr	r0, .L113
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.L103	@cond_branch
	ldr	r0, .L113+0x4
	mov	r8, r0
	ldr	r3, .L113+0x8
.L105:
	ldr	r0, .L113+0xc
	ldrb	r1, [r0]
	add	r1, r1, r2
	ldr	r0, .L113+0x10
	ldrb	r0, [r0]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r4, r8
	ldr	r1, [r4]
	add	r1, r1, r0
	ldr	r0, .L113+0x14
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r4, r1, r0
	mov	r5, #0x0
	add	r6, r2, #0x1
	ldrb	r0, [r3]
	cmp	r5, r0
	bcs	.L104	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	add	r7, r0, #0
.L109:
	ldrh	r0, [r4]
	and	r0, r0, r7
	cmp	r0, #0
	bne	.L108	@cond_branch
	add	r0, r4, #0
	str	r3, [sp]
	bl	ConvertToBlackOrWhite
	strh	r0, [r4]
	ldr	r3, [sp]
.L108:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r4, r4, #0x2
	ldrb	r0, [r3]
	cmp	r5, r0
	bcc	.L109	@cond_branch
.L104:
	lsl	r0, r6, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L113
	ldrb	r0, [r0]
	cmp	r2, r0
	bcc	.L105	@cond_branch
.L103:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L114:
	.align	2, 0
.L113:
	.word	gUnknown_0300616C
	.word	gUnknown_03006168
	.word	gUnknown_03006174
	.word	gUnknown_03006178
	.word	gUnknown_03006180
	.word	gUnknown_03006164
.Lfe8:
	.size	 sub_8125448,.Lfe8-sub_8125448
	.align	2, 0
	.type	 sub_81254E0,function
	.thumb_func
sub_81254E0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r7, #0x0
	ldr	r0, .L136
	ldrb	r0, [r0]
	cmp	r7, r0
	bcs	.L117	@cond_branch
	ldr	r0, .L136+0x4
	mov	r8, r0
.L119:
	ldr	r0, .L136+0x8
	ldrb	r1, [r0]
	add	r1, r1, r7
	ldr	r0, .L136+0xc
	ldrb	r0, [r0]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r2, r8
	ldr	r1, [r2]
	add	r1, r1, r0
	ldr	r0, .L136+0x10
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r5, r1, r0
	add	r4, r5, #0x2
	add	r0, r5, #0
	add	r1, r4, #0
	bl	sub_8125C98
	strh	r0, [r5]
	mov	r6, #0x1
	add	r5, r4, #0
	ldr	r0, .L136+0x14
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	add	r7, r7, #0x1
	cmp	r6, r0
	bge	.L121	@cond_branch
.L123:
	add	r4, r5, #0x2
	add	r0, r5, #0
	add	r1, r4, #0
	bl	sub_8125C98
	strh	r0, [r5]
	sub	r1, r5, #0x2
	add	r0, r5, #0
	bl	sub_8125C98
	strh	r0, [r5]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r5, r4, #0
	ldr	r0, .L136+0x14
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r6, r0
	blt	.L123	@cond_branch
.L121:
	sub	r1, r5, #0x2
	add	r0, r5, #0
	bl	sub_8125C98
	strh	r0, [r5]
	lsl	r0, r7, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L136
	ldrb	r0, [r0]
	cmp	r7, r0
	bcc	.L119	@cond_branch
.L117:
	mov	r6, #0x0
	ldr	r0, .L136+0x14
	ldrb	r0, [r0]
	cmp	r6, r0
	bcs	.L127	@cond_branch
	ldr	r3, .L136+0x4
	mov	r9, r3
	ldr	r0, .L136+0xc
	mov	r8, r0
.L129:
	ldr	r0, .L136+0x8
	ldrb	r0, [r0]
	mov	r2, r8
	ldrb	r1, [r2]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r3, r9
	ldr	r2, [r3]
	add	r2, r2, r0
	ldr	r0, .L136+0x10
	ldrb	r0, [r0]
	add	r0, r0, r6
	lsl	r0, r0, #0x1
	add	r5, r2, r0
	lsl	r1, r1, #0x1
	add	r1, r5, r1
	add	r0, r5, #0
	bl	sub_8125C98
	strh	r0, [r5]
	mov	r7, #0x1
	mov	r1, r8
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1
	add	r5, r5, r0
	ldr	r0, .L136
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	add	r6, r6, #0x1
	cmp	r7, r0
	bge	.L131	@cond_branch
	ldr	r4, .L136+0xc
.L133:
	ldrb	r1, [r4]
	lsl	r1, r1, #0x1
	add	r1, r5, r1
	add	r0, r5, #0
	bl	sub_8125C98
	strh	r0, [r5]
	ldrb	r1, [r4]
	lsl	r1, r1, #0x1
	sub	r1, r5, r1
	add	r0, r5, #0
	bl	sub_8125C98
	strh	r0, [r5]
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldrb	r0, [r4]
	lsl	r0, r0, #0x1
	add	r5, r5, r0
	ldr	r0, .L136
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r7, r0
	blt	.L133	@cond_branch
.L131:
	mov	r2, r8
	ldrb	r1, [r2]
	lsl	r1, r1, #0x1
	sub	r1, r5, r1
	add	r0, r5, #0
	bl	sub_8125C98
	strh	r0, [r5]
	lsl	r0, r6, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L136+0x14
	ldrb	r0, [r0]
	cmp	r6, r0
	bcc	.L129	@cond_branch
.L127:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L137:
	.align	2, 0
.L136:
	.word	gUnknown_0300616C
	.word	gUnknown_03006168
	.word	gUnknown_03006178
	.word	gUnknown_03006180
	.word	gUnknown_03006164
	.word	gUnknown_03006174
.Lfe9:
	.size	 sub_81254E0,.Lfe9-sub_81254E0
	.align	2, 0
	.type	 sub_8125630,function
	.thumb_func
sub_8125630:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	mov	r2, #0x0
	ldr	r0, .L150
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.L140	@cond_branch
	ldr	r0, .L150+0x4
	mov	r8, r0
	ldr	r3, .L150+0x8
.L142:
	ldr	r0, .L150+0xc
	ldrb	r1, [r0]
	add	r1, r1, r2
	ldr	r0, .L150+0x10
	ldrb	r0, [r0]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r4, r8
	ldr	r1, [r4]
	add	r1, r1, r0
	ldr	r0, .L150+0x14
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r4, r1, r0
	mov	r5, #0x0
	add	r6, r2, #0x1
	ldrb	r0, [r3]
	cmp	r5, r0
	bcs	.L141	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	add	r7, r0, #0
.L146:
	ldrh	r0, [r4]
	and	r0, r0, r7
	cmp	r0, #0
	bne	.L145	@cond_branch
	add	r0, r4, #0
	str	r3, [sp]
	bl	InvertColor
	strh	r0, [r4]
	ldr	r3, [sp]
.L145:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r4, r4, #0x2
	ldrb	r0, [r3]
	cmp	r5, r0
	bcc	.L146	@cond_branch
.L141:
	lsl	r0, r6, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L150
	ldrb	r0, [r0]
	cmp	r2, r0
	bcc	.L142	@cond_branch
.L140:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L151:
	.align	2, 0
.L150:
	.word	gUnknown_0300616C
	.word	gUnknown_03006168
	.word	gUnknown_03006174
	.word	gUnknown_03006178
	.word	gUnknown_03006180
	.word	gUnknown_03006164
.Lfe10:
	.size	 sub_8125630,.Lfe10-sub_8125630
	.align	2, 0
	.type	 sub_81256C8,function
	.thumb_func
sub_81256C8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	ldr	r0, .L192
	ldr	r4, [r0]
	mov	r6, #0x0
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	add	r5, r0, #0
.L156:
	mov	r7, #0x0
.L160:
	ldrh	r0, [r4]
	and	r0, r0, r5
	cmp	r0, #0
	bne	.L159	@cond_branch
	add	r0, r4, #0
	bl	InvertColor
	strh	r0, [r4]
.L159:
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	add	r4, r4, #0x2
	cmp	r7, #0x3f
	bls	.L160	@cond_branch
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x3f
	bls	.L156	@cond_branch
	mov	r7, #0x0
	ldr	r1, .L192
	mov	sl, r1
	mov	r3, sp
	mov	r2, #0x80
	lsl	r2, r2, #0x8
	mov	r9, r2
.L167:
	lsl	r0, r7, #0x1
	mov	r2, sl
	ldr	r1, [r2]
	add	r4, r1, r0
	ldrh	r1, [r4]
	strh	r1, [r3]
	mov	r1, r9
	strh	r1, [r4]
	mov	r6, #0x1
	add	r4, r4, #0x80
	add	r5, r0, #0
.L171:
	ldrh	r0, [r4]
	mov	r2, #0x80
	lsl	r2, r2, #0x8
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L170	@cond_branch
	add	r2, r4, #0
	add	r2, r2, #0x80
	mov	r0, sp
	add	r1, r4, #0
	str	r3, [sp, #0x4]
	bl	sub_8125F38
	strh	r0, [r4]
	ldr	r3, [sp, #0x4]
	strh	r0, [r3]
.L170:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r4, r4, #0x80
	cmp	r6, #0x3e
	bls	.L171	@cond_branch
	mov	r0, r9
	strh	r0, [r4]
	mov	r1, sl
	ldr	r0, [r1]
	add	r4, r0, r5
	ldrh	r0, [r4]
	strh	r0, [r3]
	mov	r2, r9
	strh	r2, [r4]
	mov	r6, #0x1
	add	r4, r4, #0x80
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	mov	r8, r0
.L177:
	ldrh	r0, [r4]
	mov	r1, r8
	and	r0, r0, r1
	add	r5, r4, #0
	add	r5, r5, #0x80
	cmp	r0, #0
	bne	.L176	@cond_branch
	mov	r0, sp
	add	r1, r4, #0
	add	r2, r5, #0
	str	r3, [sp, #0x4]
	bl	sub_8125F38
	strh	r0, [r4]
	ldr	r3, [sp, #0x4]
	strh	r0, [r3]
.L176:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r4, r5, #0
	cmp	r6, #0x3e
	bls	.L177	@cond_branch
	mov	r2, r9
	strh	r2, [r4]
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0x3f
	bls	.L167	@cond_branch
	ldr	r0, .L192
	ldr	r4, [r0]
	mov	r6, #0x0
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	mov	r8, r0
.L184:
	mov	r7, #0x0
	add	r5, r6, #0x1
.L188:
	ldrh	r0, [r4]
	mov	r1, r8
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L187	@cond_branch
	add	r0, r4, #0
	bl	InvertColor
	strh	r0, [r4]
.L187:
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	add	r4, r4, #0x2
	cmp	r7, #0x3f
	bls	.L188	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x3f
	bls	.L184	@cond_branch
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L193:
	.align	2, 0
.L192:
	.word	gUnknown_03006168
.Lfe11:
	.size	 sub_81256C8,.Lfe11-sub_81256C8
	.align	2, 0
	.type	 sub_81257F8,function
	.thumb_func
sub_81257F8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	mov	r2, #0x0
	ldr	r0, .L206
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.L196	@cond_branch
	ldr	r0, .L206+0x4
	mov	r8, r0
.L198:
	ldr	r0, .L206+0x8
	ldrb	r1, [r0]
	add	r1, r1, r2
	ldr	r0, .L206+0xc
	ldrb	r0, [r0]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r3, r8
	ldr	r1, [r3]
	add	r1, r1, r0
	ldr	r0, .L206+0x10
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r4, r1, r0
	ldrh	r1, [r4]
	mov	r0, sp
	strh	r1, [r0]
	mov	r5, #0x1
	add	r4, r4, #0x2
	ldr	r0, .L206+0x14
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	add	r6, r2, #0x1
	cmp	r5, r0
	bge	.L197	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	add	r7, r0, #0
.L202:
	ldrh	r0, [r4]
	and	r0, r0, r7
	cmp	r0, #0
	bne	.L201	@cond_branch
	mov	r0, sp
	add	r1, r4, #0
	bl	sub_8125CF4
	strh	r0, [r4]
	mov	r1, sp
	strh	r0, [r1]
.L201:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r4, r4, #0x2
	ldr	r0, .L206+0x14
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r5, r0
	blt	.L202	@cond_branch
.L197:
	lsl	r0, r6, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L206
	ldrb	r0, [r0]
	cmp	r2, r0
	bcc	.L198	@cond_branch
.L196:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L207:
	.align	2, 0
.L206:
	.word	gUnknown_0300616C
	.word	gUnknown_03006168
	.word	gUnknown_03006178
	.word	gUnknown_03006180
	.word	gUnknown_03006164
	.word	gUnknown_03006174
.Lfe12:
	.size	 sub_81257F8,.Lfe12-sub_81257F8
	.align	2, 0
	.type	 sub_81258A0,function
	.thumb_func
sub_81258A0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	mov	r2, #0x0
	ldr	r0, .L220
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.L210	@cond_branch
	ldr	r0, .L220+0x4
	mov	r8, r0
	ldr	r7, .L220+0x8
.L212:
	ldr	r0, .L220+0xc
	ldrb	r1, [r0]
	ldrb	r0, [r7]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r3, r8
	ldr	r1, [r3]
	add	r1, r1, r0
	ldr	r0, .L220+0x10
	ldrb	r0, [r0]
	add	r0, r0, r2
	lsl	r0, r0, #0x1
	add	r4, r1, r0
	ldrh	r1, [r4]
	mov	r0, sp
	strh	r1, [r0]
	mov	r5, #0x1
	ldrb	r0, [r7]
	lsl	r0, r0, #0x1
	add	r4, r4, r0
	ldr	r0, .L220+0x14
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	add	r6, r2, #0x1
	cmp	r5, r0
	bge	.L211	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	add	r2, r0, #0
.L216:
	ldrh	r0, [r4]
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L215	@cond_branch
	mov	r0, sp
	add	r1, r4, #0
	str	r2, [sp, #0x4]
	bl	sub_8125CF4
	strh	r0, [r4]
	mov	r1, sp
	strh	r0, [r1]
	ldr	r2, [sp, #0x4]
.L215:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldrb	r0, [r7]
	lsl	r0, r0, #0x1
	add	r4, r4, r0
	ldr	r0, .L220+0x14
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r5, r0
	blt	.L216	@cond_branch
.L211:
	lsl	r0, r6, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L220
	ldrb	r0, [r0]
	cmp	r2, r0
	bcc	.L212	@cond_branch
.L210:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L221:
	.align	2, 0
.L220:
	.word	gUnknown_03006174
	.word	gUnknown_03006168
	.word	gUnknown_03006180
	.word	gUnknown_03006178
	.word	gUnknown_03006164
	.word	gUnknown_0300616C
.Lfe13:
	.size	 sub_81258A0,.Lfe13-sub_81258A0
	.align	2, 0
	.type	 sub_8125954,function
	.thumb_func
sub_8125954:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x20
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	sl, r0
	mov	r2, sp
	ldr	r3, .L263
	lsl	r1, r0, #0x1
	add	r1, r1, sl
	add	r0, r1, r3
	ldrb	r0, [r0]
	strb	r0, [r2]
	add	r0, r3, #0x1
	add	r0, r1, r0
	ldrb	r0, [r0]
	strb	r0, [r2, #0x1]
	mov	r5, sp
	add	r0, r3, #0x2
	add	r1, r1, r0
	ldrb	r4, [r1]
	lsl	r2, r4, #0x18
	lsr	r1, r2, #0x1b
	mov	r0, #0x7
	and	r1, r1, r0
	strh	r1, [r5, #0x2]
	lsr	r2, r2, #0x19
	mov	r9, r2
	mov	r0, #0x3
	and	r2, r2, r0
	mov	r9, r2
	mov	r5, #0x1
	and	r5, r5, r4
	mov	r4, #0x1
	mov	r8, r4
	cmp	r8, r1
	bcs	.L224	@cond_branch
	mov	r3, sp
.L226:
	cmp	r5, #0
	bne	.L227	@cond_branch
	mov	r0, r8
	lsl	r2, r0, #0x2
	mov	r4, sp
	add	r1, r4, r2
	ldrb	r0, [r3]
	mov	r4, r8
	sub	r0, r0, r4
	strb	r0, [r1]
	ldrb	r0, [r3, #0x1]
	add	r0, r0, r8
	b	.L262
.L264:
	.align	2, 0
.L263:
	.word	gUnknown_085A1F94
.L227:
	mov	r0, r8
	lsl	r2, r0, #0x2
	mov	r4, sp
	add	r1, r4, r2
	ldrb	r0, [r3]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldrb	r0, [r3, #0x1]
	sub	r0, r0, #0x1
.L262:
	strb	r0, [r1, #0x1]
	add	r2, r2, sp
	ldrb	r0, [r2]
	cmp	r0, #0x3f
	bhi	.L230	@cond_branch
	ldrb	r0, [r2, #0x1]
	cmp	r0, #0x3f
	bls	.L229	@cond_branch
.L230:
	mov	r0, r8
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x2]
	b	.L224
.L229:
	ldrh	r0, [r3, #0x2]
	mov	r1, r8
	sub	r0, r0, r1
	strh	r0, [r2, #0x2]
	mov	r0, r8
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldrh	r0, [r3, #0x2]
	cmp	r8, r0
	bcc	.L226	@cond_branch
.L224:
	mov	r2, #0x0
	mov	r8, r2
	mov	r0, sp
	ldrh	r0, [r0, #0x2]
	cmp	r8, r0
	bcc	.LCB1837
	b	.L233	@long jump
.LCB1837:
	mov	r3, #0x1f
.L235:
	ldr	r1, .L265
	mov	r4, r8
	lsl	r0, r4, #0x2
	mov	r2, sp
	add	r6, r2, r0
	ldrb	r0, [r6, #0x1]
	lsl	r0, r0, #0x7
	ldr	r1, [r1]
	add	r1, r1, r0
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r2, r1, r0
	ldrh	r1, [r2]
	mov	r4, #0x80
	lsl	r4, r4, #0x8
	add	r0, r4, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L234	@cond_branch
	mov	r7, #0x1f
	and	r7, r7, r1
	lsl	r0, r1, #0x10
	lsr	r5, r0, #0x15
	and	r5, r5, r3
	lsr	r4, r0, #0x1a
	and	r4, r4, r3
	mov	r0, r9
	cmp	r0, #0
	blt	.L237	@cond_branch
	cmp	r0, #0x1
	ble	.L239	@cond_branch
	cmp	r0, #0x3
	bgt	.L237	@cond_branch
	ldrh	r0, [r6, #0x2]
	add	r1, r7, r0
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	add	r1, r5, r0
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	add	r0, r4, r0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r7, #0x1f
	bls	.L255	@cond_branch
	mov	r7, #0x1f
	b	.L255
.L266:
	.align	2, 0
.L265:
	.word	gUnknown_03006168
.L239:
	mov	r1, sl
	lsl	r0, r1, #0x1
	add	r0, r0, sl
	ldr	r1, .L267
	add	r1, r1, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsr	r0, r0, #0x3
	mov	r1, #0x7
	and	r0, r0, r1
	mov	r1, #0x3
	str	r2, [sp, #0x18]
	str	r3, [sp, #0x1c]
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, [sp, #0x18]
	ldr	r3, [sp, #0x1c]
	cmp	r0, #0x1
	beq	.L244	@cond_branch
	cmp	r0, #0x1
	bgt	.L252	@cond_branch
	cmp	r0, #0
	beq	.L241	@cond_branch
	b	.L237
.L268:
	.align	2, 0
.L267:
	.word	gUnknown_085A1F94
.L252:
	cmp	r0, #0x2
	beq	.L247	@cond_branch
	b	.L237
.L241:
	ldrh	r0, [r6, #0x2]
	cmp	r7, r0
	bcc	.L242	@cond_branch
	sub	r0, r7, r0
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	b	.L237
.L242:
	mov	r7, #0x0
	b	.L237
.L244:
	ldrh	r0, [r6, #0x2]
	cmp	r5, r0
	bcc	.L245	@cond_branch
	sub	r0, r5, r0
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	b	.L237
.L245:
	mov	r5, #0x0
	b	.L237
.L247:
	ldrh	r0, [r6, #0x2]
	cmp	r4, r0
	bcc	.L248	@cond_branch
	sub	r0, r4, r0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	b	.L237
.L248:
	mov	r4, #0x0
	b	.L237
.L255:
	cmp	r5, #0x1f
	bls	.L256	@cond_branch
	mov	r5, #0x1f
.L256:
	cmp	r4, #0x1f
	bls	.L237	@cond_branch
	mov	r4, #0x1f
.L237:
	lsl	r0, r4, #0xa
	lsl	r1, r5, #0x5
	orr	r0, r0, r1
	orr	r7, r7, r0
	strh	r7, [r2]
.L234:
	mov	r0, r8
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r0, sp
	ldrh	r0, [r0, #0x2]
	cmp	r8, r0
	bcs	.LCB2032
	b	.L235	@long jump
.LCB2032:
.L233:
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 sub_8125954,.Lfe14-sub_8125954
	.align	2, 0
	.type	 ConvertColorToGrayscale,function
	.thumb_func
ConvertColorToGrayscale:
	ldrh	r2, [r0]
	mov	r0, #0x1f
	add	r1, r2, #0
	and	r1, r1, r0
	asr	r3, r2, #0x5
	and	r3, r3, r0
	asr	r2, r2, #0xa
	and	r2, r2, r0
	mov	r0, #0x4c
	mul	r1, r1, r0
	mov	r0, #0x97
	mul	r0, r0, r3
	add	r1, r1, r0
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r1, r1, r0
	asr	r1, r1, #0x8
	lsl	r0, r1, #0xa
	lsl	r2, r1, #0x5
	orr	r0, r0, r2
	orr	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bx	lr
.Lfe15:
	.size	 ConvertColorToGrayscale,.Lfe15-ConvertColorToGrayscale
	.align	2, 0
	.type	 ConvertCoolColor,function
	.thumb_func
ConvertCoolColor:
	push	{r4, lr}
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldrh	r0, [r0]
	mov	r2, #0x1f
	mov	r1, #0x1f
	and	r1, r1, r0
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x15
	and	r3, r3, r2
	lsr	r0, r0, #0x1a
	and	r0, r0, r2
	cmp	r1, #0x10
	bhi	.L271	@cond_branch
	cmp	r3, #0x10
	bhi	.L271	@cond_branch
	cmp	r0, #0x10
	bhi	.L271	@cond_branch
	add	r0, r4, #0
	bl	GetCoolColorFromPersonality
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L273
.L271:
	ldr	r0, .L274
.L273:
	pop	{r4}
	pop	{r1}
	bx	r1
.L275:
	.align	2, 0
.L274:
	.word	0x7fff
.Lfe16:
	.size	 ConvertCoolColor,.Lfe16-ConvertCoolColor
	.align	2, 0
	.type	 GetCoolColorFromPersonality,function
	.thumb_func
GetCoolColorFromPersonality:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r8, r0
	mov	r6, #0x0
	mov	r7, #0x0
	add	r0, r4, #0
	mov	r1, #0x6
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x3
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	mov	r1, #0x6
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	bhi	.L277	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L287
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L288:
	.align	2, 0
.L287:
	.word	.L284
	.align	2, 0
	.align	2, 0
.L284:
	.word	.L278
	.word	.L279
	.word	.L280
	.word	.L281
	.word	.L282
	.word	.L283
.L278:
	mov	r0, #0x15
	sub	r0, r0, r5
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	add	r7, r6, #0
	mov	r1, #0x0
	mov	r8, r1
	b	.L277
.L279:
	mov	r7, #0x0
	mov	r0, #0x15
	sub	r0, r0, r5
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	mov	r6, r8
	b	.L277
.L280:
	mov	r0, #0x15
	sub	r0, r0, r5
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r6, #0x0
	mov	r8, r7
	b	.L277
.L281:
	mov	r7, #0x0
	mov	r6, #0x0
	mov	r0, #0x17
	sub	r0, r0, r5
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L286
.L282:
	mov	r0, #0x17
	sub	r0, r0, r5
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r6, #0x0
	mov	r8, r6
	b	.L277
.L283:
	mov	r7, #0x0
	mov	r0, #0x17
	sub	r0, r0, r5
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	mov	r0, #0x0
.L286:
	mov	r8, r0
.L277:
	lsl	r0, r7, #0xa
	lsl	r1, r6, #0x5
	orr	r0, r0, r1
	mov	r1, r8
	orr	r1, r1, r0
	lsl	r0, r1, #0x10
	lsr	r0, r0, #0x10
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 GetCoolColorFromPersonality,.Lfe17-GetCoolColorFromPersonality
	.align	2, 0
	.type	 ConvertToBlackOrWhite,function
	.thumb_func
ConvertToBlackOrWhite:
	push	{lr}
	ldrh	r0, [r0]
	mov	r2, #0x1f
	mov	r1, #0x1f
	and	r1, r1, r0
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x15
	and	r3, r3, r2
	lsr	r0, r0, #0x1a
	and	r0, r0, r2
	cmp	r1, #0x10
	bhi	.L290	@cond_branch
	cmp	r3, #0x10
	bhi	.L290	@cond_branch
	cmp	r0, #0x10
	bhi	.L290	@cond_branch
	mov	r0, #0x0
	b	.L292
.L290:
	ldr	r0, .L293
.L292:
	pop	{r1}
	bx	r1
.L294:
	.align	2, 0
.L293:
	.word	0x7fff
.Lfe18:
	.size	 ConvertToBlackOrWhite,.Lfe18-ConvertToBlackOrWhite
	.align	2, 0
	.type	 sub_8125C98,function
	.thumb_func
sub_8125C98:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r3, [r4]
	cmp	r3, #0
	beq	.L296	@cond_branch
	mov	r2, #0x80
	lsl	r2, r2, #0x8
	add	r0, r2, #0
	and	r0, r0, r3
	cmp	r0, #0
	beq	.L297	@cond_branch
	add	r0, r2, #0
	b	.L299
.L297:
	ldrh	r1, [r1]
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L296	@cond_branch
	ldrh	r0, [r4]
	b	.L299
.L296:
	mov	r0, #0x0
.L299:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 sub_8125C98,.Lfe19-sub_8125C98
	.align	2, 0
	.type	 InvertColor,function
	.thumb_func
InvertColor:
	push	{r4, lr}
	ldrh	r1, [r0]
	mov	r0, #0x1f
	mov	r3, #0x1f
	and	r3, r3, r1
	lsl	r1, r1, #0x10
	lsr	r2, r1, #0x15
	lsr	r1, r1, #0x1a
	sub	r3, r0, r3
	add	r4, r0, #0
	bic	r4, r4, r2
	add	r2, r4, #0
	bic	r0, r0, r1
	lsl	r0, r0, #0xa
	lsl	r2, r2, #0x5
	orr	r0, r0, r2
	orr	r0, r0, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe20:
	.size	 InvertColor,.Lfe20-InvertColor
	.align	2, 0
	.type	 sub_8125CF4,function
	.thumb_func
sub_8125CF4:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x14
	add	r7, r1, #0
	ldrh	r4, [r0]
	ldrh	r5, [r7]
	lsl	r6, r4, #0x10
	lsl	r0, r5, #0x10
	mov	ip, r0
	cmp	r4, r5
	beq	.L323	@cond_branch
	mov	r2, sp
	mov	r3, #0x1f
	mov	r1, #0x1f
	add	r0, r1, #0
	and	r0, r0, r4
	strh	r0, [r2]
	lsr	r0, r6, #0x15
	and	r0, r0, r3
	strh	r0, [r2, #0x2]
	lsr	r0, r6, #0x1a
	and	r0, r0, r3
	strh	r0, [r2, #0x4]
	mov	r0, sp
	and	r1, r1, r5
	strh	r1, [r0, #0x6]
	mov	r1, sp
	mov	r2, ip
	lsr	r0, r2, #0x15
	and	r0, r0, r3
	strh	r0, [r1, #0x8]
	lsr	r0, r2, #0x1a
	and	r0, r0, r3
	strh	r0, [r1, #0xa]
	mov	r0, sp
	ldrh	r0, [r0]
	cmp	r0, #0x19
	bls	.L303	@cond_branch
	mov	r0, sp
	ldrh	r0, [r0, #0x2]
	cmp	r0, #0x19
	bls	.L303	@cond_branch
	mov	r0, sp
	ldrh	r0, [r0, #0x4]
	cmp	r0, #0x19
	bhi	.L323	@cond_branch
.L303:
	mov	r0, sp
	ldrh	r0, [r0, #0x6]
	cmp	r0, #0x19
	bls	.L304	@cond_branch
	mov	r0, sp
	ldrh	r0, [r0, #0x8]
	cmp	r0, #0x19
	bls	.L304	@cond_branch
	mov	r0, sp
	ldrh	r0, [r0, #0xa]
	cmp	r0, #0x19
	bls	.L304	@cond_branch
.L323:
	ldrh	r0, [r7]
	b	.L322
.L304:
	mov	r4, #0x0
	add	r6, sp, #0xc
	mov	r7, sp
	add	r7, r7, #0x6
	add	r5, r6, #0
.L308:
	lsl	r2, r4, #0x1
	mov	r1, sp
	add	r0, r1, r2
	add	r1, r7, r2
	ldrh	r3, [r0]
	ldrh	r0, [r1]
	cmp	r3, r0
	bls	.L309	@cond_branch
	add	r1, r5, r2
	sub	r0, r3, r0
	b	.L324
.L309:
	add	r1, r5, r2
	sub	r0, r0, r3
.L324:
	strh	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L308	@cond_branch
	add	r1, r6, #0
	ldrh	r0, [r1, #0x2]
	ldrh	r3, [r1]
	cmp	r3, r0
	bcc	.L312	@cond_branch
	ldrh	r2, [r1, #0x4]
	cmp	r3, r2
	bcc	.L313	@cond_branch
	add	r2, r3, #0
	b	.L317
.L313:
	cmp	r0, r2
	bcs	.L325	@cond_branch
	b	.L326
.L312:
	ldrh	r2, [r1, #0x4]
	cmp	r0, r2
	bcc	.L318	@cond_branch
.L325:
	ldrh	r2, [r1, #0x2]
	b	.L317
.L318:
	cmp	r2, r3
	bcc	.L320	@cond_branch
.L326:
	ldrh	r2, [r1, #0x4]
	b	.L317
.L320:
	ldrh	r2, [r6]
.L317:
	mov	r0, sp
	ldrh	r1, [r0, #0x6]
	lsr	r0, r2, #0x1
	mov	r6, #0x1f
	sub	r6, r6, r0
	mov	r0, r1
	mul	r0, r0, r6
	mov	r1, #0x1f
	bl	__divsi3
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r0, sp
	ldrh	r0, [r0, #0x8]
	mul	r0, r0, r6
	mov	r1, #0x1f
	bl	__divsi3
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r0, sp
	ldrh	r0, [r0, #0xa]
	mul	r0, r0, r6
	mov	r1, #0x1f
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x6
	lsl	r4, r4, #0x5
	orr	r0, r0, r4
	orr	r5, r5, r0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r5, #0
.L322:
	add	sp, sp, #0x14
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 sub_8125CF4,.Lfe21-sub_8125CF4
	.align	2, 0
	.type	 sub_8125E18,function
	.thumb_func
sub_8125E18:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	add	r3, r0, #0
	mov	sl, r1
	str	r2, [sp]
	ldrh	r1, [r3]
	mov	r0, sl
	ldrh	r0, [r0]
	cmp	r1, r0
	bne	.L328	@cond_branch
	ldrh	r0, [r2]
	cmp	r0, r1
	bne	.L328	@cond_branch
	mov	r1, sl
	ldrh	r0, [r1]
	b	.L337
.L328:
	mov	r2, sl
	ldrh	r0, [r2]
	mov	r1, #0x1f
	mov	r9, r1
	mov	r4, #0x1f
	add	r5, r4, #0
	and	r5, r5, r0
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x15
	mov	r1, r9
	and	r1, r1, r2
	mov	r8, r1
	lsr	r0, r0, #0x1a
	mov	r2, r9
	and	r2, r2, r0
	str	r2, [sp, #0x4]
	ldrh	r2, [r3]
	add	r0, r4, #0
	and	r0, r0, r2
	lsl	r2, r2, #0x10
	lsr	r1, r2, #0x15
	mov	r3, r9
	and	r1, r1, r3
	add	r0, r0, r1
	lsr	r2, r2, #0x1a
	and	r2, r2, r3
	add	r0, r0, r2
	mov	r1, #0x3
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r1, r8
	add	r0, r5, r1
	ldr	r2, [sp, #0x4]
	add	r0, r0, r2
	mov	r1, #0x3
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r3, [sp]
	ldrh	r1, [r3]
	and	r4, r4, r1
	lsl	r1, r1, #0x10
	lsr	r0, r1, #0x15
	mov	r2, r9
	and	r0, r0, r2
	add	r4, r4, r0
	lsr	r1, r1, #0x1a
	and	r1, r1, r2
	add	r4, r4, r1
	add	r0, r4, #0
	mov	r1, #0x3
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r7, r6
	bne	.L329	@cond_branch
	cmp	r1, r6
	bne	.L329	@cond_branch
	mov	r3, sl
	ldrh	r0, [r3]
	b	.L337
.L329:
	cmp	r7, r6
	bls	.L330	@cond_branch
	sub	r0, r7, r6
	b	.L338
.L330:
	sub	r0, r6, r7
.L338:
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r1, r6
	bls	.L332	@cond_branch
	sub	r0, r1, r6
	b	.L339
.L332:
	sub	r0, r6, r1
.L339:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r2, r0
	bcc	.L334	@cond_branch
	add	r0, r2, #0
.L334:
	lsr	r0, r0, #0x1
	mov	r4, #0x1f
	sub	r4, r4, r0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r0, r5
	mul	r0, r0, r4
	mov	r1, #0x1f
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	mov	r0, r8
	mul	r0, r0, r4
	mov	r1, #0x1f
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	ldr	r1, [sp, #0x4]
	mov	r0, r1
	mul	r0, r0, r4
	mov	r1, #0x1f
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x6
	mov	r2, r8
	lsl	r1, r2, #0x5
	orr	r0, r0, r1
	orr	r5, r5, r0
	lsl	r0, r5, #0x10
	lsr	r0, r0, #0x10
.L337:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe22:
	.size	 sub_8125E18,.Lfe22-sub_8125E18
	.align	2, 0
	.type	 sub_8125F38,function
	.thumb_func
sub_8125F38:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	add	r3, r0, #0
	mov	sl, r1
	str	r2, [sp]
	ldrh	r1, [r3]
	mov	r0, sl
	ldrh	r0, [r0]
	cmp	r1, r0
	bne	.L341	@cond_branch
	ldrh	r0, [r2]
	cmp	r0, r1
	bne	.L341	@cond_branch
	mov	r1, sl
	ldrh	r0, [r1]
	b	.L350
.L341:
	mov	r2, sl
	ldrh	r0, [r2]
	mov	r1, #0x1f
	mov	r9, r1
	mov	r4, #0x1f
	add	r5, r4, #0
	and	r5, r5, r0
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x15
	mov	r1, r9
	and	r1, r1, r2
	mov	r8, r1
	lsr	r0, r0, #0x1a
	mov	r2, r9
	and	r2, r2, r0
	str	r2, [sp, #0x4]
	ldrh	r2, [r3]
	add	r0, r4, #0
	and	r0, r0, r2
	lsl	r2, r2, #0x10
	lsr	r1, r2, #0x15
	mov	r3, r9
	and	r1, r1, r3
	add	r0, r0, r1
	lsr	r2, r2, #0x1a
	and	r2, r2, r3
	add	r0, r0, r2
	mov	r1, #0x3
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r1, r8
	add	r0, r5, r1
	ldr	r2, [sp, #0x4]
	add	r0, r0, r2
	mov	r1, #0x3
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r3, [sp]
	ldrh	r1, [r3]
	and	r4, r4, r1
	lsl	r1, r1, #0x10
	lsr	r0, r1, #0x15
	mov	r2, r9
	and	r0, r0, r2
	add	r4, r4, r0
	lsr	r1, r1, #0x1a
	and	r1, r1, r2
	add	r4, r4, r1
	add	r0, r4, #0
	mov	r1, #0x3
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r7, r6
	bne	.L342	@cond_branch
	cmp	r1, r6
	bne	.L342	@cond_branch
	mov	r3, sl
	ldrh	r0, [r3]
	b	.L350
.L342:
	cmp	r7, r6
	bls	.L343	@cond_branch
	sub	r0, r7, r6
	b	.L351
.L343:
	sub	r0, r6, r7
.L351:
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r1, r6
	bls	.L345	@cond_branch
	sub	r0, r1, r6
	b	.L352
.L345:
	sub	r0, r6, r1
.L352:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r2, r0
	bcc	.L347	@cond_branch
	add	r0, r2, #0
.L347:
	mov	r4, #0x1f
	sub	r4, r4, r0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r0, r5
	mul	r0, r0, r4
	mov	r1, #0x1f
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	mov	r0, r8
	mul	r0, r0, r4
	mov	r1, #0x1f
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	ldr	r1, [sp, #0x4]
	mov	r0, r1
	mul	r0, r0, r4
	mov	r1, #0x1f
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x6
	mov	r2, r8
	lsl	r1, r2, #0x5
	orr	r0, r0, r1
	orr	r5, r5, r0
	lsl	r0, r5, #0x10
	lsr	r0, r0, #0x10
.L350:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 sub_8125F38,.Lfe23-sub_8125F38
	.align	2, 0
	.globl	sub_8126058
	.type	 sub_8126058,function
	.thumb_func
sub_8126058:
	.syntax unified

    push {r4-r7,lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5-r7}
    sub sp, 0xC
    ldrb r1, [r0, 0x1D]
    lsrs r5, r1, 3
    ldrb r1, [r0, 0x1E]
    lsrs r1, 3
    str r1, [sp, 0x8]
    ldr r1, [r0, 0x4]
    str r1, [sp]
    ldr r2, [r0, 0x10]
    str r2, [sp, 0x4]
    ldrh r0, [r0, 0x16]
    cmp r0, 0x2
    bne _08126108
    movs r1, 0
    ldr r0, [sp, 0x8]
    cmp r1, r0
    bcc _08126086
    b _08126194
_08126086:
    movs r0, 0
    adds r2, r1, 0x1
    mov r10, r2
    cmp r0, r5
    bcs _081260FA
    adds r2, r1, 0
    muls r2, r5
    mov r9, r2
    lsls r1, 3
    mov r8, r1
_0812609A:
    movs r4, 0
    lsls r6, r0, 4
    adds r7, r0, 0x1
    add r0, r9
    lsls r0, 6
    ldr r1, [sp, 0x4]
    adds r1, r0
    mov r12, r1
_081260AA:
    lsls r0, r4, 3
    mov r2, r12
    adds r3, r2, r0
    mov r1, r8
    adds r0, r1, r4
    lsls r0, 3
    muls r0, r5
    lsls r0, 1
    ldr r2, [sp]
    adds r0, r2, r0
    adds r2, r0, r6
    ldrh r0, [r2, 0x2]
    lsls r0, 8
    ldrh r1, [r2]
    orrs r0, r1
    strh r0, [r3]
    ldrh r0, [r2, 0x6]
    lsls r0, 8
    ldrh r1, [r2, 0x4]
    orrs r0, r1
    strh r0, [r3, 0x2]
    ldrh r0, [r2, 0xA]
    lsls r0, 8
    ldrh r1, [r2, 0x8]
    orrs r0, r1
    strh r0, [r3, 0x4]
    ldrh r0, [r2, 0xE]
    lsls r0, 8
    ldrh r1, [r2, 0xC]
    orrs r0, r1
    strh r0, [r3, 0x6]
    adds r0, r4, 0x1
    lsls r0, 16
    lsrs r4, r0, 16
    cmp r4, 0x7
    bls _081260AA
    lsls r0, r7, 16
    lsrs r0, 16
    cmp r0, r5
    bcc _0812609A
_081260FA:
    mov r1, r10
    lsls r0, r1, 16
    lsrs r1, r0, 16
    ldr r2, [sp, 0x8]
    cmp r1, r2
    bcc _08126086
    b _08126194
_08126108:
    movs r1, 0
    ldr r0, [sp, 0x8]
    cmp r1, r0
    bcs _08126194
_08126110:
    movs r0, 0
    adds r2, r1, 0x1
    mov r10, r2
    cmp r0, r5
    bcs _08126188
    adds r2, r1, 0
    muls r2, r5
    mov r9, r2
    lsls r1, 3
    mov r8, r1
_08126124:
    movs r4, 0
    lsls r6, r0, 4
    adds r7, r0, 0x1
    add r0, r9
    lsls r0, 5
    ldr r1, [sp, 0x4]
    adds r1, r0
    mov r12, r1
_08126134:
    lsls r0, r4, 2
    mov r2, r12
    adds r3, r2, r0
    mov r1, r8
    adds r0, r1, r4
    lsls r0, 3
    muls r0, r5
    lsls r0, 1
    ldr r2, [sp]
    adds r0, r2, r0
    adds r2, r0, r6
    ldrh r1, [r2, 0x2]
    lsls r1, 4
    ldrh r0, [r2]
    orrs r1, r0
    ldrh r0, [r2, 0x4]
    lsls r0, 8
    orrs r1, r0
    ldrh r0, [r2, 0x6]
    lsls r0, 12
    orrs r1, r0
    strh r1, [r3]
    ldrh r1, [r2, 0xA]
    lsls r1, 4
    ldrh r0, [r2, 0x8]
    orrs r1, r0
    ldrh r0, [r2, 0xC]
    lsls r0, 8
    orrs r1, r0
    ldrh r0, [r2, 0xE]
    lsls r0, 12
    orrs r1, r0
    strh r1, [r3, 0x2]
    adds r0, r4, 0x1
    lsls r0, 16
    lsrs r4, r0, 16
    cmp r4, 0x7
    bls _08126134
    lsls r0, r7, 16
    lsrs r0, 16
    cmp r0, r5
    bcc _08126124
_08126188:
    mov r1, r10
    lsls r0, r1, 16
    lsrs r1, r0, 16
    ldr r2, [sp, 0x8]
    cmp r1, r2
    bcc _08126110
_08126194:
    add sp, 0xC
    pop {r3-r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4-r7}
    pop {r0}
    bx r0
.syntax divided
	.code	16
.Lfe24:
	.size	 sub_8126058,.Lfe24-sub_8126058
	.align	2, 0
	.globl	sub_81261A4
	.type	 sub_81261A4,function
	.thumb_func
sub_81261A4:
	push	{lr}
	ldr	r2, .L364
	ldrb	r1, [r0, #0x18]
	lsl	r1, r1, #0x4
	strh	r1, [r2]
	ldr	r3, .L364+0x4
	ldrh	r2, [r2]
	lsl	r2, r2, #0x1
	ldr	r1, [r0, #0x8]
	add	r1, r1, r2
	str	r1, [r3]
	ldr	r2, .L364+0x8
	ldr	r1, [r0, #0x4]
	str	r1, [r2]
	ldr	r2, .L364+0xc
	ldrb	r1, [r0, #0x19]
	strb	r1, [r2]
	ldr	r2, .L364+0x10
	ldrb	r1, [r0, #0x1a]
	strb	r1, [r2]
	ldr	r2, .L364+0x14
	ldrb	r1, [r0, #0x1b]
	strb	r1, [r2]
	ldr	r2, .L364+0x18
	ldrb	r1, [r0, #0x1c]
	strb	r1, [r2]
	ldr	r2, .L364+0x1c
	ldrb	r1, [r0, #0x1d]
	strb	r1, [r2]
	ldr	r2, .L364+0x20
	ldrb	r1, [r0, #0x1e]
	strb	r1, [r2]
	ldrh	r0, [r0, #0x14]
	cmp	r0, #0x5
	bhi	.L355	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L364+0x24
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L365:
	.align	2, 0
.L364:
	.word	gUnknown_03006188
	.word	gUnknown_03006184
	.word	gUnknown_03006168
	.word	gUnknown_03006164
	.word	gUnknown_03006178
	.word	gUnknown_03006174
	.word	gUnknown_0300616C
	.word	gUnknown_03006180
	.word	gUnknown_03006170
	.word	.L362
	.align	2, 0
	.align	2, 0
.L362:
	.word	.L356
	.word	.L357
	.word	.L358
	.word	.L359
	.word	.L360
	.word	.L361
.L356:
	mov	r0, #0x0
	bl	sub_81263A4
	b	.L355
.L357:
	mov	r0, #0x1
	bl	sub_81263A4
	b	.L355
.L358:
	bl	sub_8126270
	bl	sub_8126714
	b	.L355
.L359:
	bl	sub_8126370
	bl	sub_8126664
	b	.L355
.L360:
	bl	sub_8126334
	bl	sub_81265B4
	b	.L355
.L361:
	bl	sub_8126318
	bl	sub_81264FC
.L355:
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 sub_81261A4,.Lfe25-sub_81261A4
	.align	2, 0
	.type	 sub_8126270,function
	.thumb_func
sub_8126270:
	ldr	r2, .L367
	ldr	r1, [r2]
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, [r2]
	ldr	r2, .L367+0x4
	add	r1, r2, #0
	strh	r1, [r0, #0x2]
	ldr	r2, .L367+0x8
	add	r1, r2, #0
	strh	r1, [r0, #0x4]
	ldr	r2, .L367+0xc
	add	r1, r2, #0
	strh	r1, [r0, #0x6]
	ldr	r2, .L367+0x10
	add	r1, r2, #0
	strh	r1, [r0, #0x8]
	ldr	r2, .L367+0x14
	add	r1, r2, #0
	strh	r1, [r0, #0xa]
	ldr	r2, .L367+0x18
	add	r1, r2, #0
	strh	r1, [r0, #0xc]
	ldr	r2, .L367+0x1c
	add	r1, r2, #0
	strh	r1, [r0, #0xe]
	ldr	r2, .L367+0x20
	add	r1, r2, #0
	strh	r1, [r0, #0x10]
	ldr	r2, .L367+0x24
	add	r1, r2, #0
	strh	r1, [r0, #0x12]
	ldr	r2, .L367+0x28
	add	r1, r2, #0
	strh	r1, [r0, #0x14]
	ldr	r2, .L367+0x2c
	add	r1, r2, #0
	strh	r1, [r0, #0x16]
	ldr	r2, .L367+0x30
	add	r1, r2, #0
	strh	r1, [r0, #0x18]
	ldr	r2, .L367+0x34
	add	r1, r2, #0
	strh	r1, [r0, #0x1a]
	ldr	r2, .L367+0x38
	add	r1, r2, #0
	strh	r1, [r0, #0x1c]
	ldr	r2, .L367+0x3c
	add	r1, r2, #0
	strh	r1, [r0, #0x1e]
	bx	lr
.L368:
	.align	2, 0
.L367:
	.word	gUnknown_03006184
	.word	0x18c6
	.word	0x77bd
	.word	0x2d6b
	.word	0x18dd
	.word	0x1ba6
	.word	0x74c6
	.word	0x1bbd
	.word	0x74dd
	.word	0x77a6
	.word	0x197d
	.word	0x1bab
	.word	0x7566
	.word	0x2cdd
	.word	0x2fa6
	.word	0x74cb
.Lfe26:
	.size	 sub_8126270,.Lfe26-sub_8126270
	.align	2, 0
	.type	 sub_8126318,function
	.thumb_func
sub_8126318:
	ldr	r2, .L370
	ldr	r0, [r2]
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r2, [r2]
	strh	r1, [r2, #0x2]
	ldr	r1, .L370+0x4
	add	r0, r1, #0
	strh	r0, [r2, #0x4]
	bx	lr
.L371:
	.align	2, 0
.L370:
	.word	gUnknown_03006184
	.word	0x7fff
.Lfe27:
	.size	 sub_8126318,.Lfe27-sub_8126318
	.align	2, 0
	.type	 sub_8126334,function
	.thumb_func
sub_8126334:
	push	{r4, r5, lr}
	ldr	r1, .L378
	ldr	r0, [r1]
	mov	r2, #0x0
	strh	r2, [r0]
	ldr	r0, [r1]
	strh	r2, [r0, #0x2]
	mov	r4, #0x0
	add	r5, r1, #0
.L376:
	ldr	r0, [r5]
	lsl	r2, r4, #0x1
	add	r2, r2, r0
	add	r0, r4, #0x2
	lsl	r3, r0, #0x1
	lsl	r1, r0, #0xb
	lsl	r0, r0, #0x6
	orr	r1, r1, r0
	orr	r1, r1, r3
	strh	r1, [r2, #0x4]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xd
	bls	.L376	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L379:
	.align	2, 0
.L378:
	.word	gUnknown_03006184
.Lfe28:
	.size	 sub_8126334,.Lfe28-sub_8126334
	.align	2, 0
	.type	 sub_8126370,function
	.thumb_func
sub_8126370:
	push	{r4, lr}
	ldr	r2, .L386
	ldr	r1, [r2]
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r3, #0x0
	add	r4, r2, #0
.L384:
	ldr	r0, [r4]
	lsl	r2, r3, #0x1
	add	r2, r2, r0
	lsl	r0, r3, #0xa
	lsl	r1, r3, #0x5
	orr	r0, r0, r1
	orr	r0, r0, r3
	strh	r0, [r2, #0x2]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x1f
	bls	.L384	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L387:
	.align	2, 0
.L386:
	.word	gUnknown_03006184
.Lfe29:
	.size	 sub_8126370,.Lfe29-sub_8126370
	.align	2, 0
	.type	 sub_81263A4,function
	.thumb_func
sub_81263A4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	mov	r1, #0xdf
	mov	r9, r1
	cmp	r0, #0
	bne	.L389	@cond_branch
	mov	r2, #0xff
	mov	r9, r2
.L389:
	mov	r6, #0x0
	ldr	r3, .L420
	mov	ip, r3
	mov	r0, r9
	lsl	r4, r0, #0x1
	ldr	r5, .L420+0x4
	cmp	r6, r9
	bcs	.L391	@cond_branch
	mov	r2, #0x0
.L393:
	ldr	r0, [r3]
	lsl	r1, r6, #0x1
	add	r1, r1, r0
	strh	r2, [r1]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, r9
	bcc	.L393	@cond_branch
.L391:
	mov	r1, ip
	ldr	r0, [r1]
	add	r0, r4, r0
	ldr	r2, .L420+0x8
	add	r1, r2, #0
	strh	r1, [r0]
	mov	r3, #0x0
	ldrb	r5, [r5]
	cmp	r3, r5
	bcs	.L396	@cond_branch
.L398:
	ldr	r2, .L420+0xc
	ldr	r0, .L420+0x10
	ldrb	r1, [r0]
	add	r1, r1, r3
	ldr	r0, .L420+0x14
	ldrb	r0, [r0]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	ldr	r1, [r2]
	add	r1, r1, r0
	ldr	r0, .L420+0x18
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r4, r1, r0
	mov	r6, #0x0
	ldr	r0, .L420+0x1c
	add	r2, r0, #0
	add	r3, r3, #0x1
	mov	sl, r3
	ldrb	r3, [r2]
	cmp	r6, r3
	bcs	.L397	@cond_branch
	ldr	r0, .L420+0x20
	mov	r8, r0
.L402:
	ldrh	r0, [r4]
	mov	r3, #0x80
	lsl	r3, r3, #0x8
	add	r1, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L403	@cond_branch
	mov	r1, r8
	ldrh	r0, [r1]
	strh	r0, [r4]
	add	r6, r6, #0x1
	add	r7, r4, #0x2
	b	.L401
.L421:
	.align	2, 0
.L420:
	.word	gUnknown_03006184
	.word	gUnknown_0300616C
	.word	0x3def
	.word	gUnknown_03006168
	.word	gUnknown_03006178
	.word	gUnknown_03006180
	.word	gUnknown_03006164
	.word	gUnknown_03006174
	.word	gUnknown_03006188
.L403:
	add	r0, r4, #0
	bl	sub_81267C4
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	mov	r3, #0x1
	add	r6, r6, #0x1
	add	r7, r4, #0x2
	cmp	r3, r9
	bcs	.L405	@cond_branch
	ldr	r0, .L422
	ldr	r2, [r0]
	ldrh	r1, [r2, #0x2]
	mov	ip, r0
	cmp	r1, #0
	bne	.L411	@cond_branch
	strh	r5, [r2, #0x2]
	mov	r2, r8
	ldrh	r0, [r2]
	add	r0, r0, #0x1
	b	.L418
.L423:
	.align	2, 0
.L422:
	.word	gUnknown_03006184
.L411:
	mov	r2, ip
	ldr	r1, [r2]
	lsl	r0, r3, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, r5
	beq	.L419	@cond_branch
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, r9
	bcs	.L405	@cond_branch
	lsl	r0, r3, #0x1
	add	r1, r0, r1
	ldrh	r0, [r1]
	cmp	r0, #0
	bne	.L411	@cond_branch
	strh	r5, [r1]
.L419:
	mov	r1, r8
	ldrh	r0, [r1]
	add	r0, r0, r3
.L418:
	strh	r0, [r4]
.L405:
	ldr	r2, .L424
	cmp	r3, r9
	bne	.L401	@cond_branch
	mov	r3, r9
	strh	r3, [r4]
.L401:
	lsl	r0, r6, #0x18
	lsr	r6, r0, #0x18
	add	r4, r7, #0
	ldrb	r0, [r2]
	cmp	r6, r0
	bcc	.L402	@cond_branch
.L397:
	mov	r1, sl
	lsl	r0, r1, #0x18
	lsr	r3, r0, #0x18
	ldr	r0, .L424+0x4
	ldrb	r0, [r0]
	cmp	r3, r0
	bcc	.L398	@cond_branch
.L396:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L425:
	.align	2, 0
.L424:
	.word	gUnknown_03006174
	.word	gUnknown_0300616C
.Lfe30:
	.size	 sub_81263A4,.Lfe30-sub_81263A4
	.align	2, 0
	.type	 sub_81264FC,function
	.thumb_func
sub_81264FC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r2, #0x0
	ldr	r0, .L442
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.L428	@cond_branch
	ldr	r0, .L442+0x4
	mov	r8, r0
.L430:
	ldr	r0, .L442+0x8
	ldrb	r1, [r0]
	add	r1, r1, r2
	ldr	r0, .L442+0xc
	ldrb	r0, [r0]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r3, r8
	ldr	r1, [r3]
	add	r1, r1, r0
	ldr	r0, .L442+0x10
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r4, r1, r0
	mov	r6, #0x0
	ldr	r0, .L442+0x14
	add	r3, r0, #0
	add	r7, r2, #0x1
	ldrb	r0, [r3]
	cmp	r6, r0
	bcs	.L429	@cond_branch
	ldr	r5, .L442+0x18
.L434:
	ldrh	r0, [r4]
	mov	r2, #0x80
	lsl	r2, r2, #0x8
	add	r1, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L435	@cond_branch
	ldrh	r0, [r5]
	strh	r0, [r4]
	b	.L433
.L443:
	.align	2, 0
.L442:
	.word	gUnknown_0300616C
	.word	gUnknown_03006168
	.word	gUnknown_03006178
	.word	gUnknown_03006180
	.word	gUnknown_03006164
	.word	gUnknown_03006174
	.word	gUnknown_03006188
.L435:
	add	r0, r4, #0
	bl	ConvertToBlackOrWhite
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L437	@cond_branch
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	b	.L441
.L437:
	ldrh	r0, [r5]
	add	r0, r0, #0x2
.L441:
	strh	r0, [r4]
	ldr	r3, .L444
.L433:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r4, r4, #0x2
	ldrb	r0, [r3]
	cmp	r6, r0
	bcc	.L434	@cond_branch
.L429:
	lsl	r0, r7, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L444+0x4
	ldrb	r0, [r0]
	cmp	r2, r0
	bcc	.L430	@cond_branch
.L428:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L445:
	.align	2, 0
.L444:
	.word	gUnknown_03006174
	.word	gUnknown_0300616C
.Lfe31:
	.size	 sub_81264FC,.Lfe31-sub_81264FC
	.align	2, 0
	.type	 sub_81265B4,function
	.thumb_func
sub_81265B4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	mov	r2, #0x0
	ldr	r0, .L459
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.L448	@cond_branch
	ldr	r0, .L459+0x4
	mov	r8, r0
.L450:
	ldr	r0, .L459+0x8
	ldrb	r1, [r0]
	add	r1, r1, r2
	ldr	r0, .L459+0xc
	ldrb	r0, [r0]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r3, r8
	ldr	r1, [r3]
	add	r1, r1, r0
	ldr	r0, .L459+0x10
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r4, r1, r0
	mov	r5, #0x0
	ldr	r0, .L459+0x14
	add	r7, r2, #0x1
	ldrb	r0, [r0]
	cmp	r5, r0
	bcs	.L449	@cond_branch
	ldr	r6, .L459+0x18
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	add	r2, r0, #0
.L454:
	ldrh	r0, [r4]
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L455	@cond_branch
	ldrh	r0, [r6]
	strh	r0, [r4]
	b	.L453
.L460:
	.align	2, 0
.L459:
	.word	gUnknown_0300616C
	.word	gUnknown_03006168
	.word	gUnknown_03006178
	.word	gUnknown_03006180
	.word	gUnknown_03006164
	.word	gUnknown_03006174
	.word	gUnknown_03006188
.L455:
	add	r0, r4, #0
	str	r2, [sp]
	bl	sub_8126908
	ldrh	r1, [r6]
	add	r0, r0, r1
	strh	r0, [r4]
	ldr	r2, [sp]
.L453:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r4, r4, #0x2
	ldr	r0, .L461
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L454	@cond_branch
.L449:
	lsl	r0, r7, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L461+0x4
	ldrb	r0, [r0]
	cmp	r2, r0
	bcc	.L450	@cond_branch
.L448:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L462:
	.align	2, 0
.L461:
	.word	gUnknown_03006174
	.word	gUnknown_0300616C
.Lfe32:
	.size	 sub_81265B4,.Lfe32-sub_81265B4
	.align	2, 0
	.type	 sub_8126664,function
	.thumb_func
sub_8126664:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	mov	r2, #0x0
	ldr	r0, .L476
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.L465	@cond_branch
	ldr	r0, .L476+0x4
	mov	r8, r0
.L467:
	ldr	r0, .L476+0x8
	ldrb	r1, [r0]
	add	r1, r1, r2
	ldr	r0, .L476+0xc
	ldrb	r0, [r0]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r3, r8
	ldr	r1, [r3]
	add	r1, r1, r0
	ldr	r0, .L476+0x10
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r4, r1, r0
	mov	r5, #0x0
	ldr	r0, .L476+0x14
	add	r7, r2, #0x1
	ldrb	r0, [r0]
	cmp	r5, r0
	bcs	.L466	@cond_branch
	ldr	r6, .L476+0x18
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	add	r2, r0, #0
.L471:
	ldrh	r0, [r4]
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L472	@cond_branch
	ldrh	r0, [r6]
	strh	r0, [r4]
	b	.L470
.L477:
	.align	2, 0
.L476:
	.word	gUnknown_0300616C
	.word	gUnknown_03006168
	.word	gUnknown_03006178
	.word	gUnknown_03006180
	.word	gUnknown_03006164
	.word	gUnknown_03006174
	.word	gUnknown_03006188
.L472:
	add	r0, r4, #0
	str	r2, [sp]
	bl	sub_812693C
	ldrh	r1, [r6]
	add	r0, r0, r1
	strh	r0, [r4]
	ldr	r2, [sp]
.L470:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r4, r4, #0x2
	ldr	r0, .L478
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L471	@cond_branch
.L466:
	lsl	r0, r7, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L478+0x4
	ldrb	r0, [r0]
	cmp	r2, r0
	bcc	.L467	@cond_branch
.L465:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L479:
	.align	2, 0
.L478:
	.word	gUnknown_03006174
	.word	gUnknown_0300616C
.Lfe33:
	.size	 sub_8126664,.Lfe33-sub_8126664
	.align	2, 0
	.type	 sub_8126714,function
	.thumb_func
sub_8126714:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	mov	r2, #0x0
	ldr	r0, .L493
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.L482	@cond_branch
	ldr	r0, .L493+0x4
	mov	r8, r0
.L484:
	ldr	r0, .L493+0x8
	ldrb	r1, [r0]
	add	r1, r1, r2
	ldr	r0, .L493+0xc
	ldrb	r0, [r0]
	mul	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r3, r8
	ldr	r1, [r3]
	add	r1, r1, r0
	ldr	r0, .L493+0x10
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r4, r1, r0
	mov	r5, #0x0
	ldr	r0, .L493+0x14
	add	r7, r2, #0x1
	ldrb	r0, [r0]
	cmp	r5, r0
	bcs	.L483	@cond_branch
	ldr	r6, .L493+0x18
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	add	r2, r0, #0
.L488:
	ldrh	r0, [r4]
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L489	@cond_branch
	ldrh	r0, [r6]
	strh	r0, [r4]
	b	.L487
.L494:
	.align	2, 0
.L493:
	.word	gUnknown_0300616C
	.word	gUnknown_03006168
	.word	gUnknown_03006178
	.word	gUnknown_03006180
	.word	gUnknown_03006164
	.word	gUnknown_03006174
	.word	gUnknown_03006188
.L489:
	add	r0, r4, #0
	str	r2, [sp]
	bl	sub_8126838
	ldrh	r1, [r6]
	add	r0, r0, r1
	strh	r0, [r4]
	ldr	r2, [sp]
.L487:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r4, r4, #0x2
	ldr	r0, .L495
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L488	@cond_branch
.L483:
	lsl	r0, r7, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L495+0x4
	ldrb	r0, [r0]
	cmp	r2, r0
	bcc	.L484	@cond_branch
.L482:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L496:
	.align	2, 0
.L495:
	.word	gUnknown_03006174
	.word	gUnknown_0300616C
.Lfe34:
	.size	 sub_8126714,.Lfe34-sub_8126714
	.align	2, 0
	.type	 sub_81267C4,function
	.thumb_func
sub_81267C4:
	push	{r4, lr}
	ldrh	r0, [r0]
	mov	r1, #0x1f
	mov	r4, #0x1f
	and	r4, r4, r0
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x15
	and	r3, r3, r1
	lsr	r2, r0, #0x1a
	and	r2, r2, r1
	mov	r1, #0x3
	add	r0, r4, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L498	@cond_branch
	mov	r0, #0x1c
	and	r0, r0, r4
	add	r4, r0, #0x4
.L498:
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L499	@cond_branch
	mov	r0, #0x1c
	and	r0, r0, r3
	add	r3, r0, #0x4
.L499:
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L500	@cond_branch
	mov	r0, #0x1c
	and	r0, r0, r2
	add	r2, r0, #0x4
.L500:
	cmp	r4, #0x5
	bhi	.L501	@cond_branch
	mov	r4, #0x6
.L501:
	cmp	r4, #0x1e
	bls	.L502	@cond_branch
	mov	r4, #0x1e
.L502:
	cmp	r3, #0x5
	bhi	.L503	@cond_branch
	mov	r3, #0x6
.L503:
	cmp	r3, #0x1e
	bls	.L504	@cond_branch
	mov	r3, #0x1e
.L504:
	cmp	r2, #0x5
	bhi	.L505	@cond_branch
	mov	r2, #0x6
.L505:
	cmp	r2, #0x1e
	bls	.L506	@cond_branch
	mov	r2, #0x1e
.L506:
	lsl	r0, r2, #0xa
	lsl	r1, r3, #0x5
	orr	r0, r0, r1
	orr	r4, r4, r0
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe35:
	.size	 sub_81267C4,.Lfe35-sub_81267C4
	.align	2, 0
	.type	 sub_8126838,function
	.thumb_func
sub_8126838:
	push	{lr}
	ldrh	r0, [r0]
	mov	r1, #0x1f
	mov	r3, #0x1f
	and	r3, r3, r0
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x15
	and	r2, r2, r1
	lsr	r0, r0, #0x1a
	and	r0, r0, r1
	cmp	r3, #0xb
	bhi	.L508	@cond_branch
	cmp	r2, #0xa
	bhi	.L508	@cond_branch
	cmp	r0, #0xa
	bhi	.L508	@cond_branch
	mov	r0, #0x1
	b	.L548
.L508:
	cmp	r3, #0x13
	bls	.L510	@cond_branch
	cmp	r2, #0x13
	bls	.L509	@cond_branch
	cmp	r0, #0x13
	bhi	.L549	@cond_branch
.L509:
	cmp	r3, #0x13
	bls	.L510	@cond_branch
	cmp	r2, #0x13
	bls	.L511	@cond_branch
	cmp	r0, #0xe
	bhi	.L549	@cond_branch
	b	.L533
.L511:
	cmp	r0, #0x13
	bls	.L510	@cond_branch
	cmp	r2, #0xe
	bhi	.L549	@cond_branch
	b	.L551
.L510:
	cmp	r2, #0x13
	bls	.L518	@cond_branch
	cmp	r0, #0x13
	bls	.L518	@cond_branch
	cmp	r3, #0xe
	bls	.L550	@cond_branch
.L549:
	mov	r0, #0x2
	b	.L548
.L518:
	cmp	r3, #0x13
	bls	.L521	@cond_branch
	cmp	r2, #0xb
	bls	.L522	@cond_branch
	cmp	r0, #0xb
	bls	.L523	@cond_branch
	cmp	r2, r0
	bcs	.L533	@cond_branch
.L551:
	mov	r0, #0x8
	b	.L548
.L523:
	mov	r0, #0xa
	b	.L548
.L522:
	cmp	r0, #0xb
	bls	.L528	@cond_branch
	mov	r0, #0xd
	b	.L548
.L528:
	mov	r0, #0x4
	b	.L548
.L521:
	cmp	r2, #0x13
	bls	.L530	@cond_branch
	cmp	r3, #0xb
	bls	.L531	@cond_branch
	cmp	r0, #0xb
	bls	.L532	@cond_branch
	cmp	r3, r0
	bcc	.L550	@cond_branch
.L533:
	mov	r0, #0x7
	b	.L548
.L532:
	mov	r0, #0xb
	b	.L548
.L531:
	cmp	r0, #0xb
	bls	.L537	@cond_branch
	mov	r0, #0xe
	b	.L548
.L537:
	mov	r0, #0x5
	b	.L548
.L530:
	cmp	r0, #0x13
	bls	.L539	@cond_branch
	cmp	r3, #0xb
	bls	.L540	@cond_branch
	cmp	r2, #0xb
	bls	.L544	@cond_branch
	cmp	r3, r2
	bcs	.L551	@cond_branch
.L550:
	mov	r0, #0x9
	b	.L548
.L540:
	cmp	r2, #0xb
	bls	.L544	@cond_branch
	mov	r0, #0xc
	b	.L548
.L544:
	cmp	r0, #0xb
	bls	.L546	@cond_branch
	mov	r0, #0xf
	b	.L548
.L546:
	mov	r0, #0x6
	b	.L548
.L539:
	mov	r0, #0x3
.L548:
	pop	{r1}
	bx	r1
.Lfe36:
	.size	 sub_8126838,.Lfe36-sub_8126838
	.align	2, 0
	.type	 sub_8126908,function
	.thumb_func
sub_8126908:
	push	{lr}
	ldrh	r1, [r0]
	mov	r3, #0x1f
	mov	r0, #0x1f
	and	r0, r0, r1
	lsl	r1, r1, #0x10
	lsr	r2, r1, #0x15
	and	r2, r2, r3
	lsr	r1, r1, #0x1a
	and	r1, r1, r3
	add	r0, r0, r2
	add	r0, r0, r1
	mov	r1, #0x3
	bl	__divsi3
	mov	r1, #0x1e
	and	r0, r0, r1
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L553	@cond_branch
	lsr	r0, r0, #0x11
	b	.L555
.L553:
	mov	r0, #0x1
.L555:
	pop	{r1}
	bx	r1
.Lfe37:
	.size	 sub_8126908,.Lfe37-sub_8126908
	.align	2, 0
	.type	 sub_812693C,function
	.thumb_func
sub_812693C:
	push	{lr}
	ldrh	r1, [r0]
	mov	r3, #0x1f
	mov	r0, #0x1f
	and	r0, r0, r1
	lsl	r1, r1, #0x10
	lsr	r2, r1, #0x15
	and	r2, r2, r3
	lsr	r1, r1, #0x1a
	and	r1, r1, r3
	add	r0, r0, r2
	add	r0, r0, r1
	mov	r1, #0x3
	bl	__divsi3
	lsl	r0, r0, #0x10
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.Lfe38:
	.size	 sub_812693C,.Lfe38-sub_812693C
	.comm	gUnknown_03006164, 4	@ 1
	.comm	gUnknown_03006168, 4	@ 4
	.comm	gUnknown_0300616C, 4	@ 1
	.comm	gUnknown_03006170, 4	@ 1
	.comm	gUnknown_03006174, 4	@ 1
	.comm	gUnknown_03006178, 4	@ 1
	.comm	gUnknown_0300617C, 4	@ 1
	.comm	gUnknown_03006180, 4	@ 1
	.comm	gUnknown_03006184, 4	@ 4
	.comm	gUnknown_03006188, 4	@ 2
.text
	.align	2, 0


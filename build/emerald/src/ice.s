@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gUnknown_08595A48
	.section .rodata
	.align	2, 0
	.type	 gUnknown_08595A48,object
gUnknown_08595A48:
	.short	0x0
	.byte	0x45
	.space	1
	.short	0x1
	.byte	0x45
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 gUnknown_08595A48,12
	.globl	gUnknown_08595A54
	.align	2, 0
	.type	 gUnknown_08595A54,object
gUnknown_08595A54:
	.word	gUnknown_08595A48
	.size	 gUnknown_08595A54,4
	.globl	gUnknown_08595A58
	.align	2, 0
	.type	 gUnknown_08595A58,object
	.size	 gUnknown_08595A58,24
gUnknown_08595A58:
	.short	0x279d
	.short	0x279d
	.word	gUnknown_08524904
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_810B6C4
	.globl	gUnknown_08595A70
	.align	2, 0
	.type	 gUnknown_08595A70,object
gUnknown_08595A70:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_08595A70,8
	.globl	gUnknown_08595A78
	.align	2, 0
	.type	 gUnknown_08595A78,object
gUnknown_08595A78:
	.short	0x4
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_08595A78,8
	.globl	gUnknown_08595A80
	.align	2, 0
	.type	 gUnknown_08595A80,object
gUnknown_08595A80:
	.short	0x6
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_08595A80,8
	.globl	gUnknown_08595A88
	.align	2, 0
	.type	 gUnknown_08595A88,object
gUnknown_08595A88:
	.short	0x7
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_08595A88,8
	.globl	gUnknown_08595A90
	.align	2, 0
	.type	 gUnknown_08595A90,object
gUnknown_08595A90:
	.short	0x8
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_08595A90,8
	.globl	gUnknown_08595A98
	.align	2, 0
	.type	 gUnknown_08595A98,object
gUnknown_08595A98:
	.short	0xc
	.byte	0x6
	.space	1
	.short	0xd
	.byte	0x6
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 gUnknown_08595A98,12
	.globl	gUnknown_08595AA4
	.align	2, 0
	.type	 gUnknown_08595AA4,object
gUnknown_08595AA4:
	.word	gUnknown_08595A70
	.size	 gUnknown_08595AA4,4
	.globl	gUnknown_08595AA8
	.align	2, 0
	.type	 gUnknown_08595AA8,object
gUnknown_08595AA8:
	.word	gUnknown_08595A78
	.size	 gUnknown_08595AA8,4
	.globl	gUnknown_08595AAC
	.align	2, 0
	.type	 gUnknown_08595AAC,object
gUnknown_08595AAC:
	.word	gUnknown_08595A80
	.size	 gUnknown_08595AAC,4
	.globl	gUnknown_08595AB0
	.align	2, 0
	.type	 gUnknown_08595AB0,object
gUnknown_08595AB0:
	.word	gUnknown_08595A88
	.size	 gUnknown_08595AB0,4
	.globl	gUnknown_08595AB4
	.align	2, 0
	.type	 gUnknown_08595AB4,object
gUnknown_08595AB4:
	.word	gUnknown_08595A90
	.size	 gUnknown_08595AB4,4
	.globl	gUnknown_08595AB8
	.align	2, 0
	.type	 gUnknown_08595AB8,object
gUnknown_08595AB8:
	.word	gUnknown_08595A98
	.size	 gUnknown_08595AB8,4
	.globl	gUnknown_08595ABC
	.align	2, 0
	.type	 gUnknown_08595ABC,object
gUnknown_08595ABC:
	.short	0x0
	.short	0x0
	.byte	0x28
	.byte	0x1
	.space	2
	.short	0x7ffe
	.short	0x0
	.space	4
	.size	 gUnknown_08595ABC,16
	.globl	gUnknown_08595ACC
	.align	2, 0
	.type	 gUnknown_08595ACC,object
gUnknown_08595ACC:
	.word	gUnknown_08595ABC
	.size	 gUnknown_08595ACC,4
	.globl	gUnknown_08595AD0
	.align	2, 0
	.type	 gUnknown_08595AD0,object
	.size	 gUnknown_08595AD0,24
gUnknown_08595AD0:
	.short	0x279d
	.short	0x279d
	.word	gUnknown_08524B24
	.word	gUnknown_08595AA8
	.word	0x0
	.word	gUnknown_08595ACC
	.word	AnimIcePunchSwirlingParticle
	.globl	gUnknown_08595AE8
	.align	2, 0
	.type	 gUnknown_08595AE8,object
	.size	 gUnknown_08595AE8,24
gUnknown_08595AE8:
	.short	0x279d
	.short	0x279d
	.word	gUnknown_08524A24
	.word	gUnknown_08595AAC
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimIcePunchSwirlingParticle
	.globl	gUnknown_08595B00
	.align	2, 0
	.type	 gUnknown_08595B00,object
gUnknown_08595B00:
	.short	0x0
	.short	0x0
	.byte	0xa
	.byte	0x1
	.space	2
	.short	0x7ffe
	.short	0x0
	.space	4
	.size	 gUnknown_08595B00,16
	.globl	gUnknown_08595B10
	.align	2, 0
	.type	 gUnknown_08595B10,object
gUnknown_08595B10:
	.word	gUnknown_08595B00
	.size	 gUnknown_08595B10,4
	.globl	gUnknown_08595B14
	.align	2, 0
	.type	 gUnknown_08595B14,object
	.size	 gUnknown_08595B14,24
gUnknown_08595B14:
	.short	0x279d
	.short	0x279d
	.word	gUnknown_08524AC4
	.word	gUnknown_08595AA8
	.word	0x0
	.word	gUnknown_08595B10
	.word	AnimIceBeamParticle
	.globl	gUnknown_08595B2C
	.align	2, 0
	.type	 gUnknown_08595B2C,object
	.size	 gUnknown_08595B2C,24
gUnknown_08595B2C:
	.short	0x279d
	.short	0x279d
	.word	gUnknown_08524A24
	.word	gUnknown_08595AAC
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimIceBeamParticle
	.globl	gUnknown_08595B44
	.align	2, 0
	.type	 gUnknown_08595B44,object
gUnknown_08595B44:
	.short	0xce
	.short	0xce
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x5
	.short	0x5
	.byte	0x0
	.byte	0xa
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x6
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_08595B44,32
	.globl	gUnknown_08595B64
	.align	2, 0
	.type	 gUnknown_08595B64,object
gUnknown_08595B64:
	.word	gUnknown_08595B44
	.size	 gUnknown_08595B64,4
	.globl	gUnknown_08595B68
	.align	2, 0
	.type	 gUnknown_08595B68,object
	.size	 gUnknown_08595B68,24
gUnknown_08595B68:
	.short	0x279d
	.short	0x279d
	.word	gUnknown_08524AC4
	.word	gUnknown_08595AA8
	.word	0x0
	.word	gUnknown_08595B64
	.word	AnimIceEffectParticle
	.globl	gUnknown_08595B80
	.align	2, 0
	.type	 gUnknown_08595B80,object
	.size	 gUnknown_08595B80,24
gUnknown_08595B80:
	.short	0x279d
	.short	0x279d
	.word	gUnknown_08524A84
	.word	gUnknown_08595AAC
	.word	0x0
	.word	gUnknown_08595B64
	.word	AnimIceEffectParticle
	.globl	gUnknown_08595B98
	.align	2, 0
	.type	 gUnknown_08595B98,object
	.size	 gUnknown_08595B98,24
gUnknown_08595B98:
	.short	0x279d
	.short	0x279d
	.word	gUnknown_08524904
	.word	gUnknown_08595AB0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimSwirlingSnowball_Step1
	.globl	gUnknown_08595BB0
	.align	2, 0
	.type	 gUnknown_08595BB0,object
	.size	 gUnknown_08595BB0,24
gUnknown_08595BB0:
	.short	0x279d
	.short	0x279d
	.word	gUnknown_0852490C
	.word	gUnknown_08595AB4
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimMoveParticleBeyondTarget
	.globl	gUnknown_08595BC8
	.align	2, 0
	.type	 gUnknown_08595BC8,object
	.size	 gUnknown_08595BC8,24
gUnknown_08595BC8:
	.short	0x279d
	.short	0x279d
	.word	gUnknown_08524904
	.word	gUnknown_08595AB0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimMoveParticleBeyondTarget
	.globl	gUnknown_08595BE0
	.align	2, 0
	.type	 gUnknown_08595BE0,object
gUnknown_08595BE0:
	.short	0x0
	.byte	0x5
	.space	1
	.short	0x2
	.byte	0x5
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0x6
	.byte	0x5
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0x2
	.byte	0x5
	.space	1
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_08595BE0,32
	.globl	gUnknown_08595C00
	.align	2, 0
	.type	 gUnknown_08595C00,object
gUnknown_08595C00:
	.word	gUnknown_08595BE0
	.size	 gUnknown_08595C00,4
	.globl	gUnknown_08595C04
	.align	2, 0
	.type	 gUnknown_08595C04,object
	.size	 gUnknown_08595C04,24
gUnknown_08595C04:
	.short	0x279e
	.short	0x279e
	.word	gUnknown_08524A64
	.word	gUnknown_08595C00
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimWaveFromCenterOfTarget
	.globl	gUnknown_08595C1C
	.align	2, 0
	.type	 gUnknown_08595C1C,object
gUnknown_08595C1C:
	.short	0x0
	.byte	0x8
	.space	1
	.short	0x8
	.byte	0x8
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 gUnknown_08595C1C,12
	.globl	gUnknown_08595C28
	.align	2, 0
	.type	 gUnknown_08595C28,object
gUnknown_08595C28:
	.word	gUnknown_08595C1C
	.size	 gUnknown_08595C28,4
	.globl	gUnknown_08595C2C
	.align	2, 0
	.type	 gUnknown_08595C2C,object
	.size	 gUnknown_08595C2C,24
gUnknown_08595C2C:
	.short	0x27a0
	.short	0x27a0
	.word	gUnknown_08524A54
	.word	gUnknown_08595C28
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	InitSwirlingFogAnim
	.globl	gUnknown_08595C44
	.align	2, 0
	.type	 gUnknown_08595C44,object
	.size	 gUnknown_08595C44,24
gUnknown_08595C44:
	.short	0x27bc
	.short	0x27bc
	.word	gUnknown_08524A54
	.word	gUnknown_08595C28
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	InitSwirlingFogAnim
	.globl	gUnknown_08595C5C
	.type	 gUnknown_08595C5C,object
gUnknown_08595C5C:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x5
	.byte	0x6
	.byte	0x6
	.byte	0x6
	.byte	0x6
	.byte	0x7
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0x9
	.size	 gUnknown_08595C5C,20
	.globl	gUnknown_08595C70
	.align	2, 0
	.type	 gUnknown_08595C70,object
	.size	 gUnknown_08595C70,24
gUnknown_08595C70:
	.short	0x27ab
	.short	0x27ab
	.word	gUnknown_0852490C
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimThrowMistBall
	.globl	gUnknown_08595C88
	.type	 gUnknown_08595C88,object
gUnknown_08595C88:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x5
	.size	 gUnknown_08595C88,20
	.globl	gUnknown_08595C9C
	.align	2, 0
	.type	 gUnknown_08595C9C,object
	.size	 gUnknown_08595C9C,24
gUnknown_08595C9C:
	.short	0x27bc
	.short	0x27bc
	.word	gUnknown_08524A54
	.word	gUnknown_08595C28
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	InitPoisonGasCloudAnim
	.globl	gUnknown_08595CB4
	.align	2, 0
	.type	 gUnknown_08595CB4,object
	.size	 gUnknown_08595CB4,40
gUnknown_08595CB4:
	.byte	0x64
	.byte	0xe0
	.byte	0x1
	.byte	0x20
	.byte	0x55
	.byte	0xe0
	.byte	0x1
	.byte	0x0
	.byte	0xf2
	.byte	0xe0
	.byte	0x11
	.byte	0x10
	.byte	0x42
	.byte	0xe0
	.byte	0x21
	.byte	0x10
	.byte	0xb6
	.byte	0xe0
	.byte	0x31
	.byte	0x0
	.byte	0x3c
	.byte	0xe0
	.byte	0x1
	.byte	0x20
	.byte	0xd6
	.byte	0xe0
	.byte	0x11
	.byte	0x0
	.byte	0x71
	.byte	0xe0
	.byte	0x1
	.byte	0x10
	.byte	0xd2
	.byte	0xe0
	.byte	0x31
	.byte	0x10
	.byte	0x26
	.byte	0xe0
	.byte	0x21
	.byte	0x0
	.globl	gUnknown_08595CDC
	.align	2, 0
	.type	 gUnknown_08595CDC,object
gUnknown_08595CDC:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_08595CDC,16
	.globl	gUnknown_08595CEC
	.align	2, 0
	.type	 gUnknown_08595CEC,object
gUnknown_08595CEC:
	.short	0xf0
	.short	0xf0
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_08595CEC,16
	.globl	gUnknown_08595CFC
	.align	2, 0
	.type	 gUnknown_08595CFC,object
gUnknown_08595CFC:
	.short	0xe0
	.short	0xe0
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_08595CFC,16
	.globl	gUnknown_08595D0C
	.align	2, 0
	.type	 gUnknown_08595D0C,object
gUnknown_08595D0C:
	.short	0x150
	.short	0x150
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_08595D0C,16
	.globl	gUnknown_08595D1C
	.align	2, 0
	.type	 gUnknown_08595D1C,object
gUnknown_08595D1C:
	.word	gUnknown_08595CDC
	.word	gUnknown_08595CEC
	.word	gUnknown_08595CFC
	.size	 gUnknown_08595D1C,12
	.globl	gUnknown_08595D28
	.align	2, 0
	.type	 gUnknown_08595D28,object
gUnknown_08595D28:
	.word	gUnknown_08595D0C
	.size	 gUnknown_08595D28,4
	.globl	gUnknown_08595D2C
	.align	2, 0
	.type	 gUnknown_08595D2C,object
	.size	 gUnknown_08595D2C,24
gUnknown_08595D2C:
	.short	0x2817
	.short	0x2817
	.word	gUnknown_0852496C
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gUnknown_08595D1C
	.word	AnimHailBegin
	.globl	gUnknown_08595D44
	.align	2, 0
	.type	 gUnknown_08595D44,object
	.size	 gUnknown_08595D44,24
gUnknown_08595D44:
	.short	0x2817
	.short	0x2817
	.word	gUnknown_0852496C
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gUnknown_08595D28
	.word	sub_80A8EE4
	.globl	gUnknown_08595D5C
	.align	2, 0
	.type	 gUnknown_08595D5C,object
gUnknown_08595D5C:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_08595D5C,8
	.globl	gUnknown_08595D64
	.align	2, 0
	.type	 gUnknown_08595D64,object
gUnknown_08595D64:
	.short	0x10
	.byte	0x4
	.space	1
	.short	0x20
	.byte	0x4
	.space	1
	.short	0x30
	.byte	0x4
	.space	1
	.short	0x40
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 gUnknown_08595D64,20
	.globl	gUnknown_08595D78
	.align	2, 0
	.type	 gUnknown_08595D78,object
gUnknown_08595D78:
	.word	gUnknown_08595D5C
	.word	gUnknown_08595D64
	.size	 gUnknown_08595D78,8
	.globl	gUnknown_08595D80
	.align	2, 0
	.type	 gUnknown_08595D80,object
gUnknown_08595D80:
	.short	0xe0
	.short	0xe0
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_08595D80,16
	.globl	gUnknown_08595D90
	.align	2, 0
	.type	 gUnknown_08595D90,object
gUnknown_08595D90:
	.short	0x118
	.short	0x118
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_08595D90,16
	.globl	gUnknown_08595DA0
	.align	2, 0
	.type	 gUnknown_08595DA0,object
gUnknown_08595DA0:
	.short	0x150
	.short	0x150
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_08595DA0,16
	.globl	gUnknown_08595DB0
	.align	2, 0
	.type	 gUnknown_08595DB0,object
gUnknown_08595DB0:
	.short	0x180
	.short	0x180
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_08595DB0,16
	.globl	gUnknown_08595DC0
	.align	2, 0
	.type	 gUnknown_08595DC0,object
gUnknown_08595DC0:
	.short	0x1c0
	.short	0x1c0
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gUnknown_08595DC0,16
	.globl	gUnknown_08595DD0
	.align	2, 0
	.type	 gUnknown_08595DD0,object
gUnknown_08595DD0:
	.word	gUnknown_08595D80
	.word	gUnknown_08595D90
	.word	gUnknown_08595DA0
	.word	gUnknown_08595DB0
	.word	gUnknown_08595DC0
	.size	 gUnknown_08595DD0,20
	.globl	gUnknown_08595DE4
	.align	2, 0
	.type	 gUnknown_08595DE4,object
	.size	 gUnknown_08595DE4,24
gUnknown_08595DE4:
	.short	0x273b
	.short	0x273b
	.word	gUnknown_085249D4
	.word	gUnknown_08595D78
	.word	0x0
	.word	gUnknown_08595DD0
	.word	InitIceBallAnim
	.globl	gUnknown_08595DFC
	.align	2, 0
	.type	 gUnknown_08595DFC,object
	.size	 gUnknown_08595DFC,24
gUnknown_08595DFC:
	.short	0x279d
	.short	0x279d
	.word	gUnknown_08524904
	.word	gUnknown_08595AAC
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	InitIceBallParticle
.text
	.align	2, 0
	.type	 sub_810B6C4,function
	.thumb_func
sub_810B6C4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r2, [r5, #0x4]
	lsl	r1, r2, #0x16
	lsr	r1, r1, #0x16
	add	r1, r1, #0x7
	ldr	r3, .L16
	add	r0, r3, #0
	and	r1, r1, r0
	ldr	r0, .L16+0x4
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r5, #0x4]
	ldr	r4, .L16+0x8
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r4, .L16+0xc
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldrb	r0, [r4]
	mov	r1, #0x3
	str	r3, [sp]
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L16+0x10
	ldrh	r0, [r1, #0x8]
	strh	r0, [r5, #0x2e]
	ldrh	r0, [r1]
	ldr	r3, [sp]
	add	r0, r0, r3
	strh	r0, [r5, #0x30]
	ldrh	r0, [r1, #0x4]
	mov	r4, r9
	add	r0, r4, r0
	strh	r0, [r5, #0x32]
	ldrh	r0, [r1, #0x2]
	add	r0, r0, r6
	strh	r0, [r5, #0x34]
	ldrh	r0, [r1, #0x6]
	mov	r7, r8
	add	r0, r7, r0
	strh	r0, [r5, #0x36]
	add	r0, r5, #0
	bl	sub_80A64EC
	add	r4, r4, #0x20
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	mov	ip, r0
	ldr	r3, [sp]
	cmp	r4, ip
	bhi	.L4	@cond_branch
	add	r0, r7, #0
	add	r0, r0, #0x20
	ldrh	r1, [r5, #0x30]
	ldrh	r2, [r5, #0x32]
	cmp	r0, #0xe0
	bhi	.L4	@cond_branch
	add	r4, r1, #0
	mov	sl, ip
.L5:
	mov	r7, r9
	lsl	r1, r7, #0x10
	asr	r1, r1, #0x10
	add	r1, r1, r4
	lsl	r1, r1, #0x10
	mov	r7, r8
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	add	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	lsr	r0, r1, #0x10
	mov	r9, r0
	mov	r7, #0x80
	lsl	r7, r7, #0xe
	add	r1, r1, r7
	lsr	r1, r1, #0x10
	cmp	r1, sl
	bhi	.L4	@cond_branch
	mov	r1, r8
	lsl	r0, r1, #0x10
	add	r0, r0, r7
	lsr	r0, r0, #0x10
	cmp	r0, #0xe0
	bls	.L5	@cond_branch
.L4:
	ldrh	r0, [r5, #0x30]
	neg	r7, r0
	strh	r7, [r5, #0x30]
	ldrh	r0, [r5, #0x32]
	neg	r4, r0
	strh	r4, [r5, #0x32]
	lsl	r0, r3, #0x10
	mov	r1, #0x80
	lsl	r1, r1, #0xe
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	mov	r2, #0x98
	lsl	r2, r2, #0x1
	mov	ip, r2
	ldr	r1, .L16+0x10
	mov	sl, r1
	cmp	r0, ip
	bhi	.L10	@cond_branch
	lsl	r1, r6, #0x10
	mov	r2, #0x80
	lsl	r2, r2, #0xe
	add	r0, r1, r2
	b	.L15
.L17:
	.align	2, 0
.L16:
	.word	0x3ff
	.word	-0x400
	.word	gBattleAnimTarget
	.word	gBattleAnimAttacker
	.word	gBattleAnimArgs
.L11:
	lsl	r1, r3, #0x10
	asr	r1, r1, #0x10
	add	r1, r1, r7
	lsl	r1, r1, #0x10
	asr	r0, r2, #0x10
	add	r0, r0, r4
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsr	r3, r1, #0x10
	mov	r0, #0x80
	lsl	r0, r0, #0xe
	add	r1, r1, r0
	lsr	r1, r1, #0x10
	cmp	r1, ip
	bhi	.L10	@cond_branch
	lsl	r1, r6, #0x10
	add	r0, r1, r0
.L15:
	lsr	r0, r0, #0x10
	add	r2, r1, #0
	cmp	r0, #0xe0
	bls	.L11	@cond_branch
.L10:
	strh	r3, [r5, #0x20]
	strh	r6, [r5, #0x22]
	mov	r1, sl
	ldrh	r0, [r1, #0x8]
	strh	r0, [r5, #0x2e]
	strh	r3, [r5, #0x30]
	mov	r2, r9
	strh	r2, [r5, #0x32]
	strh	r6, [r5, #0x34]
	mov	r3, r8
	strh	r3, [r5, #0x36]
	add	r0, r5, #0
	bl	sub_80A64EC
	mov	r7, sl
	ldrh	r0, [r7, #0xa]
	strh	r0, [r5, #0x34]
	ldrh	r0, [r7, #0xc]
	strh	r0, [r5, #0x36]
	ldr	r0, .L18
	str	r0, [r5, #0x1c]
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L19:
	.align	2, 0
.L18:
	.word	sub_810B848
.Lfe1:
	.size	 sub_810B6C4,.Lfe1-sub_810B6C4
	.align	2, 0
	.globl	sub_810B848
	.type	 sub_810B848,function
	.thumb_func
sub_810B848:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L21	@cond_branch
	ldrh	r1, [r4, #0x30]
	ldrh	r2, [r4, #0x38]
	add	r1, r1, r2
	strh	r1, [r4, #0x38]
	ldrh	r0, [r4, #0x32]
	ldrh	r2, [r4, #0x3a]
	add	r0, r0, r2
	strh	r0, [r4, #0x3a]
	strh	r1, [r4, #0x24]
	strh	r0, [r4, #0x26]
	mov	r1, #0x3c
	ldrsh	r0, [r4, r1]
	mov	r2, #0x34
	ldrsh	r1, [r4, r2]
	bl	Sin
	ldrh	r1, [r4, #0x24]
	add	r0, r0, r1
	strh	r0, [r4, #0x24]
	mov	r2, #0x3c
	ldrsh	r0, [r4, r2]
	mov	r2, #0x34
	ldrsh	r1, [r4, r2]
	bl	Sin
	ldrh	r1, [r4, #0x26]
	add	r0, r0, r1
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x36]
	ldrh	r2, [r4, #0x3c]
	add	r0, r0, r2
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x3c]
	ldrh	r0, [r4, #0x2e]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	b	.L22
.L21:
	add	r0, r4, #0
	bl	DestroyAnimSprite
.L22:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 sub_810B848,.Lfe2-sub_810B848
	.align	2, 0
	.globl	AnimIcePunchSwirlingParticle
	.type	 AnimIcePunchSwirlingParticle,function
	.thumb_func
AnimIcePunchSwirlingParticle:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L24
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2e]
	mov	r0, #0x3c
	strh	r0, [r4, #0x30]
	mov	r0, #0x9
	strh	r0, [r4, #0x32]
	mov	r0, #0x1e
	strh	r0, [r4, #0x34]
	mov	r0, #0xfe
	lsl	r0, r0, #0x8
	strh	r0, [r4, #0x36]
	ldr	r1, .L24+0x4
	add	r0, r4, #0
	bl	StoreSpriteCallbackInData6
	ldr	r1, .L24+0x8
	str	r1, [r4, #0x1c]
	add	r0, r4, #0
	bl	_call_via_r1
	pop	{r4}
	pop	{r0}
	bx	r0
.L25:
	.align	2, 0
.L24:
	.word	gBattleAnimArgs
	.word	DestroyAnimSprite
	.word	TranslateSpriteInGrowingCircleOverDuration
.Lfe3:
	.size	 AnimIcePunchSwirlingParticle,.Lfe3-AnimIcePunchSwirlingParticle
	.align	2, 0
	.globl	AnimIceBeamParticle
	.type	 AnimIceBeamParticle,function
	.thumb_func
AnimIceBeamParticle:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x1
	bl	InitSpritePosToAnimAttacker
	ldr	r0, .L29
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x32]
	ldr	r0, .L29+0x4
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L27	@cond_branch
	ldr	r0, .L29+0x8
	ldrh	r1, [r4, #0x32]
	ldrh	r0, [r0, #0x4]
	sub	r1, r1, r0
	strh	r1, [r4, #0x32]
	b	.L28
.L30:
	.align	2, 0
.L29:
	.word	gBattleAnimTarget
	.word	gBattleAnimAttacker
	.word	gBattleAnimArgs
.L27:
	ldr	r0, .L31
	ldrh	r0, [r0, #0x4]
	ldrh	r1, [r4, #0x32]
	add	r0, r0, r1
	strh	r0, [r4, #0x32]
.L28:
	ldr	r0, .L31+0x4
	ldrb	r0, [r0]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	ldr	r1, .L31
	lsr	r0, r0, #0x18
	ldrh	r2, [r1, #0x6]
	add	r0, r0, r2
	strh	r0, [r4, #0x36]
	ldrh	r0, [r1, #0x8]
	strh	r0, [r4, #0x2e]
	ldr	r1, .L31+0x8
	add	r0, r4, #0
	bl	StoreSpriteCallbackInData6
	ldr	r0, .L31+0xc
	str	r0, [r4, #0x1c]
	pop	{r4}
	pop	{r0}
	bx	r0
.L32:
	.align	2, 0
.L31:
	.word	gBattleAnimArgs
	.word	gBattleAnimTarget
	.word	DestroyAnimSprite
	.word	StartAnimLinearTranslation
.Lfe4:
	.size	 AnimIceBeamParticle,.Lfe4-AnimIceBeamParticle
	.align	2, 0
	.globl	AnimIceEffectParticle
	.type	 AnimIceEffectParticle,function
	.thumb_func
AnimIceEffectParticle:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r5, .L37
	mov	r1, #0x4
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L34	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1
	bl	InitSpritePosToAnimTarget
	b	.L35
.L38:
	.align	2, 0
.L37:
	.word	gBattleAnimArgs
.L34:
	ldr	r0, .L39
	ldrb	r0, [r0]
	add	r2, r4, #0
	add	r2, r2, #0x20
	add	r3, r4, #0
	add	r3, r3, #0x22
	mov	r1, #0x1
	bl	SetAverageBattlerPositions
	ldr	r0, .L39+0x4
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L36	@cond_branch
	ldrh	r0, [r5]
	neg	r0, r0
	strh	r0, [r5]
.L36:
	ldrh	r0, [r5]
	ldrh	r1, [r4, #0x20]
	add	r0, r0, r1
	strh	r0, [r4, #0x20]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r4, #0x22]
	add	r0, r0, r1
	strh	r0, [r4, #0x22]
.L35:
	ldr	r1, .L39+0x8
	add	r0, r4, #0
	bl	StoreSpriteCallbackInData6
	ldr	r0, .L39+0xc
	str	r0, [r4, #0x1c]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L40:
	.align	2, 0
.L39:
	.word	gBattleAnimTarget
	.word	gBattleAnimAttacker
	.word	AnimFlickerIceEffectParticle
	.word	RunStoredCallbackWhenAffineAnimEnds
.Lfe5:
	.size	 AnimIceEffectParticle,.Lfe5-AnimIceEffectParticle
	.align	2, 0
	.globl	AnimFlickerIceEffectParticle
	.type	 AnimFlickerIceEffectParticle,function
	.thumb_func
AnimFlickerIceEffectParticle:
	push	{lr}
	add	r3, r0, #0
	mov	r0, #0x3e
	add	r0, r0, r3
	mov	ip, r0
	ldrb	r2, [r0]
	lsl	r0, r2, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x2
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	mov	r1, ip
	strb	r0, [r1]
	ldrh	r0, [r3, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	bne	.L42	@cond_branch
	add	r0, r3, #0
	bl	DestroySpriteAndMatrix
.L42:
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 AnimFlickerIceEffectParticle,.Lfe6-AnimFlickerIceEffectParticle
	.align	2, 0
	.globl	AnimSwirlingSnowball_Step1
	.type	 AnimSwirlingSnowball_Step1,function
	.thumb_func
AnimSwirlingSnowball_Step1:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x10
	add	r5, r0, #0
	mov	r1, #0x1
	bl	InitSpritePosToAnimAttacker
	ldr	r6, .L64
	ldrh	r0, [r6, #0x8]
	strh	r0, [r5, #0x2e]
	ldrh	r0, [r5, #0x20]
	strh	r0, [r5, #0x30]
	ldrh	r0, [r5, #0x22]
	strh	r0, [r5, #0x34]
	mov	r1, #0xa
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L44	@cond_branch
	ldr	r4, .L64+0x4
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x32]
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r6, [r6, #0x6]
	add	r0, r0, r6
	strh	r0, [r5, #0x36]
	b	.L45
.L65:
	.align	2, 0
.L64:
	.word	gBattleAnimArgs
	.word	gBattleAnimTarget
.L44:
	ldr	r0, .L66
	ldrb	r0, [r0]
	add	r2, r5, #0
	add	r2, r2, #0x32
	add	r3, r5, #0
	add	r3, r3, #0x36
	mov	r1, #0x1
	bl	SetAverageBattlerPositions
.L45:
	ldr	r0, .L66+0x4
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L46	@cond_branch
	ldr	r0, .L66+0x8
	ldrh	r1, [r5, #0x32]
	ldrh	r0, [r0, #0x4]
	sub	r1, r1, r0
	strh	r1, [r5, #0x32]
	b	.L47
.L67:
	.align	2, 0
.L66:
	.word	gBattleAnimTarget
	.word	gBattleAnimAttacker
	.word	gBattleAnimArgs
.L46:
	ldr	r0, .L68
	ldrh	r0, [r0, #0x4]
	ldrh	r2, [r5, #0x32]
	add	r0, r0, r2
	strh	r0, [r5, #0x32]
.L47:
	add	r7, r5, #0
	add	r7, r7, #0x2e
	add	r2, r7, #0
	mov	r1, sp
	mov	r4, #0x7
.L51:
	ldrh	r0, [r2]
	strh	r0, [r1]
	add	r2, r2, #0x2
	add	r1, r1, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L51	@cond_branch
	add	r0, r5, #0
	bl	InitAnimFastLinearTranslationWithSpeed
	ldrh	r0, [r5, #0x30]
	mov	r1, #0x1
	eor	r0, r0, r1
	strh	r0, [r5, #0x30]
	ldrh	r0, [r5, #0x32]
	eor	r0, r0, r1
	strh	r0, [r5, #0x32]
.L55:
	mov	r0, #0x1
	strh	r0, [r5, #0x2e]
	add	r0, r5, #0
	bl	AnimFastTranslateLinear
	mov	r0, #0x20
	ldrsh	r1, [r5, r0]
	mov	r2, #0x24
	ldrsh	r0, [r5, r2]
	add	r1, r1, r0
	add	r1, r1, #0x10
	mov	r0, #0x88
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bhi	.L54	@cond_branch
	mov	r0, #0x22
	ldrsh	r1, [r5, r0]
	mov	r2, #0x26
	ldrsh	r0, [r5, r2]
	add	r1, r1, r0
	cmp	r1, #0xa0
	bgt	.L54	@cond_branch
	mov	r0, #0x10
	neg	r0, r0
	cmp	r1, r0
	bge	.L55	@cond_branch
.L54:
	ldrh	r0, [r5, #0x24]
	ldrh	r1, [r5, #0x20]
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r0, [r5, #0x20]
	ldrh	r0, [r5, #0x26]
	ldrh	r2, [r5, #0x22]
	add	r0, r0, r2
	strh	r0, [r5, #0x22]
	strh	r1, [r5, #0x26]
	strh	r1, [r5, #0x24]
	ldr	r6, .L68+0x4
	ldr	r1, .L68+0x8
	mov	r3, sp
	add	r2, r7, #0
	mov	r4, #0x7
.L62:
	ldrh	r0, [r3]
	strh	r0, [r2]
	add	r3, r3, #0x2
	add	r2, r2, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L62	@cond_branch
	str	r6, [r5, #0x1c]
	add	r0, r5, #0
	bl	StoreSpriteCallbackInData6
	add	sp, sp, #0x10
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L69:
	.align	2, 0
.L68:
	.word	gBattleAnimArgs
	.word	sub_80A718C
	.word	AnimSwirlingSnowball_Step2
.Lfe7:
	.size	 AnimSwirlingSnowball_Step1,.Lfe7-AnimSwirlingSnowball_Step1
	.align	2, 0
	.globl	AnimSwirlingSnowball_Step2
	.type	 AnimSwirlingSnowball_Step2,function
	.thumb_func
AnimSwirlingSnowball_Step2:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x24]
	ldrh	r1, [r4, #0x20]
	add	r0, r0, r1
	mov	r5, #0x0
	strh	r0, [r4, #0x20]
	ldrh	r0, [r4, #0x26]
	ldrh	r2, [r4, #0x22]
	add	r0, r0, r2
	strh	r0, [r4, #0x22]
	strh	r5, [r4, #0x26]
	strh	r5, [r4, #0x24]
	mov	r0, #0x80
	strh	r0, [r4, #0x2e]
	ldr	r0, .L73
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	ldr	r1, .L73+0x4
	cmp	r0, #0
	beq	.L71	@cond_branch
	mov	r1, #0x14
.L71:
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	Sin
	strh	r0, [r4, #0x34]
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	mov	r1, #0xf
	bl	Cos
	strh	r0, [r4, #0x36]
	strh	r5, [r4, #0x38]
	ldr	r1, .L73+0x8
	str	r1, [r4, #0x1c]
	add	r0, r4, #0
	bl	_call_via_r1
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L74:
	.align	2, 0
.L73:
	.word	gBattleAnimAttacker
	.word	0xffec
	.word	AnimSwirlingSnowball_Step3
.Lfe8:
	.size	 AnimSwirlingSnowball_Step2,.Lfe8-AnimSwirlingSnowball_Step2
	.align	2, 0
	.globl	AnimSwirlingSnowball_Step3
	.type	 AnimSwirlingSnowball_Step3,function
	.thumb_func
AnimSwirlingSnowball_Step3:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L80
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	ldr	r1, .L80+0x4
	cmp	r0, #0
	beq	.L76	@cond_branch
	mov	r1, #0x14
.L76:
	mov	r2, #0x38
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x1f
	bgt	.L78	@cond_branch
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	Sin
	ldrh	r1, [r4, #0x34]
	sub	r0, r0, r1
	strh	r0, [r4, #0x24]
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	mov	r1, #0xf
	bl	Cos
	ldrh	r1, [r4, #0x36]
	sub	r0, r0, r1
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x10
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x2e]
	ldrh	r0, [r4, #0x38]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x38]
	b	.L79
.L81:
	.align	2, 0
.L80:
	.word	gBattleAnimAttacker
	.word	0xffec
.L78:
	ldrh	r0, [r4, #0x24]
	ldrh	r2, [r4, #0x20]
	add	r0, r0, r2
	mov	r1, #0x0
	strh	r0, [r4, #0x20]
	ldrh	r0, [r4, #0x26]
	ldrh	r2, [r4, #0x22]
	add	r0, r0, r2
	strh	r0, [r4, #0x22]
	strh	r1, [r4, #0x26]
	strh	r1, [r4, #0x24]
	strh	r1, [r4, #0x36]
	strh	r1, [r4, #0x34]
	ldr	r0, .L82
	str	r0, [r4, #0x1c]
.L79:
	pop	{r4}
	pop	{r0}
	bx	r0
.L83:
	.align	2, 0
.L82:
	.word	AnimSwirlingSnowball_End
.Lfe9:
	.size	 AnimSwirlingSnowball_Step3,.Lfe9-AnimSwirlingSnowball_Step3
	.align	2, 0
	.globl	AnimSwirlingSnowball_End
	.type	 AnimSwirlingSnowball_End,function
	.thumb_func
AnimSwirlingSnowball_End:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x1
	strh	r0, [r4, #0x2e]
	add	r0, r4, #0
	bl	AnimFastTranslateLinear
	mov	r1, #0x20
	ldrsh	r0, [r4, r1]
	mov	r2, #0x24
	ldrsh	r1, [r4, r2]
	add	r0, r0, r1
	add	r0, r0, #0x10
	mov	r1, #0x88
	lsl	r1, r1, #0x1
	cmp	r0, r1
	bhi	.L86	@cond_branch
	mov	r1, #0x22
	ldrsh	r0, [r4, r1]
	mov	r2, #0x26
	ldrsh	r1, [r4, r2]
	add	r1, r0, r1
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bgt	.L86	@cond_branch
	mov	r0, #0x10
	neg	r0, r0
	cmp	r1, r0
	bge	.L85	@cond_branch
.L86:
	add	r0, r4, #0
	bl	DestroyAnimSprite
.L85:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 AnimSwirlingSnowball_End,.Lfe10-AnimSwirlingSnowball_End
	.align	2, 0
	.globl	AnimMoveParticleBeyondTarget
	.type	 AnimMoveParticleBeyondTarget,function
	.thumb_func
AnimMoveParticleBeyondTarget:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x10
	add	r5, r0, #0
	mov	r1, #0x1
	bl	InitSpritePosToAnimAttacker
	ldr	r1, .L108
	ldrh	r0, [r1, #0x8]
	strh	r0, [r5, #0x2e]
	ldrh	r0, [r5, #0x20]
	strh	r0, [r5, #0x30]
	ldrh	r0, [r5, #0x22]
	strh	r0, [r5, #0x34]
	mov	r2, #0xe
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L88	@cond_branch
	ldr	r4, .L108+0x4
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x32]
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x36]
	b	.L89
.L109:
	.align	2, 0
.L108:
	.word	gBattleAnimArgs
	.word	gBattleAnimTarget
.L88:
	ldr	r0, .L110
	ldrb	r0, [r0]
	add	r2, r5, #0
	add	r2, r2, #0x32
	add	r3, r5, #0
	add	r3, r3, #0x36
	mov	r1, #0x1
	bl	SetAverageBattlerPositions
.L89:
	ldr	r0, .L110+0x4
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L90	@cond_branch
	ldr	r0, .L110+0x8
	ldrh	r1, [r5, #0x32]
	ldrh	r2, [r0, #0x4]
	sub	r1, r1, r2
	strh	r1, [r5, #0x32]
	add	r1, r0, #0
	b	.L91
.L111:
	.align	2, 0
.L110:
	.word	gBattleAnimTarget
	.word	gBattleAnimAttacker
	.word	gBattleAnimArgs
.L90:
	ldr	r1, .L112
	ldrh	r0, [r1, #0x4]
	ldrh	r2, [r5, #0x32]
	add	r0, r0, r2
	strh	r0, [r5, #0x32]
.L91:
	ldrh	r0, [r1, #0x6]
	ldrh	r1, [r5, #0x36]
	add	r0, r0, r1
	strh	r0, [r5, #0x36]
	add	r0, r5, #0
	bl	InitAnimFastLinearTranslationWithSpeed
	add	r7, r5, #0
	add	r7, r7, #0x2e
	add	r2, r7, #0
	mov	r1, sp
	mov	r4, #0x7
.L95:
	ldrh	r0, [r2]
	strh	r0, [r1]
	add	r2, r2, #0x2
	add	r1, r1, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L95	@cond_branch
	ldrh	r0, [r5, #0x30]
	mov	r1, #0x1
	eor	r0, r0, r1
	strh	r0, [r5, #0x30]
	ldrh	r0, [r5, #0x32]
	eor	r0, r0, r1
	strh	r0, [r5, #0x32]
.L99:
	mov	r0, #0x1
	strh	r0, [r5, #0x2e]
	add	r0, r5, #0
	bl	AnimFastTranslateLinear
	mov	r2, #0x20
	ldrsh	r1, [r5, r2]
	mov	r2, #0x24
	ldrsh	r0, [r5, r2]
	add	r1, r1, r0
	add	r1, r1, #0x10
	mov	r0, #0x88
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bhi	.L98	@cond_branch
	mov	r0, #0x22
	ldrsh	r1, [r5, r0]
	mov	r2, #0x26
	ldrsh	r0, [r5, r2]
	add	r1, r1, r0
	cmp	r1, #0xa0
	bgt	.L98	@cond_branch
	mov	r0, #0x10
	neg	r0, r0
	cmp	r1, r0
	bge	.L99	@cond_branch
.L98:
	ldrh	r0, [r5, #0x24]
	ldrh	r1, [r5, #0x20]
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r0, [r5, #0x20]
	ldrh	r0, [r5, #0x26]
	ldrh	r2, [r5, #0x22]
	add	r0, r0, r2
	strh	r0, [r5, #0x22]
	strh	r1, [r5, #0x26]
	strh	r1, [r5, #0x24]
	ldr	r1, .L112
	ldr	r6, .L112+0x4
	mov	r3, sp
	add	r2, r7, #0
	mov	r4, #0x7
.L106:
	ldrh	r0, [r3]
	strh	r0, [r2]
	add	r3, r3, #0x2
	add	r2, r2, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L106	@cond_branch
	ldrh	r0, [r1, #0xa]
	strh	r0, [r5, #0x38]
	ldrh	r0, [r1, #0xc]
	strh	r0, [r5, #0x3a]
	str	r6, [r5, #0x1c]
	add	sp, sp, #0x10
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L113:
	.align	2, 0
.L112:
	.word	gBattleAnimArgs
	.word	AnimWiggleParticleTowardsTarget
.Lfe11:
	.size	 AnimMoveParticleBeyondTarget,.Lfe11-AnimMoveParticleBeyondTarget
	.align	2, 0
	.globl	AnimWiggleParticleTowardsTarget
	.type	 AnimWiggleParticleTowardsTarget,function
	.thumb_func
AnimWiggleParticleTowardsTarget:
	push	{r4, lr}
	add	r4, r0, #0
	bl	AnimFastTranslateLinear
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L115	@cond_branch
	mov	r0, #0x1
	strh	r0, [r4, #0x2e]
.L115:
	mov	r2, #0x3c
	ldrsh	r0, [r4, r2]
	mov	r2, #0x38
	ldrsh	r1, [r4, r2]
	bl	Sin
	ldrh	r1, [r4, #0x26]
	add	r0, r0, r1
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x3a]
	ldrh	r2, [r4, #0x3c]
	add	r0, r0, r2
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x3c]
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	bne	.L116	@cond_branch
	mov	r2, #0x20
	ldrsh	r0, [r4, r2]
	mov	r2, #0x24
	ldrsh	r1, [r4, r2]
	add	r0, r0, r1
	add	r0, r0, #0x10
	mov	r1, #0x88
	lsl	r1, r1, #0x1
	cmp	r0, r1
	bhi	.L118	@cond_branch
	mov	r0, #0x22
	ldrsh	r1, [r4, r0]
	mov	r2, #0x26
	ldrsh	r0, [r4, r2]
	add	r1, r1, r0
	cmp	r1, #0xa0
	bgt	.L118	@cond_branch
	mov	r0, #0x10
	neg	r0, r0
	cmp	r1, r0
	bge	.L116	@cond_branch
.L118:
	add	r0, r4, #0
	bl	DestroyAnimSprite
.L116:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 AnimWiggleParticleTowardsTarget,.Lfe12-AnimWiggleParticleTowardsTarget
	.align	2, 0
	.globl	AnimWaveFromCenterOfTarget
	.type	 AnimWaveFromCenterOfTarget,function
	.thumb_func
AnimWaveFromCenterOfTarget:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L120	@cond_branch
	ldr	r5, .L126
	mov	r1, #0x4
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L121	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	InitSpritePosToAnimTarget
	b	.L122
.L127:
	.align	2, 0
.L126:
	.word	gBattleAnimArgs
.L121:
	ldr	r0, .L128
	ldrb	r0, [r0]
	add	r2, r4, #0
	add	r2, r2, #0x20
	add	r3, r4, #0
	add	r3, r3, #0x22
	mov	r1, #0x0
	bl	SetAverageBattlerPositions
	ldr	r0, .L128+0x4
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L123	@cond_branch
	ldrh	r0, [r5]
	neg	r0, r0
	strh	r0, [r5]
.L123:
	ldrh	r0, [r5]
	ldrh	r1, [r4, #0x20]
	add	r0, r0, r1
	strh	r0, [r4, #0x20]
	ldrh	r0, [r5, #0x2]
	ldrh	r1, [r4, #0x22]
	add	r0, r0, r1
	strh	r0, [r4, #0x22]
.L122:
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	b	.L124
.L129:
	.align	2, 0
.L128:
	.word	gBattleAnimTarget
	.word	gBattleAnimAttacker
.L120:
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L124	@cond_branch
	add	r0, r4, #0
	bl	DestroyAnimSprite
.L124:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 AnimWaveFromCenterOfTarget,.Lfe13-AnimWaveFromCenterOfTarget
	.align	2, 0
	.globl	InitSwirlingFogAnim
	.type	 InitSwirlingFogAnim,function
	.thumb_func
InitSwirlingFogAnim:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r6, .L148
	mov	r1, #0x8
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L131	@cond_branch
	mov	r1, #0xa
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L132	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	bl	InitSpritePosToAnimAttacker
	b	.L133
.L149:
	.align	2, 0
.L148:
	.word	gBattleAnimArgs
.L132:
	ldr	r4, .L150
	ldrb	r0, [r4]
	add	r2, r5, #0
	add	r2, r2, #0x20
	add	r3, r5, #0
	add	r3, r3, #0x22
	mov	r1, #0x0
	bl	SetAverageBattlerPositions
	ldrb	r0, [r4]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L134	@cond_branch
	ldrh	r0, [r5, #0x20]
	ldrh	r1, [r6]
	sub	r0, r0, r1
	b	.L145
.L151:
	.align	2, 0
.L150:
	.word	gBattleAnimAttacker
.L134:
	ldrh	r0, [r6]
	ldrh	r1, [r5, #0x20]
	add	r0, r0, r1
.L145:
	strh	r0, [r5, #0x20]
	ldr	r0, .L152
	ldrh	r0, [r0, #0x2]
	ldrh	r1, [r5, #0x22]
	add	r0, r0, r1
	strh	r0, [r5, #0x22]
.L133:
	ldr	r0, .L152+0x4
	b	.L146
.L153:
	.align	2, 0
.L152:
	.word	gBattleAnimArgs
	.word	gBattleAnimAttacker
.L131:
	mov	r1, #0xa
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L137	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	bl	InitSpritePosToAnimTarget
	b	.L138
.L137:
	ldr	r4, .L154
	ldrb	r0, [r4]
	add	r2, r5, #0
	add	r2, r2, #0x20
	add	r3, r5, #0
	add	r3, r3, #0x22
	mov	r1, #0x0
	bl	SetAverageBattlerPositions
	ldrb	r0, [r4]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L139	@cond_branch
	ldrh	r0, [r5, #0x20]
	ldrh	r1, [r6]
	sub	r0, r0, r1
	b	.L147
.L155:
	.align	2, 0
.L154:
	.word	gBattleAnimTarget
.L139:
	ldrh	r0, [r6]
	ldrh	r1, [r5, #0x20]
	add	r0, r0, r1
.L147:
	strh	r0, [r5, #0x20]
	ldr	r0, .L156
	ldrh	r0, [r0, #0x2]
	ldrh	r1, [r5, #0x22]
	add	r0, r0, r1
	strh	r0, [r5, #0x22]
.L138:
	ldr	r0, .L156+0x4
.L146:
	ldrb	r0, [r0]
	strh	r0, [r5, #0x3c]
	ldr	r0, .L156
	mov	r1, #0xa
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	beq	.L142	@cond_branch
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L141	@cond_branch
.L142:
	mov	r0, #0x20
	b	.L143
.L157:
	.align	2, 0
.L156:
	.word	gBattleAnimArgs
	.word	gBattleAnimTarget
.L141:
	mov	r0, #0x40
.L143:
	strh	r0, [r5, #0x3a]
	ldr	r0, .L158
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L144	@cond_branch
	ldrh	r0, [r5, #0x22]
	add	r0, r0, #0x8
	strh	r0, [r5, #0x22]
.L144:
	ldr	r1, .L158+0x4
	ldrh	r0, [r1, #0x6]
	strh	r0, [r5, #0x2e]
	ldrh	r0, [r5, #0x20]
	strh	r0, [r5, #0x30]
	strh	r0, [r5, #0x32]
	ldrh	r0, [r5, #0x22]
	strh	r0, [r5, #0x34]
	ldrh	r1, [r1, #0x4]
	add	r0, r0, r1
	strh	r0, [r5, #0x36]
	add	r0, r5, #0
	bl	InitAnimLinearTranslation
	mov	r0, #0x40
	strh	r0, [r5, #0x38]
	ldr	r1, .L158+0x8
	str	r1, [r5, #0x1c]
	add	r0, r5, #0
	bl	_call_via_r1
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L159:
	.align	2, 0
.L158:
	.word	gBattleAnimTarget
	.word	gBattleAnimArgs
	.word	AnimSwirlingFogAnim
.Lfe14:
	.size	 InitSwirlingFogAnim,.Lfe14-InitSwirlingFogAnim
	.align	2, 0
	.globl	AnimSwirlingFogAnim
	.type	 AnimSwirlingFogAnim,function
	.thumb_func
AnimSwirlingFogAnim:
	push	{r4, lr}
	add	r4, r0, #0
	bl	AnimTranslateLinear
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L161	@cond_branch
	mov	r1, #0x38
	ldrsh	r0, [r4, r1]
	mov	r2, #0x3a
	ldrsh	r1, [r4, r2]
	bl	Sin
	ldrh	r1, [r4, #0x24]
	add	r0, r0, r1
	strh	r0, [r4, #0x24]
	mov	r2, #0x38
	ldrsh	r0, [r4, r2]
	mov	r1, #0x6
	neg	r1, r1
	bl	Cos
	ldrh	r1, [r4, #0x26]
	add	r0, r0, r1
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x38]
	sub	r0, r0, #0x40
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x7f
	bhi	.L162	@cond_branch
	ldrh	r0, [r4, #0x3c]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerSpriteBGPriority
	mov	r1, #0x3
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	b	.L163
.L162:
	ldrh	r0, [r4, #0x3c]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBattlerSpriteBGPriority
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, #0x1
	mov	r1, #0x3
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	ldrb	r2, [r4, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x5]
.L163:
	ldrh	r0, [r4, #0x38]
	add	r0, r0, #0x3
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x38]
	b	.L164
.L161:
	add	r0, r4, #0
	bl	DestroyAnimSprite
.L164:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 AnimSwirlingFogAnim,.Lfe15-AnimSwirlingFogAnim
	.align	2, 0
	.globl	AnimTask_Haze1
	.type	 AnimTask_Haze1,function
	.thumb_func
AnimTask_Haze1:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L167
	mov	r0, #0x50
	bl	SetGpuReg
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r0, #0x1
	mov	r1, #0x4
	mov	r2, #0x1
	bl	SetAnimBgAttribute
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetAnimBgAttribute
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L166	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x3
	mov	r2, #0x1
	bl	SetAnimBgAttribute
.L166:
	ldr	r0, .L167+0x4
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r4, .L167+0x8
	strh	r1, [r4]
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	ldrh	r1, [r4]
	mov	r0, #0x16
	bl	SetGpuReg
	mov	r0, sp
	bl	sub_80A6B30
	mov	r0, sp
	ldrb	r0, [r0, #0x9]
	ldr	r1, .L167+0xc
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	mov	r3, sp
	ldrh	r3, [r3, #0xa]
	bl	LoadBgTiles
	ldr	r1, .L167+0x10
	mov	r0, sp
	mov	r2, #0x0
	bl	sub_80A6D60
	ldr	r0, .L167+0x14
	mov	r1, sp
	ldrb	r1, [r1, #0x8]
	lsl	r1, r1, #0x4
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, .L167+0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L167+0x1c
	str	r1, [r0]
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L168:
	.align	2, 0
.L167:
	.word	0x3f42
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
	.word	gWeatherFog1Tiles
	.word	gBattleAnimFogTilemap
	.word	gUnknown_083970E8
	.word	gTasks
	.word	AnimTask_Haze2
.Lfe16:
	.size	 AnimTask_Haze1,.Lfe16-AnimTask_Haze1
	.align	2, 0
	.globl	AnimTask_Haze2
	.type	 AnimTask_Haze2,function
	.thumb_func
AnimTask_Haze2:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L184
	ldr	r2, .L184+0x4
	add	r0, r2, #0
	ldrh	r2, [r1]
	add	r0, r0, r2
	strh	r0, [r1]
	ldr	r1, .L184+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r2, #0x20
	ldrsh	r0, [r0, r2]
	add	r2, r1, #0
	cmp	r0, #0x4
	bls	.LCB1805
	b	.L170	@long jump
.LCB1805:
	lsl	r0, r0, #0x2
	ldr	r1, .L184+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L185:
	.align	2, 0
.L184:
	.word	gBattle_BG1_X
	.word	0xffff
	.word	gTasks
	.word	.L182
	.align	2, 0
	.align	2, 0
.L182:
	.word	.L171
	.word	.L174
	.word	.L176
	.word	.L179
	.word	.L180
.L171:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r4, r0, r2
	ldrh	r0, [r4, #0x1c]
	add	r0, r0, #0x1
	mov	r5, #0x0
	strh	r0, [r4, #0x1c]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	beq	.LCB1839
	b	.L170	@long jump
.LCB1839:
	strh	r5, [r4, #0x1c]
	ldrh	r0, [r4, #0x1a]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x1a]
	ldr	r1, .L186
	mov	r2, #0x1a
	ldrsh	r0, [r4, r2]
	add	r0, r0, r1
	ldrb	r1, [r0]
	strh	r1, [r4, #0x1e]
	mov	r0, #0x10
	sub	r0, r0, r1
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r1, #0x1e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x9
	bne	.L170	@cond_branch
	ldrh	r0, [r4, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x20]
	strh	r5, [r4, #0x1e]
	b	.L170
.L187:
	.align	2, 0
.L186:
	.word	gUnknown_08595C5C
.L174:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r1, r0, r2
	ldrh	r0, [r1, #0x1e]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x1e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x51
	bne	.L170	@cond_branch
	mov	r0, #0x9
	strh	r0, [r1, #0x1e]
	ldrh	r0, [r1, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x20]
	b	.L170
.L176:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r4, r0, r2
	ldrh	r0, [r4, #0x1c]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x1c]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	bne	.L170	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x1c]
	ldrh	r1, [r4, #0x1e]
	sub	r1, r1, #0x1
	strh	r1, [r4, #0x1e]
	mov	r0, #0x10
	sub	r0, r0, r1
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r2, #0x1e
	ldrsh	r1, [r4, r2]
	cmp	r1, #0
	bne	.L170	@cond_branch
	ldrh	r0, [r4, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x20]
	strh	r1, [r4, #0x1e]
	b	.L170
.L179:
	mov	r0, sp
	bl	sub_80A6B30
	mov	r0, #0x1
	bl	sub_80A6C68
	mov	r0, #0x2
	bl	sub_80A6C68
	ldr	r0, .L188
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x20]
.L180:
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L181	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x3
	mov	r2, #0x0
	bl	SetAnimBgAttribute
.L181:
	ldr	r0, .L188+0x4
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L188+0x8
	strh	r1, [r0]
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1
	mov	r1, #0x4
	mov	r2, #0x1
	bl	SetAnimBgAttribute
	add	r0, r4, #0
	bl	DestroyAnimVisualTask
.L170:
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L189:
	.align	2, 0
.L188:
	.word	gTasks
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
.Lfe17:
	.size	 AnimTask_Haze2,.Lfe17-AnimTask_Haze2
	.align	2, 0
	.globl	AnimThrowMistBall
	.type	 AnimThrowMistBall,function
	.thumb_func
AnimThrowMistBall:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r5, .L191
	ldrb	r0, [r5]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x20]
	ldrb	r0, [r5]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x22]
	ldr	r0, .L191+0x4
	str	r0, [r4, #0x1c]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L192:
	.align	2, 0
.L191:
	.word	gBattleAnimAttacker
	.word	TranslateAnimSpriteToTargetMonLocation
.Lfe18:
	.size	 AnimThrowMistBall,.Lfe18-AnimThrowMistBall
	.align	2, 0
	.globl	AnimTask_LoadMistTiles
	.type	 AnimTask_LoadMistTiles,function
	.thumb_func
AnimTask_LoadMistTiles:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L195
	mov	r0, #0x50
	bl	SetGpuReg
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r0, #0x1
	mov	r1, #0x4
	mov	r2, #0x1
	bl	SetAnimBgAttribute
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetAnimBgAttribute
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L194	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x3
	mov	r2, #0x1
	bl	SetAnimBgAttribute
.L194:
	ldr	r0, .L195+0x4
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r4, .L195+0x8
	strh	r1, [r4]
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	ldrh	r1, [r4]
	mov	r0, #0x16
	bl	SetGpuReg
	mov	r0, sp
	bl	sub_80A6B30
	mov	r0, sp
	ldrb	r0, [r0, #0x9]
	ldr	r1, .L195+0xc
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	mov	r3, sp
	ldrh	r3, [r3, #0xa]
	bl	LoadBgTiles
	ldr	r1, .L195+0x10
	mov	r0, sp
	mov	r2, #0x0
	bl	sub_80A6D60
	ldr	r0, .L195+0x14
	mov	r1, sp
	ldrb	r1, [r1, #0x8]
	lsl	r1, r1, #0x4
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, .L195+0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L195+0x1c
	strh	r1, [r0, #0x26]
	ldr	r1, .L195+0x20
	str	r1, [r0]
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L196:
	.align	2, 0
.L195:
	.word	0x3f42
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
	.word	gWeatherFog1Tiles
	.word	gBattleAnimFogTilemap
	.word	gUnknown_083970E8
	.word	gTasks
	.word	0xffff
	.word	AnimTask_OverlayFogTiles
.Lfe19:
	.size	 AnimTask_LoadMistTiles,.Lfe19-AnimTask_LoadMistTiles
	.align	2, 0
	.globl	AnimTask_OverlayFogTiles
	.type	 AnimTask_OverlayFogTiles,function
	.thumb_func
AnimTask_OverlayFogTiles:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r2, .L211
	ldr	r3, .L211+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r3
	ldrh	r0, [r1, #0x26]
	ldrh	r5, [r2]
	add	r0, r0, r5
	strh	r0, [r2]
	mov	r2, #0x20
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x4
	bls	.LCB2177
	b	.L198	@long jump
.LCB2177:
	lsl	r0, r0, #0x2
	ldr	r1, .L211+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L212:
	.align	2, 0
.L211:
	.word	gBattle_BG1_X
	.word	gTasks
	.word	.L209
	.align	2, 0
	.align	2, 0
.L209:
	.word	.L199
	.word	.L201
	.word	.L203
	.word	.L206
	.word	.L207
.L199:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r4, r0, r3
	ldrh	r0, [r4, #0x1a]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x1a]
	ldr	r1, .L213
	mov	r5, #0x1a
	ldrsh	r0, [r4, r5]
	add	r0, r0, r1
	ldrb	r1, [r0]
	strh	r1, [r4, #0x1e]
	mov	r0, #0x11
	sub	r0, r0, r1
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r1, #0x1e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x5
	bne	.L198	@cond_branch
	ldrh	r0, [r4, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x20]
	mov	r0, #0x0
	strh	r0, [r4, #0x1e]
	b	.L198
.L214:
	.align	2, 0
.L213:
	.word	gUnknown_08595C88
.L201:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r1, r0, r3
	ldrh	r0, [r1, #0x1e]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x1e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x51
	bne	.L198	@cond_branch
	mov	r0, #0x5
	strh	r0, [r1, #0x1e]
	ldrh	r0, [r1, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x20]
	b	.L198
.L203:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r4, r0, r3
	ldrh	r0, [r4, #0x1c]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x1c]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	bne	.L198	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x1c]
	ldrh	r1, [r4, #0x1e]
	sub	r1, r1, #0x1
	strh	r1, [r4, #0x1e]
	mov	r0, #0x10
	sub	r0, r0, r1
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r2, #0x1e
	ldrsh	r1, [r4, r2]
	cmp	r1, #0
	bne	.L198	@cond_branch
	ldrh	r0, [r4, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x20]
	strh	r1, [r4, #0x1e]
	b	.L198
.L206:
	mov	r0, sp
	bl	sub_80A6B30
	mov	r0, #0x1
	bl	sub_80A6C68
	mov	r0, #0x2
	bl	sub_80A6C68
	ldr	r0, .L215
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x20]
.L207:
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L208	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x3
	mov	r2, #0x0
	bl	SetAnimBgAttribute
.L208:
	ldr	r0, .L215+0x4
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L215+0x8
	strh	r1, [r0]
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1
	mov	r1, #0x4
	mov	r2, #0x1
	bl	SetAnimBgAttribute
	add	r0, r4, #0
	bl	DestroyAnimVisualTask
.L198:
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L216:
	.align	2, 0
.L215:
	.word	gTasks
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
.Lfe20:
	.size	 AnimTask_OverlayFogTiles,.Lfe20-AnimTask_OverlayFogTiles
	.align	2, 0
	.globl	InitPoisonGasCloudAnim
	.type	 InitPoisonGasCloudAnim,function
	.thumb_func
InitPoisonGasCloudAnim:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r5, r0, #0
	ldr	r6, .L225
	ldrh	r0, [r6]
	strh	r0, [r5, #0x2e]
	ldr	r0, .L225+0x4
	mov	r8, r0
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	add	r4, r0, #0
	ldr	r7, .L225+0x8
	ldrb	r0, [r7]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bcs	.L218	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	strh	r0, [r5, #0x3c]
.L218:
	ldr	r3, .L225+0xc
	ldrb	r0, [r7]
	add	r0, r0, r3
	ldrb	r1, [r0]
	mov	r2, #0x1
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L219	@cond_branch
	ldrh	r0, [r6, #0x2]
	neg	r0, r0
	strh	r0, [r6, #0x2]
	ldrh	r0, [r6, #0x6]
	neg	r0, r0
	strh	r0, [r6, #0x6]
	mov	r1, #0x3c
	ldrsh	r0, [r5, r1]
	mov	r1, #0x80
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L220	@cond_branch
	mov	r1, r8
	ldrb	r0, [r1]
	add	r0, r0, r3
	ldrb	r1, [r0]
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L220	@cond_branch
	mov	r0, #0x1
	bl	GetAnimBattlerSpriteId
	ldr	r2, .L225+0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	add	r1, r1, #0x43
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	add	r1, r5, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
.L220:
	mov	r0, #0x1
	strh	r0, [r5, #0x3a]
.L219:
	ldr	r4, .L225+0x4
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x20]
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x22]
	ldr	r6, .L225
	mov	r1, #0xe
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	beq	.L221	@cond_branch
	ldrh	r0, [r6, #0x2]
	ldrh	r1, [r5, #0x20]
	add	r0, r0, r1
	strh	r0, [r5, #0x30]
	ldr	r4, .L225+0x8
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r6, #0x6]
	add	r0, r0, r1
	strh	r0, [r5, #0x32]
	ldrh	r0, [r6, #0x4]
	ldrh	r1, [r5, #0x22]
	add	r0, r0, r1
	strh	r0, [r5, #0x34]
	ldrb	r0, [r4]
	mov	r1, #0x3
	b	.L224
.L226:
	.align	2, 0
.L225:
	.word	gBattleAnimArgs
	.word	gBattleAnimAttacker
	.word	gBattleAnimTarget
	.word	gBattlerPositions
	.word	gSprites
.L221:
	ldrh	r0, [r6, #0x2]
	ldrh	r1, [r5, #0x20]
	add	r0, r0, r1
	strh	r0, [r5, #0x30]
	ldr	r4, .L227
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r6, #0x6]
	add	r0, r0, r1
	strh	r0, [r5, #0x32]
	ldrh	r0, [r6, #0x4]
	ldrh	r1, [r5, #0x22]
	add	r0, r0, r1
	strh	r0, [r5, #0x34]
	ldrb	r0, [r4]
	mov	r1, #0x1
.L224:
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r6, [r6, #0x8]
	add	r0, r0, r6
	strh	r0, [r5, #0x36]
	ldrb	r0, [r4]
	bl	GetBattlerSpriteBGPriority
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x10
	ldrh	r1, [r5, #0x3c]
	orr	r0, r0, r1
	strh	r0, [r5, #0x3c]
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L223	@cond_branch
	mov	r0, #0x1
	strh	r0, [r5, #0x3a]
	add	r1, r5, #0
	add	r1, r1, #0x43
	mov	r0, #0x80
	strb	r0, [r1]
.L223:
	add	r0, r5, #0
	bl	InitAnimLinearTranslation
	ldr	r0, .L227+0x4
	str	r0, [r5, #0x1c]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L228:
	.align	2, 0
.L227:
	.word	gBattleAnimTarget
	.word	MovePoisonGasCloud
.Lfe21:
	.size	 InitPoisonGasCloudAnim,.Lfe21-InitPoisonGasCloudAnim
	.align	2, 0
	.globl	MovePoisonGasCloud
	.type	 MovePoisonGasCloud,function
	.thumb_func
MovePoisonGasCloud:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x3c]
	mov	r5, #0xff
	mov	r1, #0xff
	and	r1, r1, r0
	cmp	r1, #0x1
	beq	.L239	@cond_branch
	cmp	r1, #0x1
	bgt	.L256	@cond_branch
	cmp	r1, #0
	beq	.L231	@cond_branch
	b	.L230
.L256:
	cmp	r1, #0x2
	bne	.LCB2613
	b	.L251	@long jump
.LCB2613:
	b	.L230
.L231:
	add	r0, r4, #0
	bl	AnimTranslateLinear
	ldr	r1, .L263
	mov	r2, #0x38
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	asr	r0, r0, #0x4
	ldrh	r2, [r4, #0x24]
	add	r0, r0, r2
	strh	r0, [r4, #0x24]
	mov	r1, #0x3a
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L232	@cond_branch
	ldrh	r0, [r4, #0x38]
	sub	r0, r0, #0x8
	b	.L257
.L264:
	.align	2, 0
.L263:
	.word	gSineTable
.L232:
	ldrh	r0, [r4, #0x38]
	add	r0, r0, #0x8
.L257:
	and	r0, r0, r5
	strh	r0, [r4, #0x38]
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	ble	.LCB2656
	b	.L230	@long jump
.LCB2656:
	mov	r5, #0x50
	strh	r5, [r4, #0x2e]
	ldr	r6, .L265
	ldrb	r0, [r6]
	mov	r1, #0x0
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x20]
	strh	r0, [r4, #0x30]
	strh	r0, [r4, #0x32]
	ldrh	r0, [r4, #0x26]
	ldrh	r1, [r4, #0x22]
	add	r0, r0, r1
	strh	r0, [r4, #0x22]
	strh	r0, [r4, #0x34]
	add	r0, r0, #0x1d
	strh	r0, [r4, #0x36]
	ldrh	r0, [r4, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x3c]
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L237	@cond_branch
	ldr	r1, .L265+0x4
	ldrb	r0, [r6]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L237	@cond_branch
	mov	r0, #0xcc
	strh	r0, [r4, #0x38]
	b	.L236
.L266:
	.align	2, 0
.L265:
	.word	gBattleAnimTarget
	.word	gBattlerPositions
.L237:
	strh	r5, [r4, #0x38]
.L236:
	mov	r0, #0x0
	strh	r0, [r4, #0x26]
	ldr	r1, .L267
	mov	r2, #0x38
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	asr	r0, r0, #0x3
	strh	r0, [r4, #0x24]
	ldrh	r0, [r4, #0x38]
	add	r0, r0, #0x2
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x38]
	add	r0, r4, #0
	bl	InitAnimLinearTranslation
	b	.L230
.L268:
	.align	2, 0
.L267:
	.word	gSineTable
.L239:
	add	r0, r4, #0
	bl	AnimTranslateLinear
	ldr	r1, .L269
	mov	r2, #0x38
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	asr	r0, r0, #0x3
	ldrh	r2, [r4, #0x24]
	add	r0, r0, r2
	strh	r0, [r4, #0x24]
	mov	r2, #0x38
	ldrsh	r0, [r4, r2]
	add	r0, r0, #0x40
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	neg	r0, r0
	asr	r0, r0, #0x8
	ldrh	r1, [r4, #0x26]
	add	r0, r0, r1
	strh	r0, [r4, #0x26]
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L240	@cond_branch
	ldrh	r1, [r4, #0x38]
	add	r0, r1, #0
	sub	r0, r0, #0x40
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r3, r1, #0
	cmp	r0, #0x7f
	bhi	.L241	@cond_branch
	ldrh	r1, [r4, #0x3c]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x18
	b	.L258
.L270:
	.align	2, 0
.L269:
	.word	gSineTable
.L241:
	ldrh	r1, [r4, #0x3c]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x18
	add	r1, r1, #0x1
.L258:
	mov	r0, #0x3
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	add	r0, r3, #0x4
	b	.L259
.L240:
	ldrh	r0, [r4, #0x38]
	sub	r0, r0, #0x40
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x7f
	bhi	.L244	@cond_branch
	add	r1, r4, #0
	add	r1, r1, #0x43
	mov	r0, #0x80
	b	.L260
.L244:
	add	r1, r4, #0
	add	r1, r1, #0x43
	mov	r0, #0x8c
.L260:
	strb	r0, [r1]
	ldrh	r0, [r4, #0x38]
	sub	r0, r0, #0x4
.L259:
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x38]
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bgt	.L230	@cond_branch
	mov	r5, #0x0
	mov	r0, #0xc0
	lsl	r0, r0, #0x2
	strh	r0, [r4, #0x2e]
	ldrh	r0, [r4, #0x24]
	ldrh	r1, [r4, #0x20]
	add	r0, r0, r1
	strh	r0, [r4, #0x20]
	strh	r0, [r4, #0x30]
	ldrh	r0, [r4, #0x26]
	ldrh	r2, [r4, #0x22]
	add	r0, r0, r2
	strh	r0, [r4, #0x22]
	strh	r0, [r4, #0x34]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x36]
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L249	@cond_branch
	ldr	r1, .L271
	ldr	r0, .L271+0x4
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L249	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	b	.L262
.L272:
	.align	2, 0
.L271:
	.word	gBattlerPositions
	.word	gBattleAnimTarget
.L249:
	ldr	r0, .L273
.L262:
	strh	r0, [r4, #0x32]
	ldrh	r0, [r4, #0x3c]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r4, #0x3c]
	strh	r1, [r4, #0x26]
	strh	r1, [r4, #0x24]
	add	r0, r4, #0
	bl	sub_80A6FD4
	b	.L230
.L274:
	.align	2, 0
.L273:
	.word	0xfff0
.L251:
	add	r0, r4, #0
	bl	AnimTranslateLinear
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L230	@cond_branch
	ldrb	r0, [r4, #0x1]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L253	@cond_branch
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x1]
.L253:
	add	r0, r4, #0
	bl	DestroySprite
	ldr	r1, .L275
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
.L230:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L276:
	.align	2, 0
.L275:
	.word	gAnimVisualTaskCount
.Lfe22:
	.size	 MovePoisonGasCloud,.Lfe22-MovePoisonGasCloud
	.align	2, 0
	.globl	AnimTask_Hail1
	.type	 AnimTask_Hail1,function
	.thumb_func
AnimTask_Hail1:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L278
	add	r1, r1, r0
	ldr	r0, .L278+0x4
	str	r0, [r1]
	bx	lr
.L279:
	.align	2, 0
.L278:
	.word	gTasks
	.word	AnimTask_Hail2
.Lfe23:
	.size	 AnimTask_Hail1,.Lfe23-AnimTask_Hail1
	.align	2, 0
	.globl	AnimTask_Hail2
	.type	 AnimTask_Hail2,function
	.thumb_func
AnimTask_Hail2:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r1, .L298
	add	r4, r0, r1
	mov	r0, #0x8
	ldrsh	r5, [r4, r0]
	cmp	r5, #0x1
	beq	.L284	@cond_branch
	cmp	r5, #0x1
	bgt	.L296	@cond_branch
	cmp	r5, #0
	beq	.L282	@cond_branch
	b	.L281
.L299:
	.align	2, 0
.L298:
	.word	gTasks
.L296:
	cmp	r5, #0x2
	beq	.L292	@cond_branch
	b	.L281
.L282:
	ldrh	r0, [r4, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x10]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L281	@cond_branch
	strh	r5, [r4, #0x10]
	strh	r5, [r4, #0x12]
	strh	r5, [r4, #0xc]
	b	.L297
.L284:
	ldrh	r1, [r4, #0x12]
	mov	r3, #0x12
	ldrsh	r0, [r4, r3]
	cmp	r0, #0
	bne	.L285	@cond_branch
	ldrb	r0, [r4, #0xe]
	ldrb	r1, [r4, #0xc]
	mov	r3, #0x1
	bl	GenerateHailParticle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L286	@cond_branch
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
.L286:
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bne	.L287	@cond_branch
	ldrh	r0, [r4, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xa
	bne	.L288	@cond_branch
.L297:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L281
.L288:
	ldrh	r0, [r4, #0x8]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L281
.L287:
	strh	r5, [r4, #0x12]
	b	.L281
.L285:
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x12]
	b	.L281
.L292:
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L281	@cond_branch
	add	r0, r2, #0
	bl	DestroyAnimVisualTask
.L281:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 AnimTask_Hail2,.Lfe24-AnimTask_Hail2
	.align	2, 0
	.globl	GenerateHailParticle
	.type	 GenerateHailParticle,function
	.thumb_func
GenerateHailParticle:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	sl, r3
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	ldr	r1, .L314
	lsr	r0, r0, #0x16
	add	r4, r0, r1
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x1c
	mov	r8, r0
	cmp	r0, #0x2
	beq	.L301	@cond_branch
	ldrh	r0, [r4, #0x2]
	lsl	r0, r0, #0x14
	lsr	r0, r0, #0x18
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r5, #0
	bl	IsBattlerSpriteVisible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L302	@cond_branch
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	add	r0, r5, #0
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	add	r0, r5, #0
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r1, r8
	cmp	r1, #0
	beq	.L304	@cond_branch
	cmp	r1, #0x1
	beq	.L305	@cond_branch
	b	.L309
.L315:
	.align	2, 0
.L314:
	.word	gUnknown_08595CB4
.L304:
	add	r0, r5, #0
	mov	r1, #0x1
	bl	GetBattlerSpriteCoordAttr
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x6
	bl	__divsi3
	lsl	r1, r7, #0x10
	asr	r1, r1, #0x10
	sub	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	add	r0, r5, #0
	mov	r1, #0x0
	bl	GetBattlerSpriteCoordAttr
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x6
	bl	__divsi3
	lsl	r1, r6, #0x10
	asr	r1, r1, #0x10
	sub	r1, r1, r0
	b	.L313
.L305:
	add	r0, r5, #0
	mov	r1, #0x1
	bl	GetBattlerSpriteCoordAttr
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x6
	bl	__divsi3
	lsl	r1, r7, #0x10
	asr	r1, r1, #0x10
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	add	r0, r5, #0
	mov	r1, #0x0
	bl	GetBattlerSpriteCoordAttr
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x6
	bl	__divsi3
	lsl	r1, r6, #0x10
	asr	r1, r1, #0x10
	add	r1, r1, r0
.L313:
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	b	.L309
.L302:
.L301:
	ldrh	r0, [r4]
	lsl	r0, r0, #0x16
	asr	r0, r0, #0x6
	lsr	r7, r0, #0x10
	ldr	r0, [r4]
	lsl	r0, r0, #0xc
	asr	r0, r0, #0x16
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
.L309:
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	add	r0, r0, #0x8
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	lsl	r1, r7, #0x10
	asr	r1, r1, #0x10
	sub	r1, r1, r0
	ldr	r0, .L316
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r2, #0x8
	neg	r2, r2
	mov	r3, #0x12
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x40
	beq	.L310	@cond_branch
	lsl	r4, r5, #0x4
	add	r4, r4, r5
	lsl	r4, r4, #0x2
	ldr	r0, .L316+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, r9
	bl	StartSpriteAffineAnim
	mov	r0, sp
	ldrh	r0, [r0, #0x4]
	strh	r0, [r4, #0x2e]
	strh	r7, [r4, #0x34]
	strh	r6, [r4, #0x36]
	mov	r1, r9
	strh	r1, [r4, #0x38]
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r4, #0x3a]
	mov	r1, sl
	strh	r1, [r4, #0x3c]
	mov	r0, #0x1
	b	.L312
.L317:
	.align	2, 0
.L316:
	.word	gUnknown_08595D2C
	.word	gSprites
.L310:
	mov	r0, #0x0
.L312:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe25:
	.size	 GenerateHailParticle,.Lfe25-GenerateHailParticle
	.align	2, 0
	.globl	AnimHailBegin
	.type	 AnimHailBegin,function
	.thumb_func
AnimHailBegin:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x20]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x20]
	ldrh	r1, [r4, #0x22]
	add	r2, r1, #0
	add	r2, r2, #0x8
	strh	r2, [r4, #0x22]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r3, #0x34
	ldrsh	r1, [r4, r3]
	cmp	r0, r1
	bge	.L319	@cond_branch
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x36
	ldrsh	r1, [r4, r2]
	cmp	r0, r1
	blt	.L318	@cond_branch
.L319:
	mov	r3, #0x2e
	ldrsh	r0, [r4, r3]
	cmp	r0, #0x1
	bne	.L320	@cond_branch
	mov	r1, #0x38
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L320	@cond_branch
	ldr	r0, .L323
	mov	r2, #0x34
	ldrsh	r1, [r4, r2]
	mov	r3, #0x36
	ldrsh	r2, [r4, r3]
	add	r3, r4, #0
	add	r3, r3, #0x43
	ldrb	r3, [r3]
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x2e]
	cmp	r0, #0x40
	beq	.L321	@cond_branch
	ldr	r2, .L323+0x4
	mov	r0, #0x2e
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r2, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L323+0x8
	str	r1, [r0]
	mov	r3, #0x2e
	ldrsh	r1, [r4, r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r1, [r4, #0x3a]
	strh	r1, [r0, #0x3a]
	mov	r0, #0x2e
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r1, [r4, #0x3c]
	strh	r1, [r0, #0x3c]
.L321:
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	add	r0, r4, #0
	bl	DestroySprite
	b	.L318
.L324:
	.align	2, 0
.L323:
	.word	gUnknown_08595B68
	.word	gSprites
	.word	AnimHailContinue
.L320:
	ldr	r3, .L325
	mov	r2, #0x3c
	ldrsh	r1, [r4, r2]
	lsl	r1, r1, #0x1
	mov	r0, #0x3a
	ldrsh	r2, [r4, r0]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	add	r3, r3, #0x8
	add	r1, r1, r3
	ldrh	r0, [r1]
	sub	r0, r0, #0x1
	strh	r0, [r1]
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	add	r0, r4, #0
	bl	DestroySprite
.L318:
	pop	{r4}
	pop	{r0}
	bx	r0
.L326:
	.align	2, 0
.L325:
	.word	gTasks
.Lfe26:
	.size	 AnimHailBegin,.Lfe26-AnimHailBegin
	.align	2, 0
	.globl	AnimHailContinue
	.type	 AnimHailContinue,function
	.thumb_func
AnimHailContinue:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	bne	.L328	@cond_branch
	ldr	r3, .L329
	mov	r0, #0x3c
	ldrsh	r1, [r4, r0]
	lsl	r1, r1, #0x1
	mov	r0, #0x3a
	ldrsh	r2, [r4, r0]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	add	r3, r3, #0x8
	add	r1, r1, r3
	ldrh	r0, [r1]
	sub	r0, r0, #0x1
	strh	r0, [r1]
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	add	r0, r4, #0
	bl	DestroySprite
.L328:
	pop	{r4}
	pop	{r0}
	bx	r0
.L330:
	.align	2, 0
.L329:
	.word	gTasks
.Lfe27:
	.size	 AnimHailContinue,.Lfe27-AnimHailContinue
	.align	2, 0
	.globl	InitIceBallAnim
	.type	 InitIceBallAnim,function
	.thumb_func
InitIceBallAnim:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r0, .L334
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x11]
	lsr	r0, r1, #0x4
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	sub	r0, r0, r1
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x4
	bls	.L332	@cond_branch
	mov	r1, #0x4
.L332:
	add	r0, r5, #0
	bl	StartSpriteAffineAnim
	add	r0, r5, #0
	mov	r1, #0x1
	bl	InitSpritePosToAnimAttacker
	ldr	r6, .L334+0x4
	ldrh	r0, [r6, #0x8]
	strh	r0, [r5, #0x2e]
	ldr	r0, .L334+0x8
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L333	@cond_branch
	ldrh	r0, [r6, #0x4]
	neg	r0, r0
	strh	r0, [r6, #0x4]
.L333:
	ldr	r4, .L334+0xc
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r6, #0x4]
	add	r0, r0, r1
	strh	r0, [r5, #0x32]
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r6, #0x6]
	add	r0, r0, r1
	strh	r0, [r5, #0x36]
	ldrh	r0, [r6, #0xa]
	strh	r0, [r5, #0x38]
	add	r0, r5, #0
	bl	InitAnimArcTranslation
	ldr	r0, .L334+0x10
	str	r0, [r5, #0x1c]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L335:
	.align	2, 0
.L334:
	.word	gAnimDisableStructPtr
	.word	gBattleAnimArgs
	.word	gBattleAnimAttacker
	.word	gBattleAnimTarget
	.word	AnimThrowIceBall
.Lfe28:
	.size	 InitIceBallAnim,.Lfe28-InitIceBallAnim
	.align	2, 0
	.globl	AnimThrowIceBall
	.type	 AnimThrowIceBall,function
	.thumb_func
AnimThrowIceBall:
	push	{r4, lr}
	add	r4, r0, #0
	bl	TranslateAnimHorizontalArc
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L336	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1
	bl	StartSpriteAnim
	ldr	r0, .L338
	str	r0, [r4, #0x1c]
	ldr	r1, .L338+0x4
	add	r0, r4, #0
	bl	StoreSpriteCallbackInData6
.L336:
	pop	{r4}
	pop	{r0}
	bx	r0
.L339:
	.align	2, 0
.L338:
	.word	RunStoredCallbackWhenAnimEnds
	.word	DestroyAnimSprite
.Lfe29:
	.size	 AnimThrowIceBall,.Lfe29-AnimThrowIceBall
	.align	2, 0
	.globl	InitIceBallParticle
	.type	 InitIceBallParticle,function
	.thumb_func
InitIceBallParticle:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	ldrh	r2, [r4, #0x4]
	lsl	r1, r2, #0x16
	lsr	r1, r1, #0x16
	add	r1, r1, #0x8
	ldr	r3, .L342
	add	r0, r3, #0
	and	r1, r1, r0
	ldr	r0, .L342+0x4
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r4, #0x4]
	add	r0, r4, #0
	mov	r1, #0x1
	bl	InitSpritePosToAnimTarget
	bl	Random2
	mov	r5, #0xff
	and	r5, r5, r0
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	add	r6, r0, #0
	orr	r5, r5, r6
	bl	Random2
	ldr	r1, .L342+0x8
	and	r1, r1, r0
	add	r0, r1, #0
	cmp	r0, #0xff
	ble	.L341	@cond_branch
	sub	r0, r6, r0
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
.L341:
	strh	r5, [r4, #0x30]
	strh	r1, [r4, #0x32]
	ldr	r0, .L342+0xc
	str	r0, [r4, #0x1c]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L343:
	.align	2, 0
.L342:
	.word	0x3ff
	.word	-0x400
	.word	0x1ff
	.word	AnimIceBallParticle
.Lfe30:
	.size	 InitIceBallParticle,.Lfe30-InitIceBallParticle
	.align	2, 0
	.globl	AnimIceBallParticle
	.type	 AnimIceBallParticle,function
	.thumb_func
AnimIceBallParticle:
	push	{r4, lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x30]
	ldrh	r1, [r2, #0x34]
	add	r3, r0, r1
	strh	r3, [r2, #0x34]
	ldrh	r1, [r2, #0x32]
	ldrh	r4, [r2, #0x36]
	add	r1, r1, r4
	strh	r1, [r2, #0x36]
	mov	r1, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L345	@cond_branch
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x18
	neg	r0, r0
	b	.L348
.L345:
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x18
.L348:
	strh	r0, [r2, #0x24]
	ldrh	r0, [r2, #0x36]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x18
	strh	r0, [r2, #0x26]
	ldrh	r0, [r2, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x15
	bne	.L347	@cond_branch
	add	r0, r2, #0
	bl	DestroyAnimSprite
.L347:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 AnimIceBallParticle,.Lfe31-AnimIceBallParticle
	.align	2, 0
	.globl	AnimTask_GetRolloutCounter
	.type	 AnimTask_GetRolloutCounter,function
	.thumb_func
AnimTask_GetRolloutCounter:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L350
	ldrb	r3, [r1]
	lsl	r3, r3, #0x1
	add	r3, r3, r1
	ldr	r1, .L350+0x4
	ldr	r1, [r1]
	ldrb	r1, [r1, #0x11]
	lsr	r2, r1, #0x4
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	sub	r2, r2, r1
	sub	r2, r2, #0x1
	strh	r2, [r3]
	bl	DestroyAnimVisualTask
	pop	{r0}
	bx	r0
.L351:
	.align	2, 0
.L350:
	.word	gBattleAnimArgs
	.word	gAnimDisableStructPtr
.Lfe32:
	.size	 AnimTask_GetRolloutCounter,.Lfe32-AnimTask_GetRolloutCounter
.text
	.align	2, 0

